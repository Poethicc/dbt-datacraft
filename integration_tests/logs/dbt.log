[0m14:46:20.873330 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:20.874240 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:20.881111 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:20.883172 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:20.884876 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m14:46:20.886437 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




  ...
[0m14:46:20.889708 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:20.891639 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m14:46:20.892343 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




  ...
[0m14:46:20.895745 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:20.897603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m14:46:20.903273 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:20.904141 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:20.905448 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m14:46:20.910084 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m14:46:20.915549 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:20.919775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m14:46:20.921396 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:20.923114 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-07-18 14:46:20.836790 => 2024-07-18 14:46:20.923040
[0m14:46:20.924292 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cf75ed0>]}
[0m14:46:20.925354 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:20.928025 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-07-18 14:46:20.843565 => 2024-07-18 14:46:20.927907
[0m14:46:20.926351 [info ] [Thread-2 (]: 78 of 95 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.12s]
[0m14:46:20.929607 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8d04cf70>]}
[0m14:46:20.930173 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m14:46:20.930739 [info ] [Thread-1 (]: 79 of 95 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.10s]
[0m14:46:20.932195 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m14:46:20.932753 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m14:46:20.933869 [info ] [Thread-2 (]: 80 of 95 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m14:46:20.934337 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m14:46:20.935201 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m14:46:20.935960 [info ] [Thread-1 (]: 81 of 95 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m14:46:20.936427 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m14:46:20.937594 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m14:46:20.938164 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m14:46:20.938640 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m14:46:20.945067 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m14:46:20.945636 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m14:46:20.950449 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m14:46:20.952521 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-07-18 14:46:20.938964 => 2024-07-18 14:46:20.952229
[0m14:46:20.953012 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-07-18 14:46:20.946460 => 2024-07-18 14:46:20.952924
[0m14:46:20.953543 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m14:46:20.954084 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m14:46:20.961939 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




    )
        ...
[0m14:46:20.968123 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




    )
        ...
[0m14:46:20.987996 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:20.991307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:20.992167 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:20.997188 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:20.998887 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.001319 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m14:46:21.003301 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.005215 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m14:46:21.005810 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




  ...
[0m14:46:21.007554 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




  ...
[0m14:46:21.015401 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.016184 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.017901 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m14:46:21.019237 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m14:46:21.024857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.029524 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m14:46:21.030977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.037281 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m14:46:21.038103 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.040586 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-07-18 14:46:20.955155 => 2024-07-18 14:46:21.040489
[0m14:46:21.041438 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:21.042348 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cd93fd0>]}
[0m14:46:21.044268 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-07-18 14:46:20.962455 => 2024-07-18 14:46:21.044201
[0m14:46:21.045397 [info ] [Thread-2 (]: 80 of 95 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.11s]
[0m14:46:21.046953 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8d0cf6d0>]}
[0m14:46:21.047384 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m14:46:21.047838 [info ] [Thread-1 (]: 81 of 95 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.11s]
[0m14:46:21.048661 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m14:46:21.050282 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m14:46:21.050631 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m14:46:21.050988 [info ] [Thread-2 (]: 82 of 95 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m14:46:21.051699 [info ] [Thread-1 (]: 83 of 95 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m14:46:21.052792 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m14:46:21.053518 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m14:46:21.053818 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m14:46:21.054015 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m14:46:21.054424 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m14:46:21.054832 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m14:46:21.143698 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m14:46:21.149654 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m14:46:21.150944 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-07-18 14:46:21.055071 => 2024-07-18 14:46:21.150776
[0m14:46:21.151398 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-07-18 14:46:21.144139 => 2024-07-18 14:46:21.151278
[0m14:46:21.151942 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m14:46:21.152465 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m14:46:21.156980 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m14:46:21.162107 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m14:46:21.181584 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:21.184722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:21.185487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:21.190324 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:21.191123 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.194006 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m14:46:21.196035 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m14:46:21.197446 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.199384 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m14:46:21.200224 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m14:46:21.209195 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.210063 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.211395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m14:46:21.213068 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m14:46:21.219280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.223817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m14:46:21.224627 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.229869 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m14:46:21.231371 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.233221 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-07-18 14:46:21.152777 => 2024-07-18 14:46:21.233143
[0m14:46:21.233991 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cf4d660>]}
[0m14:46:21.234655 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:21.235920 [info ] [Thread-2 (]: 82 of 95 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.18s]
[0m14:46:21.238158 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-07-18 14:46:21.157426 => 2024-07-18 14:46:21.238083
[0m14:46:21.238897 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m14:46:21.239884 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cf4d1e0>]}
[0m14:46:21.241359 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m14:46:21.242003 [info ] [Thread-1 (]: 83 of 95 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.19s]
[0m14:46:21.242900 [info ] [Thread-2 (]: 84 of 95 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m14:46:21.243597 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m14:46:21.244953 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m14:46:21.246127 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m14:46:21.246527 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m14:46:21.252664 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m14:46:21.255180 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m14:46:21.255921 [info ] [Thread-1 (]: 85 of 95 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m14:46:21.257327 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m14:46:21.257761 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m14:46:21.258111 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m14:46:21.262052 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m14:46:21.262651 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-07-18 14:46:21.247031 => 2024-07-18 14:46:21.262505
[0m14:46:21.263412 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m14:46:21.269239 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




    )
        ...
[0m14:46:21.270836 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-07-18 14:46:21.258427 => 2024-07-18 14:46:21.270571
[0m14:46:21.271277 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m14:46:21.275632 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




    )
        ...
[0m14:46:21.285531 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:21.289081 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:21.291035 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:21.295558 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:21.296483 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.299595 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m14:46:21.301172 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




  ...
[0m14:46:21.304460 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.306652 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m14:46:21.307408 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




  ...
[0m14:46:21.308924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.310329 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m14:46:21.315562 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.316409 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.318351 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m14:46:21.322947 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m14:46:21.328804 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.332929 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m14:46:21.334002 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.336399 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-07-18 14:46:21.263770 => 2024-07-18 14:46:21.336253
[0m14:46:21.337576 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cf1cdc0>]}
[0m14:46:21.338250 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:21.338913 [info ] [Thread-2 (]: 84 of 95 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m14:46:21.340785 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-07-18 14:46:21.271373 => 2024-07-18 14:46:21.340726
[0m14:46:21.341247 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m14:46:21.341976 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cf1ded0>]}
[0m14:46:21.343551 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m14:46:21.344985 [info ] [Thread-2 (]: 86 of 95 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m14:46:21.346535 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m14:46:21.346825 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m14:46:21.347146 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m14:46:21.352253 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m14:46:21.353636 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-07-18 14:46:21.347264 => 2024-07-18 14:46:21.353460
[0m14:46:21.354171 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m14:46:21.358506 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m14:46:21.380419 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:21.383601 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:21.390022 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:21.391439 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m14:46:21.393161 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m14:46:21.409993 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:21.411125 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m14:46:21.416063 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:21.420996 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m14:46:21.425004 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:21.426210 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-07-18 14:46:21.354322 => 2024-07-18 14:46:21.426153
[0m14:46:21.426860 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8d0b17b0>]}
[0m14:46:22.103359 [info ] [Thread-1 (]: 85 of 95 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m14:46:22.105376 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m14:46:22.104257 [info ] [Thread-2 (]: 86 of 95 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.08s]
[0m14:46:22.107096 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m14:46:22.107701 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m14:46:22.109777 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m14:46:22.109200 [info ] [Thread-1 (]: 87 of 95 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m14:46:22.110674 [info ] [Thread-2 (]: 88 of 95 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m14:46:22.111974 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m14:46:22.112998 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m14:46:22.113427 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m14:46:22.113802 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m14:46:22.114197 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m14:46:22.114662 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m14:46:22.118515 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m14:46:22.132160 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m14:46:22.133182 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-07-18 14:46:22.115010 => 2024-07-18 14:46:22.133047
[0m14:46:22.133597 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m14:46:22.138005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m14:46:22.140285 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-18 14:46:22.119080 => 2024-07-18 14:46:22.140141
[0m14:46:22.140678 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m14:46:22.147479 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m14:46:22.162659 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:22.167200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.171395 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:22.171901 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.175078 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.177266 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m14:46:22.179571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m14:46:22.183127 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.185765 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m14:46:22.187304 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m14:46:22.197569 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:22.198790 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m14:46:22.205587 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.209775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m14:46:22.211415 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:22.213220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m14:46:22.214807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.216112 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-07-18 14:46:22.133769 => 2024-07-18 14:46:22.216052
[0m14:46:22.216785 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8d04e020>]}
[0m14:46:22.217409 [info ] [Thread-1 (]: 87 of 95 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.11s]
[0m14:46:22.217912 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m14:46:22.219366 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.219839 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m14:46:22.223784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m14:46:22.224552 [info ] [Thread-1 (]: 89 of 95 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m14:46:22.226769 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m14:46:22.227449 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m14:46:22.228240 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m14:46:22.236166 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m14:46:22.237111 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.238331 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-18 14:46:22.140976 => 2024-07-18 14:46:22.238274
[0m14:46:22.239077 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cf9ba90>]}
[0m14:46:22.239528 [info ] [Thread-2 (]: 88 of 95 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.13s]
[0m14:46:22.239912 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m14:46:22.240905 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-18 14:46:22.228456 => 2024-07-18 14:46:22.240759
[0m14:46:22.241678 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m14:46:22.242064 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m14:46:22.242671 [info ] [Thread-2 (]: 90 of 95 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m14:46:22.249047 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m14:46:22.249600 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m14:46:22.249890 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m14:46:22.252074 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m14:46:22.268527 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m14:46:22.269851 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-07-18 14:46:22.252667 => 2024-07-18 14:46:22.269680
[0m14:46:22.270574 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m14:46:22.276206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m14:46:22.277232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:46:22.283168 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.289178 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.291848 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m14:46:22.292415 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m14:46:22.312520 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:22.313771 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m14:46:22.314982 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:46:22.318453 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.318999 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.323816 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m14:46:22.324469 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.326953 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m14:46:22.328060 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.329615 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-18 14:46:22.243221 => 2024-07-18 14:46:22.329556
[0m14:46:22.330305 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8d0c2b60>]}
[0m14:46:22.330845 [info ] [Thread-1 (]: 89 of 95 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.10s]
[0m14:46:22.331260 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m14:46:22.332333 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




  ...
[0m14:46:22.333616 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m14:46:22.334301 [info ] [Thread-1 (]: 91 of 95 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m14:46:22.335449 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m14:46:22.335808 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m14:46:22.336083 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m14:46:22.342843 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m14:46:22.343424 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-07-18 14:46:22.336182 => 2024-07-18 14:46:22.343336
[0m14:46:22.343638 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m14:46:22.349116 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m14:46:22.356718 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:22.358137 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m14:46:22.362567 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.367590 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m14:46:22.371389 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.372782 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-07-18 14:46:22.270793 => 2024-07-18 14:46:22.372725
[0m14:46:22.373311 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:22.373988 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8f3e70d0>]}
[0m14:46:22.377226 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.377870 [info ] [Thread-2 (]: 90 of 95 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.13s]
[0m14:46:22.380185 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m14:46:22.381231 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m14:46:22.381684 [info ] [Thread-2 (]: 92 of 95 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m14:46:22.382349 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m14:46:22.382522 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m14:46:22.382683 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m14:46:22.387937 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m14:46:22.388724 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.390494 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m14:46:22.391141 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




  ...
[0m14:46:22.391691 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-07-18 14:46:22.382791 => 2024-07-18 14:46:22.391434
[0m14:46:22.394008 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m14:46:22.399196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model
-- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m14:46:22.414035 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:46:22.415547 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m14:46:22.419989 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.426117 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m14:46:22.430016 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.432177 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-07-18 14:46:22.343731 => 2024-07-18 14:46:22.432065
[0m14:46:22.432952 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:46:22.434025 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8f180340>]}
[0m14:46:22.437026 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.438289 [info ] [Thread-1 (]: 91 of 95 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.10s]
[0m14:46:22.440992 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m14:46:22.442198 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m14:46:22.442583 [info ] [Thread-1 (]: 93 of 95 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m14:46:22.443319 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m14:46:22.443612 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m14:46:22.443809 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m14:46:22.447129 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m14:46:22.448092 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.451301 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m14:46:22.451924 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-07-18 14:46:22.443920 => 2024-07-18 14:46:22.451782
[0m14:46:22.452421 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m14:46:22.457096 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model
-- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m14:46:22.458273 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model
-- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m14:46:22.486266 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:46:22.489335 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.494721 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.497847 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m14:46:22.498695 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:46:22.501028 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m14:46:22.502491 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model
-- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m14:46:22.508380 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.514499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m14:46:22.518397 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.519676 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-07-18 14:46:22.394323 => 2024-07-18 14:46:22.519616
[0m14:46:22.520205 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cd83940>]}
[0m14:46:22.520518 [info ] [Thread-2 (]: 92 of 95 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.14s]
[0m14:46:22.520835 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m14:46:22.521924 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m14:46:22.522406 [info ] [Thread-2 (]: 94 of 95 START sql table model test.dataset_event_table ........................ [RUN]
[0m14:46:22.523064 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m14:46:22.523266 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m14:46:22.523458 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m14:46:22.538579 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.539489 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:46:22.541720 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m14:46:22.546158 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.547051 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.551680 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.555945 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m14:46:22.560599 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.561872 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-07-18 14:46:22.452712 => 2024-07-18 14:46:22.561800
[0m14:46:22.562738 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.563848 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8ce506d0>]}
[0m14:46:22.575389 [info ] [Thread-1 (]: 93 of 95 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.12s]
[0m14:46:22.574833 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m14:46:22.576446 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m14:46:22.577259 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m14:46:22.577814 [info ] [Thread-1 (]: 95 of 95 START sql table model test.dataset_event_table2 ....................... [RUN]
[0m14:46:22.578949 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table2'
[0m14:46:22.579643 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table2)
[0m14:46:22.580334 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-07-18 14:46:22.523666 => 2024-07-18 14:46:22.580189
[0m14:46:22.580724 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table2
[0m14:46:22.581169 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m14:46:22.589624 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.595143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m14:46:22.601051 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.605329 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.611266 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.620613 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m14:46:22.621295 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (compile): 2024-07-18 14:46:22.581695 => 2024-07-18 14:46:22.621196
[0m14:46:22.621599 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table2
[0m14:46:22.626150 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

            

    
        create table test.dataset_event_table2__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.full_events
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m14:46:22.682448 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m14:46:22.685539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.690441 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.693283 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m14:46:22.694659 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m14:46:22.709645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m14:46:22.713692 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'dataset_event_table2__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:46:22.719445 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:46:22.804356 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m14:46:22.804962 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

  
    
    
        
        insert into test.dataset_event_table2__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "qid", "AppProfileMatchingHash")
  -- depends_on: test.full_datestat
-- depends_on: test.full_events
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m14:46:22.914339 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.22 seconds
[0m14:46:22.915616 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m14:46:22.920151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.924149 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m14:46:22.928092 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:22.929639 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-07-18 14:46:22.590246 => 2024-07-18 14:46:22.929570
[0m14:46:22.930428 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8cf12440>]}
[0m14:46:22.930946 [info ] [Thread-2 (]: 94 of 95 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.41s]
[0m14:46:22.931368 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m14:46:23.004780 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.20 seconds
[0m14:46:23.005889 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
EXCHANGE TABLES test.dataset_event_table2__dbt_backup AND test.dataset_event_table2 
  
  ...
[0m14:46:23.010361 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:23.014118 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
drop table if exists test.dataset_event_table2__dbt_backup 
  ...
[0m14:46:23.017948 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:46:23.019139 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (execute): 2024-07-18 14:46:22.621741 => 2024-07-18 14:46:23.019085
[0m14:46:23.019654 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '31c0131d-72bd-4972-82b3-838028fc766e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8d0a4490>]}
[0m14:46:23.019961 [info ] [Thread-1 (]: 95 of 95 OK created sql table model test.dataset_event_table2 .................. [[32mOK[0m in 0.44s]
[0m14:46:23.020284 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m14:46:23.022731 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m14:46:23.023243 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:46:23.023413 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table2' was left open.
[0m14:46:23.023545 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table2: Close
[0m14:46:23.023643 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m14:46:23.023760 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m14:46:23.024228 [info ] [MainThread]: 
[0m14:46:23.024517 [info ] [MainThread]: Finished running 21 view models, 24 incremental models, 50 table models in 0 hours 0 minutes and 13.95 seconds (13.95s).
[0m14:46:23.027149 [debug] [MainThread]: Command end result
[0m14:46:23.049797 [info ] [MainThread]: 
[0m14:46:23.050457 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:46:23.050817 [info ] [MainThread]: 
[0m14:46:23.051026 [info ] [MainThread]: Done. PASS=95 WARN=0 ERROR=0 SKIP=0 TOTAL=95
[0m14:46:23.051683 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcea57d4dc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8d0c5cc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fce8d0c5e10>]}
[0m14:46:23.052089 [debug] [MainThread]: Flushing usage events


============================== 2024-07-18 18:47:16.592604 | da633db2-8cdf-491b-ad0b-ec1331d966a9 ==============================
[0m18:47:16.592604 [info ] [MainThread]: Running with dbt=1.4.7
[0m18:47:16.595108 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m18:47:16.595407 [debug] [MainThread]: Tracking: tracking
[0m18:47:16.608824 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3f7cdd9c90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3f7ce33910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3f7ce33f10>]}
[0m18:47:16.645815 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m18:47:16.913588 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 10 files changed.
[0m18:47:16.914313 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_find_new_period.sql
[0m18:47:16.914730 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_join_to_attr_prepare_with_qid.sql
[0m18:47:16.916477 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/hash/hash.sql
[0m18:47:16.917155 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m18:47:16.917340 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_model.sql
[0m18:47:16.917476 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_events.sql
[0m18:47:16.917641 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_maxi.sql
[0m18:47:16.917769 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/full/full.sql
[0m18:47:16.917893 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph_tuples.sql
[0m18:47:16.918056 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_1.sql
[0m18:47:17.026250 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m18:47:17.056853 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m18:47:17.058254 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table2.sql
[0m18:47:17.064366 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table2.sql
[0m18:47:17.065695 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m18:47:17.099944 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3f7c114850>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3f7c1ebee0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3f7c03aa10>]}
[0m18:47:17.100345 [debug] [MainThread]: Flushing usage events
[0m18:47:17.802415 [error] [MainThread]: Encountered an error:
Compilation Error in model full_datestat (models/5_full/full_datestat.sql)
  argument of type 'NoneType' is not iterable
  
  > in macro metadata (macros/metadata/metadata.sql)
  > called by macro full (macros/full/full.sql)
  > called by model full_datestat (models/5_full/full_datestat.sql)


============================== 2024-07-18 18:50:14.378630 | 5d912ded-a9d8-4bda-95b8-8fd4895f58bb ==============================
[0m18:50:14.378630 [info ] [MainThread]: Running with dbt=1.4.7
[0m18:50:14.380357 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m18:50:14.380539 [debug] [MainThread]: Tracking: tracking
[0m18:50:14.383100 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe802ff1c60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe80307b940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe80307bf40>]}
[0m18:50:14.410039 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m18:50:14.468615 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 27 files changed.
[0m18:50:14.469200 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_model.sql
[0m18:50:14.469409 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:50:14.469578 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/4_graph/1_tuples/graph_tuples.sql
[0m18:50:14.469750 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m18:50:14.469911 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_datestat.sql
[0m18:50:14.470114 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m18:50:14.470296 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_find_new_period.sql
[0m18:50:14.470462 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_maxi.sql
[0m18:50:14.470624 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_events.sql
[0m18:50:14.470785 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_events.sql
[0m18:50:14.470946 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m18:50:14.471106 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m18:50:14.471281 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:50:14.471440 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_events.sql
[0m18:50:14.471597 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m18:50:14.471756 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m18:50:14.472571 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m18:50:14.472719 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_periodstat.sql
[0m18:50:14.472843 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_periodstat.sql
[0m18:50:14.472964 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/hash/hash.sql
[0m18:50:14.473083 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph_tuples.sql
[0m18:50:14.473238 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m18:50:14.473397 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_1.sql
[0m18:50:14.473522 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_datestat.sql
[0m18:50:14.473643 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/full/full.sql
[0m18:50:14.473764 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_join_to_attr_prepare_with_qid.sql
[0m18:50:14.473881 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_appprofilematching.sql
[0m18:50:14.574069 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:50:14.629630 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:50:14.631104 [debug] [MainThread]: 1603: static parser failed on 4_graph/1_tuples/graph_tuples.sql
[0m18:50:14.635504 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe8023591b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe80225cb50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe80225ff70>]}
[0m18:50:14.635825 [debug] [MainThread]: Flushing usage events
[0m18:50:17.828841 [error] [MainThread]: Encountered an error:
Compilation Error in model graph_tuples (models/4_graph/1_tuples/graph_tuples.sql)
  macro 'dbt_macro__graph' takes no keyword argument 'features_list'


============================== 2024-07-18 18:51:18.393439 | f99e1ff9-9258-4389-871e-342b3b4f3001 ==============================
[0m18:51:18.393439 [info ] [MainThread]: Running with dbt=1.4.7
[0m18:51:18.395359 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m18:51:18.395560 [debug] [MainThread]: Tracking: tracking
[0m18:51:18.397674 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe0b76d8df0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe0b717b910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe0b717bf10>]}
[0m18:51:18.428814 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m18:51:18.482522 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 28 files changed.
[0m18:51:18.483924 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/full/full.sql
[0m18:51:18.484148 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_find_new_period.sql
[0m18:51:18.484281 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m18:51:18.484445 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_maxi.sql
[0m18:51:18.484608 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_datestat.sql
[0m18:51:18.484733 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m18:51:18.485490 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/hash/hash.sql
[0m18:51:18.485647 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/4_graph/1_tuples/graph_tuples.sql
[0m18:51:18.485773 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_datestat.sql
[0m18:51:18.485897 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m18:51:18.486086 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_appprofilematching.sql
[0m18:51:18.486596 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m18:51:18.486793 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_periodstat.sql
[0m18:51:18.486922 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_join_to_attr_prepare_with_qid.sql
[0m18:51:18.487046 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m18:51:18.487166 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_model.sql
[0m18:51:18.487284 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_events.sql
[0m18:51:18.487408 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph_tuples.sql
[0m18:51:18.487566 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_1.sql
[0m18:51:18.487726 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph.sql
[0m18:51:18.487848 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:51:18.487974 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m18:51:18.488103 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m18:51:18.488238 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_events.sql
[0m18:51:18.488359 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:51:18.488482 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_events.sql
[0m18:51:18.488602 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m18:51:18.488741 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_periodstat.sql
[0m18:51:18.588343 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m18:51:18.617270 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m18:51:18.618648 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table2.sql
[0m18:51:18.624683 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table2.sql
[0m18:51:18.625787 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m18:51:18.659577 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_datestat.sql
[0m18:51:18.660775 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m18:51:18.668658 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m18:51:18.669838 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:51:18.673591 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe0b6459480>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe0b63540d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe0b6356c80>]}
[0m18:51:18.673950 [debug] [MainThread]: Flushing usage events
[0m18:51:19.317729 [error] [MainThread]: Encountered an error:
Compilation Error in model attr_myfirstfunnel_model (models/6_attribution/8_model/attr_myfirstfunnel_model.sql)
  macro 'dbt_macro__attr' takes no keyword argument 'features_list'


============================== 2024-07-18 18:53:12.455954 | 3bd54525-a51a-43c2-87e2-44b9b998ff45 ==============================
[0m18:53:12.455954 [info ] [MainThread]: Running with dbt=1.4.7
[0m18:53:12.457474 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m18:53:12.457613 [debug] [MainThread]: Tracking: tracking
[0m18:53:12.459965 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fba9b7c1cf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fba9b97f8b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fba9b97e650>]}
[0m18:53:12.485906 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m18:53:12.545688 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 34 files changed.
[0m18:53:12.546391 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:53:12.546662 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m18:53:12.546852 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_missed_steps.sql
[0m18:53:12.547071 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_model.sql
[0m18:53:12.547957 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr.sql
[0m18:53:12.548329 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_events.sql
[0m18:53:12.548555 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_maxi.sql
[0m18:53:12.548732 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:53:12.548913 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_1.sql
[0m18:53:12.549175 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_periodstat.sql
[0m18:53:12.549318 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m18:53:12.549492 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/4_graph/1_tuples/graph_tuples.sql
[0m18:53:12.549670 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_add_row_number.sql
[0m18:53:12.550682 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m18:53:12.550976 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m18:53:12.551128 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_events.sql
[0m18:53:12.551258 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_events.sql
[0m18:53:12.551431 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_final_table.sql
[0m18:53:12.551556 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_periodstat.sql
[0m18:53:12.551677 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m18:53:12.551847 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_prepare_with_qid.sql
[0m18:53:12.552014 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_appprofilematching.sql
[0m18:53:12.552397 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph.sql
[0m18:53:12.552536 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m18:53:12.552662 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_datestat.sql
[0m18:53:12.552786 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_join_to_attr_prepare_with_qid.sql
[0m18:53:12.552906 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_datestat.sql
[0m18:53:12.553085 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph_tuples.sql
[0m18:53:12.553210 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/full/full.sql
[0m18:53:12.553329 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_find_new_period.sql
[0m18:53:12.553450 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m18:53:12.553569 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/hash/hash.sql
[0m18:53:12.553686 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m18:53:12.553846 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_calculate_period_number.sql
[0m18:53:12.673316 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:53:12.694908 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fba9ac63ac0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fba9ab3bcd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fba9ab3bdf0>]}
[0m18:53:12.695387 [debug] [MainThread]: Flushing usage events
[0m18:53:13.353104 [error] [MainThread]: Encountered an error:
Compilation Error in model attr_myfirstfunnel_model (models/6_attribution/8_model/attr_myfirstfunnel_model.sql)
  dict object has no element None
  
  > in macro attr (macros/attr/attr.sql)
  > called by model attr_myfirstfunnel_model (models/6_attribution/8_model/attr_myfirstfunnel_model.sql)


============================== 2024-07-18 18:55:07.332209 | 020175bc-8fe9-4db6-9c7e-3b9f0702a1d4 ==============================
[0m18:55:07.332209 [info ] [MainThread]: Running with dbt=1.4.7
[0m18:55:07.333792 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m18:55:07.339569 [debug] [MainThread]: Tracking: tracking
[0m18:55:07.341601 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6b718e9cf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6b7197b8b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6b7197a680>]}
[0m18:55:07.367502 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m18:55:07.422571 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 44 files changed.
[0m18:55:07.423172 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_events.sql
[0m18:55:07.423380 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_calculate_period_number.sql
[0m18:55:07.423568 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:55:07.423785 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_datestat.sql
[0m18:55:07.423977 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m18:55:07.424150 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_datestat.sql
[0m18:55:07.424327 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_join_to_attr_prepare_with_qid.sql
[0m18:55:07.424496 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_events.sql
[0m18:55:07.425241 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/full/full.sql
[0m18:55:07.425524 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_add_row_number.sql
[0m18:55:07.425674 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_periodstat.sql
[0m18:55:07.425839 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m18:55:07.426001 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m18:55:07.426187 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_find_new_period.sql
[0m18:55:07.426927 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m18:55:07.427334 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph.sql
[0m18:55:07.427470 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/hash/hash.sql
[0m18:55:07.427598 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m18:55:07.427721 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph_tuples.sql
[0m18:55:07.428137 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr.sql
[0m18:55:07.428322 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_missed_steps.sql
[0m18:55:07.428455 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m18:55:07.428580 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_events.sql
[0m18:55:07.428702 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m18:55:07.428823 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m18:55:07.428943 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m18:55:07.429068 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m18:55:07.429228 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_prepare_with_qid.sql
[0m18:55:07.429356 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_model.sql
[0m18:55:07.429480 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m18:55:07.429645 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_final_table.sql
[0m18:55:07.429769 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m18:55:07.429888 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m18:55:07.430045 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_maxi.sql
[0m18:55:07.430167 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_periodstat.sql
[0m18:55:07.430349 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m18:55:07.430500 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/4_graph/1_tuples/graph_tuples.sql
[0m18:55:07.430623 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m18:55:07.430744 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m18:55:07.430869 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:55:07.431004 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m18:55:07.431171 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_1.sql
[0m18:55:07.431301 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m18:55:07.431438 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_appprofilematching.sql
[0m18:55:07.541860 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:55:07.562743 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6b70c551e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6b70cfb580>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6b70cfbbe0>]}
[0m18:55:07.563066 [debug] [MainThread]: Flushing usage events
[0m18:55:08.170503 [error] [MainThread]: Encountered an error:
Compilation Error in model attr_myfirstfunnel_model (models/6_attribution/8_model/attr_myfirstfunnel_model.sql)
  dict object has no element None
  
  > in macro attr (macros/attr/attr.sql)
  > called by model attr_myfirstfunnel_model (models/6_attribution/8_model/attr_myfirstfunnel_model.sql)


============================== 2024-07-18 18:56:33.016788 | 26d0c049-9041-4404-b230-28a0ed9b021d ==============================
[0m18:56:33.016788 [info ] [MainThread]: Running with dbt=1.4.7
[0m18:56:33.018792 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m18:56:33.019029 [debug] [MainThread]: Tracking: tracking
[0m18:56:33.022336 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b646c4dc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b6417b940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b6417bf40>]}
[0m18:56:33.048209 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m18:56:33.108000 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 44 files changed.
[0m18:56:33.108619 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_events.sql
[0m18:56:33.108853 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_add_row_number.sql
[0m18:56:33.109032 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m18:56:33.109212 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_join_to_attr_prepare_with_qid.sql
[0m18:56:33.109393 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_model.sql
[0m18:56:33.109556 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m18:56:33.109716 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_events.sql
[0m18:56:33.109879 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph_tuples.sql
[0m18:56:33.110048 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m18:56:33.110207 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_datestat.sql
[0m18:56:33.110429 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m18:56:33.110607 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_periodstat.sql
[0m18:56:33.110774 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m18:56:33.110930 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:56:33.111090 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_missed_steps.sql
[0m18:56:33.111247 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m18:56:33.111418 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m18:56:33.111600 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_final_table.sql
[0m18:56:33.111757 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/4_graph/1_tuples/graph_tuples.sql
[0m18:56:33.111920 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_1.sql
[0m18:56:33.112134 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m18:56:33.112303 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_prepare_with_qid.sql
[0m18:56:33.112801 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/hash/hash.sql
[0m18:56:33.112975 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m18:56:33.113100 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/5_full/full_datestat.sql
[0m18:56:33.113255 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m18:56:33.113409 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m18:56:33.113566 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m18:56:33.113722 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/full/full.sql
[0m18:56:33.113881 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m18:56:33.114001 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_appprofilematching.sql
[0m18:56:33.114155 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata_maxi.sql
[0m18:56:33.114316 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_create_events.sql
[0m18:56:33.114477 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_find_new_period.sql
[0m18:56:33.114637 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m18:56:33.114802 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m18:56:33.115186 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph.sql
[0m18:56:33.115371 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m18:56:33.115540 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m18:56:33.115936 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m18:56:33.116130 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_periodstat.sql
[0m18:56:33.116258 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:56:33.116423 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr_calculate_period_number.sql
[0m18:56:33.116591 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/attr/attr.sql
[0m18:56:33.226878 [debug] [MainThread]: 1603: static parser failed on 5_full/full_events.sql
[0m18:56:33.269237 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_events.sql
[0m18:56:33.270429 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m18:56:33.278988 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m18:56:33.280340 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m18:56:33.292857 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m18:56:33.293988 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_events.sql
[0m18:56:33.335322 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_events.sql
[0m18:56:33.336456 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m18:56:33.342557 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m18:56:33.343715 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_datestat.sql
[0m18:56:33.351496 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_datestat.sql
[0m18:56:33.352600 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m18:56:33.366371 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m18:56:33.367562 [debug] [MainThread]: 1603: static parser failed on 5_full/full_periodstat.sql
[0m18:56:33.377427 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_periodstat.sql
[0m18:56:33.378506 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m18:56:33.390734 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m18:56:33.392128 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:56:33.400387 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m18:56:33.401775 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m18:56:33.408508 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m18:56:33.409690 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m18:56:33.422071 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m18:56:33.423377 [debug] [MainThread]: 1603: static parser failed on 4_graph/1_tuples/graph_tuples.sql
[0m18:56:33.438288 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/1_tuples/graph_tuples.sql
[0m18:56:33.439824 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m18:56:33.447943 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m18:56:33.449537 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_periodstat.sql
[0m18:56:33.464552 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_periodstat.sql
[0m18:56:33.466230 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_periodstat.sql
[0m18:56:33.477733 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_periodstat.sql
[0m18:56:33.479267 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m18:56:33.544839 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m18:56:33.546197 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table2.sql
[0m18:56:33.551712 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table2.sql
[0m18:56:33.552805 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m18:56:33.560005 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_datestat.sql
[0m18:56:33.561141 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_appprofilematching.sql
[0m18:56:33.565149 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_appprofilematching.sql
[0m18:56:33.566339 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m18:56:33.574064 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m18:56:33.575451 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_utmhashregistry.sql
[0m18:56:33.579511 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_utmhashregistry.sql
[0m18:56:33.580586 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:56:33.587656 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m18:56:33.588796 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m18:56:33.595300 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m18:56:33.596428 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m18:56:33.600543 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m18:56:33.601661 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m18:56:33.607964 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m18:56:33.609044 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m18:56:33.613317 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m18:56:33.614400 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m18:56:33.621339 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m18:56:33.622428 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m18:56:33.626405 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m18:56:33.627498 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m18:56:33.631581 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m18:56:33.632709 [debug] [MainThread]: 1603: static parser failed on 4_graph/6_qid/graph_qid.sql
[0m18:56:33.644483 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/6_qid/graph_qid.sql
[0m18:56:33.645713 [debug] [MainThread]: 1603: static parser failed on 4_graph/5_glue/graph_glue.sql
[0m18:56:33.653030 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/5_glue/graph_glue.sql
[0m18:56:33.654168 [debug] [MainThread]: 1603: static parser failed on 4_graph/4_edge/graph_edge.sql
[0m18:56:33.661038 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/4_edge/graph_edge.sql
[0m18:56:33.662163 [debug] [MainThread]: 1603: static parser failed on 4_graph/3_unique/graph_unique.sql
[0m18:56:33.667670 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/3_unique/graph_unique.sql
[0m18:56:33.668790 [debug] [MainThread]: 1603: static parser failed on 4_graph/2_lookup/graph_lookup.sql
[0m18:56:33.674225 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/2_lookup/graph_lookup.sql
[0m18:56:33.675344 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m18:56:33.679607 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m18:56:33.680838 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m18:56:33.688346 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m18:56:33.718708 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b6337c370>]}
[0m18:56:33.745934 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b63422140>]}
[0m18:56:33.746365 [info ] [MainThread]: Found 95 models, 6 tests, 0 snapshots, 0 analyses, 546 macros, 0 operations, 26 seed files, 0 sources, 0 exposures, 0 metrics
[0m18:56:33.746685 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b634221a0>]}
[0m18:56:33.753298 [info ] [MainThread]: 
[0m18:56:33.755138 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m18:56:33.761546 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m18:56:33.778512 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m18:56:35.202881 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m18:56:35.207874 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.216396 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m18:56:35.216989 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m18:56:35.223885 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m18:56:35.262146 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:35.273105 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b633e4a90>]}
[0m18:56:35.273797 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m18:56:35.274110 [info ] [MainThread]: 
[0m18:56:35.282702 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m18:56:35.283048 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m18:56:35.283439 [info ] [Thread-1 (]: 1 of 95 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m18:56:35.283926 [info ] [Thread-2 (]: 2 of 95 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m18:56:35.284835 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m18:56:35.285893 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m18:56:35.286330 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m18:56:35.286737 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m18:56:35.287135 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m18:56:35.350441 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m18:56:35.352280 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$')        
...
[0m18:56:35.422003 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$')        
...
[0m18:56:35.426859 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m18:56:35.439939 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:35.457443 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:35.457718 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_cohorts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:35.476359 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:35.476950 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:35.526456 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m18:56:35.527638 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m18:56:35.531373 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-07-18 18:56:35.298282 => 2024-07-18 18:56:35.531236
[0m18:56:35.531857 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-07-18 18:56:35.287529 => 2024-07-18 18:56:35.531722
[0m18:56:35.532391 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m18:56:35.532833 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m18:56:35.578884 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m18:56:35.581227 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m18:56:35.582901 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
)

)
  )...
[0m18:56:35.583469 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'period') AS period, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_cohorts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
)

)
  )...
[0m18:56:35.605808 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:35.612671 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:35.613014 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m18:56:35.616663 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m18:56:35.621171 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.622311 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m18:56:35.623409 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.624825 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m18:56:35.626543 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.629777 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m18:56:35.630419 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.634335 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m18:56:35.638664 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.639841 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.641539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m18:56:35.643109 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m18:56:35.648530 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.649343 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.677698 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m18:56:35.678574 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m18:56:35.684066 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.684835 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.686322 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-07-18 18:56:35.533071 => 2024-07-18 18:56:35.686248
[0m18:56:35.687953 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-07-18 18:56:35.549517 => 2024-07-18 18:56:35.687861
[0m18:56:35.688955 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d956440>]}
[0m18:56:35.689896 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fab7fa0>]}
[0m18:56:35.690884 [info ] [Thread-1 (]: 1 of 95 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.40s]
[0m18:56:35.692188 [info ] [Thread-2 (]: 2 of 95 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.40s]
[0m18:56:35.694422 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m18:56:35.694865 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m18:56:35.695612 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m18:56:35.696654 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m18:56:35.697342 [info ] [Thread-1 (]: 3 of 95 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m18:56:35.698205 [info ] [Thread-2 (]: 4 of 95 START sql view model test.normalize_adjust_registry_default_events ..... [RUN]
[0m18:56:35.699608 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m18:56:35.700751 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_registry_default_events'
[0m18:56:35.701069 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m18:56:35.701401 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_registry_default_events)
[0m18:56:35.701922 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m18:56:35.702587 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m18:56:35.708409 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$')        
...
[0m18:56:35.713483 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$')        
...
[0m18:56:35.724077 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.724871 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.729004 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_network'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:35.733042 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:35.741091 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.747379 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.760234 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m18:56:35.765258 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m18:56:35.766442 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-07-18 18:56:35.703053 => 2024-07-18 18:56:35.766284
[0m18:56:35.766987 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m18:56:35.771249 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m18:56:35.771895 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (compile): 2024-07-18 18:56:35.708759 => 2024-07-18 18:56:35.771760
[0m18:56:35.772418 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'installs') AS installs, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
        JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_network') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_adjust_default_accountid_network
)

)
  )...
[0m18:56:35.773089 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m18:56:35.779027 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m18:56:35.780145 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


  create view test.normalize_adjust_registry_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
        JSONExtractString(_airbyte_data, 'description') AS description, 
        JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'section') AS section, 
        JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
        JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_adjust_default_accountid_events
)

)
  )...
[0m18:56:35.791225 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:35.851941 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m18:56:35.852712 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m18:56:35.857258 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m18:56:35.858430 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.859841 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m18:56:35.860740 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.862512 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events to test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m18:56:35.864600 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.867971 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m18:56:35.868769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.873649 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events 
  
  ...
[0m18:56:35.875331 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.877596 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m18:56:35.878989 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.880242 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events__dbt_tmp to test.normalize_adjust_registry_default_events 
  
  ...
[0m18:56:35.881128 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.886001 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m18:56:35.887194 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.891342 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */
drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  ...
[0m18:56:35.895783 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.896476 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.898037 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-07-18 18:56:35.767190 => 2024-07-18 18:56:35.897973
[0m18:56:35.899513 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (execute): 2024-07-18 18:56:35.773886 => 2024-07-18 18:56:35.899454
[0m18:56:35.900466 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d87a260>]}
[0m18:56:35.901241 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d98b8e0>]}
[0m18:56:35.901870 [info ] [Thread-1 (]: 3 of 95 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.20s]
[0m18:56:35.902654 [info ] [Thread-2 (]: 4 of 95 OK created sql view model test.normalize_adjust_registry_default_events  [[32mOK[0m in 0.20s]
[0m18:56:35.903416 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m18:56:35.904016 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m18:56:35.904856 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m18:56:35.906108 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m18:56:35.907399 [info ] [Thread-1 (]: 5 of 95 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m18:56:35.908407 [info ] [Thread-2 (]: 6 of 95 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m18:56:35.909369 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m18:56:35.910433 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m18:56:35.910810 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m18:56:35.911161 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m18:56:35.911468 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m18:56:35.911918 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m18:56:35.918910 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$')        
...
[0m18:56:35.924248 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m18:56:35.937545 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.938245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.941831 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:35.945974 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:35.952375 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:35.953432 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:35.972219 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m18:56:35.984876 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m18:56:35.985740 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-07-18 18:56:35.912361 => 2024-07-18 18:56:35.985626
[0m18:56:35.986041 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m18:56:35.990681 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m18:56:35.991380 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-07-18 18:56:35.919393 => 2024-07-18 18:56:35.991235
[0m18:56:35.991814 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m18:56:35.998082 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m18:56:35.998606 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
)

)
  )...
[0m18:56:36.000488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name != 'screen_view'
  )...
[0m18:56:36.013524 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.017126 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m18:56:36.021511 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.022806 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m18:56:36.026676 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.029776 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m18:56:36.033489 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.034890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m18:56:36.036090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:36.039549 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m18:56:36.040298 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.044833 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m18:56:36.046179 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.047815 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m18:56:36.049298 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.051057 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-07-18 18:56:35.986289 => 2024-07-18 18:56:36.050986
[0m18:56:36.051647 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d879690>]}
[0m18:56:36.052720 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.052124 [info ] [Thread-1 (]: 5 of 95 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.14s]
[0m18:56:36.057360 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m18:56:36.058110 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m18:56:36.059213 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m18:56:36.060295 [info ] [Thread-1 (]: 7 of 95 START sql view model test.normalize_appmetrica_events_default_installations  [RUN]
[0m18:56:36.062193 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations'
[0m18:56:36.062504 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations)
[0m18:56:36.062698 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m18:56:36.068224 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$')        
...
[0m18:56:36.069134 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.071486 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m18:56:36.074773 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.079573 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m18:56:36.085147 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.086979 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-07-18 18:56:35.992336 => 2024-07-18 18:56:36.086892
[0m18:56:36.087690 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fab5c30>]}
[0m18:56:36.088443 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:36.089244 [info ] [Thread-2 (]: 6 of 95 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.18s]
[0m18:56:36.094231 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_installations'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.095173 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m18:56:36.096525 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m18:56:36.097991 [info ] [Thread-2 (]: 8 of 95 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m18:56:36.098906 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m18:56:36.099353 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m18:56:36.099644 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m18:56:36.104872 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m18:56:36.106259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.120950 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m18:56:36.121630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:36.125789 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.127301 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (compile): 2024-07-18 18:56:36.062800 => 2024-07-18 18:56:36.127116
[0m18:56:36.127755 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m18:56:36.132800 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m18:56:36.134112 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.150302 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m18:56:36.151023 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


  create view test.normalize_appmetrica_events_default_installations__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
        JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS install_receive_datetime, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_installations') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
)

)
  )...
[0m18:56:36.153049 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-07-18 18:56:36.099762 => 2024-07-18 18:56:36.152796
[0m18:56:36.153843 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m18:56:36.158859 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m18:56:36.159402 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_receive_datetime) AS event_receive_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_receive_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m18:56:36.163439 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.167272 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m18:56:36.170864 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.172090 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations to test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m18:56:36.175364 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.178661 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations 
  
  ...
[0m18:56:36.182709 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.184391 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations__dbt_tmp to test.normalize_appmetrica_events_default_installations 
  
  ...
[0m18:56:36.187758 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.191805 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */
drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  ...
[0m18:56:36.195943 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.197407 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (execute): 2024-07-18 18:56:36.127854 => 2024-07-18 18:56:36.197331
[0m18:56:36.198118 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b634211b0>]}
[0m18:56:36.198794 [info ] [Thread-1 (]: 7 of 95 OK created sql view model test.normalize_appmetrica_events_default_installations  [[32mOK[0m in 0.14s]
[0m18:56:36.199378 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m18:56:36.199843 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m18:56:36.200281 [info ] [Thread-1 (]: 9 of 95 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m18:56:36.201658 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m18:56:36.202384 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m18:56:36.202832 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m18:56:36.208649 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m18:56:36.215961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.219671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.225067 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m18:56:36.228331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m18:56:36.229090 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.238194 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.245096 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m18:56:36.248121 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m18:56:36.249641 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-07-18 18:56:36.203035 => 2024-07-18 18:56:36.249316
[0m18:56:36.250214 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m18:56:36.255438 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m18:56:36.256159 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.259231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m18:56:36.260714 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS session_start_receive_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
)

)
  )...
[0m18:56:36.263126 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.264663 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m18:56:36.270584 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.274679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m18:56:36.275617 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.280834 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m18:56:36.284801 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.285454 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.287328 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m18:56:36.289084 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-07-18 18:56:36.154123 => 2024-07-18 18:56:36.289005
[0m18:56:36.291080 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d960190>]}
[0m18:56:36.292100 [info ] [Thread-2 (]: 8 of 95 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.19s]
[0m18:56:36.293126 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.293658 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m18:56:36.297805 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m18:56:36.298688 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m18:56:36.300971 [info ] [Thread-2 (]: 10 of 95 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m18:56:36.302194 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m18:56:36.303047 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.303441 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m18:56:36.304888 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m18:56:36.305396 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m18:56:36.310961 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m18:56:36.312402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.317304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m18:56:36.319403 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.324501 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.325408 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.328467 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-07-18 18:56:36.250388 => 2024-07-18 18:56:36.328346
[0m18:56:36.329576 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fa652d0>]}
[0m18:56:36.329978 [info ] [Thread-1 (]: 9 of 95 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.13s]
[0m18:56:36.330293 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m18:56:36.330547 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m18:56:36.331924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.331319 [info ] [Thread-1 (]: 11 of 95 START sql view model test.normalize_appsflyer_events_default_in_app_events  [RUN]
[0m18:56:36.341065 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m18:56:36.341940 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events'
[0m18:56:36.342446 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events)
[0m18:56:36.342827 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m18:56:36.353252 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appsflyer_default_[^_]+_in_app_events$')        
...
[0m18:56:36.354707 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-07-18 18:56:36.306639 => 2024-07-18 18:56:36.354477
[0m18:56:36.355600 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m18:56:36.361814 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m18:56:36.362922 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.366561 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appsflyer_default_accountid_in_app_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.368571 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
)

)
  )...
[0m18:56:36.374182 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.389732 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:36.398186 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m18:56:36.429457 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:36.436228 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m18:56:36.475973 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:36.489361 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m18:56:36.493626 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"
[0m18:56:36.496976 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events (compile): 2024-07-18 18:56:36.343086 => 2024-07-18 18:56:36.496773
[0m18:56:36.497705 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m18:56:36.502394 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"
[0m18:56:36.503209 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.504551 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m18:56:36.505896 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */


  create view test.normalize_appsflyer_events_default_in_app_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_time') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_unit') AS ad_unit, 
        JSONExtractString(_airbyte_data, 'advertising_id') AS advertising_id, 
        JSONExtractString(_airbyte_data, 'af_ad') AS af_ad, 
        JSONExtractString(_airbyte_data, 'af_ad_id') AS af_ad_id, 
        JSONExtractString(_airbyte_data, 'af_ad_type') AS af_ad_type, 
        JSONExtractString(_airbyte_data, 'af_adset') AS af_adset, 
        JSONExtractString(_airbyte_data, 'af_adset_id') AS af_adset_id, 
        JSONExtractString(_airbyte_data, 'af_attribution_lookback') AS af_attribution_lookback, 
        JSONExtractString(_airbyte_data, 'af_c_id') AS af_c_id, 
        JSONExtractString(_airbyte_data, 'af_channel') AS af_channel, 
        JSONExtractString(_airbyte_data, 'af_cost_currency') AS af_cost_currency, 
        JSONExtractString(_airbyte_data, 'af_cost_model') AS af_cost_model, 
        JSONExtractString(_airbyte_data, 'af_cost_value') AS af_cost_value, 
        JSONExtractString(_airbyte_data, 'af_keywords') AS af_keywords, 
        JSONExtractString(_airbyte_data, 'af_prt') AS af_prt, 
        JSONExtractString(_airbyte_data, 'af_reengagement_window') AS af_reengagement_window, 
        JSONExtractString(_airbyte_data, 'af_siteid') AS af_siteid, 
        JSONExtractString(_airbyte_data, 'af_sub1') AS af_sub1, 
        JSONExtractString(_airbyte_data, 'af_sub2') AS af_sub2, 
        JSONExtractString(_airbyte_data, 'af_sub3') AS af_sub3, 
        JSONExtractString(_airbyte_data, 'af_sub4') AS af_sub4, 
        JSONExtractString(_airbyte_data, 'af_sub5') AS af_sub5, 
        JSONExtractString(_airbyte_data, 'af_sub_siteid') AS af_sub_siteid, 
        JSONExtractString(_airbyte_data, 'amazon_aid') AS amazon_aid, 
        JSONExtractString(_airbyte_data, 'android_id') AS android_id, 
        JSONExtractString(_airbyte_data, 'app_id') AS app_id, 
        JSONExtractString(_airbyte_data, 'app_name') AS app_name, 
        JSONExtractString(_airbyte_data, 'app_type') AS app_type, 
        JSONExtractString(_airbyte_data, 'app_version') AS app_version, 
        JSONExtractString(_airbyte_data, 'appsflyer_id') AS appsflyer_id, 
        JSONExtractString(_airbyte_data, 'att') AS att, 
        JSONExtractString(_airbyte_data, 'attributed_touch_time') AS attributed_touch_time, 
        JSONExtractString(_airbyte_data, 'attributed_touch_type') AS attributed_touch_type, 
        JSONExtractString(_airbyte_data, 'blocked_reason') AS blocked_reason, 
        JSONExtractString(_airbyte_data, 'blocked_reason_rule') AS blocked_reason_rule, 
        JSONExtractString(_airbyte_data, 'blocked_reason_value') AS blocked_reason_value, 
        JSONExtractString(_airbyte_data, 'blocked_sub_reason') AS blocked_sub_reason, 
        JSONExtractString(_airbyte_data, 'bundle_id') AS bundle_id, 
        JSONExtractString(_airbyte_data, 'campaign') AS campaign, 
        JSONExtractString(_airbyte_data, 'campaign_type') AS campaign_type, 
        JSONExtractString(_airbyte_data, 'carrier') AS carrier, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'contributor1_af_prt') AS contributor1_af_prt, 
        JSONExtractString(_airbyte_data, 'contributor1_campaign') AS contributor1_campaign, 
        JSONExtractString(_airbyte_data, 'contributor1_match_type') AS contributor1_match_type, 
        JSONExtractString(_airbyte_data, 'contributor1_media_source') AS contributor1_media_source, 
        JSONExtractString(_airbyte_data, 'contributor1_touch_time') AS contributor1_touch_time, 
        JSONExtractString(_airbyte_data, 'contributor1_touch_type') AS contributor1_touch_type, 
        JSONExtractString(_airbyte_data, 'contributor2_af_prt') AS contributor2_af_prt, 
        JSONExtractString(_airbyte_data, 'contributor2_campaign') AS contributor2_campaign, 
        JSONExtractString(_airbyte_data, 'contributor2_match_type') AS contributor2_match_type, 
        JSONExtractString(_airbyte_data, 'contributor2_media_source') AS contributor2_media_source, 
        JSONExtractString(_airbyte_data, 'contributor2_touch_time') AS contributor2_touch_time, 
        JSONExtractString(_airbyte_data, 'contributor2_touch_type') AS contributor2_touch_type, 
        JSONExtractString(_airbyte_data, 'contributor3_af_prt') AS contributor3_af_prt, 
        JSONExtractString(_airbyte_data, 'contributor3_campaign') AS contributor3_campaign, 
        JSONExtractString(_airbyte_data, 'contributor3_match_type') AS contributor3_match_type, 
        JSONExtractString(_airbyte_data, 'contributor3_media_source') AS contributor3_media_source, 
        JSONExtractString(_airbyte_data, 'contributor3_touch_time') AS contributor3_touch_time, 
        JSONExtractString(_airbyte_data, 'contributor3_touch_type') AS contributor3_touch_type, 
        JSONExtractString(_airbyte_data, 'conversion_type') AS conversion_type, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'custom_data') AS custom_data, 
        JSONExtractString(_airbyte_data, 'customer_user_id') AS customer_user_id, 
        JSONExtractString(_airbyte_data, 'deeplink_url') AS deeplink_url, 
        JSONExtractString(_airbyte_data, 'device_category') AS device_category, 
        JSONExtractString(_airbyte_data, 'device_download_time') AS device_download_time, 
        JSONExtractString(_airbyte_data, 'device_model') AS device_model, 
        JSONExtractString(_airbyte_data, 'device_type') AS device_type, 
        JSONExtractString(_airbyte_data, 'dma') AS dma, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_revenue') AS event_revenue, 
        JSONExtractString(_airbyte_data, 'event_revenue_currency') AS event_revenue_currency, 
        JSONExtractString(_airbyte_data, 'event_revenue_usd') AS event_revenue_usd, 
        JSONExtractString(_airbyte_data, 'event_source') AS event_source, 
        JSONExtractString(_airbyte_data, 'event_time') AS event_time, 
        JSONExtractString(_airbyte_data, 'event_value') AS event_value, 
        JSONExtractString(_airbyte_data, 'gp_broadcast_referrer') AS gp_broadcast_referrer, 
        JSONExtractString(_airbyte_data, 'gp_click_time') AS gp_click_time, 
        JSONExtractString(_airbyte_data, 'gp_install_begin') AS gp_install_begin, 
        JSONExtractString(_airbyte_data, 'gp_referrer') AS gp_referrer, 
        JSONExtractString(_airbyte_data, 'http_referrer') AS http_referrer, 
        JSONExtractString(_airbyte_data, 'idfa') AS idfa, 
        JSONExtractString(_airbyte_data, 'idfv') AS idfv, 
        JSONExtractString(_airbyte_data, 'imei') AS imei, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'install_app_store') AS install_app_store, 
        JSONExtractString(_airbyte_data, 'install_time') AS install_time, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'is_lat') AS is_lat, 
        JSONExtractString(_airbyte_data, 'is_primary_attribution') AS is_primary_attribution, 
        JSONExtractString(_airbyte_data, 'is_receipt_validated') AS is_receipt_validated, 
        JSONExtractString(_airbyte_data, 'is_retargeting') AS is_retargeting, 
        JSONExtractString(_airbyte_data, 'keyword_id') AS keyword_id, 
        JSONExtractString(_airbyte_data, 'keyword_match_type') AS keyword_match_type, 
        JSONExtractString(_airbyte_data, 'language') AS language, 
        JSONExtractString(_airbyte_data, 'match_type') AS match_type, 
        JSONExtractString(_airbyte_data, 'media_source') AS media_source, 
        JSONExtractString(_airbyte_data, 'mediation_network') AS mediation_network, 
        JSONExtractString(_airbyte_data, 'monetization_network') AS monetization_network, 
        JSONExtractString(_airbyte_data, 'network_account_id') AS network_account_id, 
        JSONExtractString(_airbyte_data, 'oaid') AS oaid, 
        JSONExtractString(_airbyte_data, 'operator') AS operator, 
        JSONExtractString(_airbyte_data, 'original_url') AS original_url, 
        JSONExtractString(_airbyte_data, 'os_version') AS os_version, 
        JSONExtractString(_airbyte_data, 'placement') AS placement, 
        JSONExtractString(_airbyte_data, 'platform') AS platform, 
        JSONExtractString(_airbyte_data, 'postal_code') AS postal_code, 
        JSONExtractString(_airbyte_data, 'region') AS region, 
        JSONExtractString(_airbyte_data, 'rejected_reason') AS rejected_reason, 
        JSONExtractString(_airbyte_data, 'rejected_reason_value') AS rejected_reason_value, 
        JSONExtractString(_airbyte_data, 'retargeting_conversion_type') AS retargeting_conversion_type, 
        JSONExtractString(_airbyte_data, 'sdk_version') AS sdk_version, 
        JSONExtractString(_airbyte_data, 'segment') AS segment, 
        JSONExtractString(_airbyte_data, 'state') AS state, 
        JSONExtractString(_airbyte_data, 'store_reinstall') AS store_reinstall, 
        JSONExtractString(_airbyte_data, 'user_agent') AS user_agent, 
        JSONExtractString(_airbyte_data, 'wifi') AS wifi,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_emitted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appsflyer_default_accountid_in_app_events') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appsflyer_default_accountid_in_app_events
)

)
  )...
[0m18:56:36.508356 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.513364 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m18:56:36.517707 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.519205 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-07-18 18:56:36.356330 => 2024-07-18 18:56:36.519124
[0m18:56:36.519963 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d6e5360>]}
[0m18:56:36.520560 [info ] [Thread-2 (]: 10 of 95 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.22s]
[0m18:56:36.521057 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m18:56:36.521541 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m18:56:36.522238 [info ] [Thread-2 (]: 12 of 95 START sql view model test.normalize_calltouch_events_default_calls .... [RUN]
[0m18:56:36.523653 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m18:56:36.523917 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m18:56:36.524097 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m18:56:36.530469 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m18:56:36.539979 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.544572 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.551425 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.595746 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m18:56:36.604829 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    drop table if exists test.normalize_appsflyer_events_default_in_app_events__dbt_backup 
  
  ...
[0m18:56:36.613527 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m18:56:36.616941 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-07-18 18:56:36.524201 => 2024-07-18 18:56:36.616710
[0m18:56:36.617501 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m18:56:36.618213 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.622812 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m18:56:36.624278 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    rename table test.normalize_appsflyer_events_default_in_app_events to test.normalize_appsflyer_events_default_in_app_events__dbt_backup 
  
  ...
[0m18:56:36.625950 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


  create view test.normalize_calltouch_events_default_calls__dbt_tmp 
  
  as (
    SELECT
        replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1') AS __date, 
        JSONExtractString(_airbyte_data, 'additionalTags') AS additionalTags, 
        JSONExtractString(_airbyte_data, 'attribution') AS attribution, 
        JSONExtractString(_airbyte_data, 'attrs') AS attrs, 
        JSONExtractString(_airbyte_data, 'browser') AS browser, 
        JSONExtractString(_airbyte_data, 'callbackCall') AS callbackCall, 
        JSONExtractString(_airbyte_data, 'callbackInfo') AS callbackInfo, 
        JSONExtractString(_airbyte_data, 'callClientUniqueId') AS callClientUniqueId, 
        JSONExtractString(_airbyte_data, 'callerNumber') AS callerNumber, 
        JSONExtractString(_airbyte_data, 'callId') AS callId, 
        JSONExtractString(_airbyte_data, 'callphase') AS callphase, 
        JSONExtractString(_airbyte_data, 'callReferenceId') AS callReferenceId, 
        JSONExtractString(_airbyte_data, 'callUrl') AS callUrl, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'clientId') AS clientId, 
        JSONExtractString(_airbyte_data, 'ctCallerId') AS ctCallerId, 
        JSONExtractString(_airbyte_data, 'ctClientId') AS ctClientId, 
        JSONExtractString(_airbyte_data, 'ctGlobalId') AS ctGlobalId, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'dcm') AS dcm, 
        JSONExtractString(_airbyte_data, 'device') AS device, 
        JSONExtractString(_airbyte_data, 'duration') AS duration, 
        JSONExtractString(_airbyte_data, 'googleAdWords') AS googleAdWords, 
        JSONExtractString(_airbyte_data, 'hostname') AS hostname, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'keyword') AS keyword, 
        JSONExtractString(_airbyte_data, 'manager') AS manager, 
        JSONExtractString(_airbyte_data, 'mapVisits') AS mapVisits, 
        JSONExtractString(_airbyte_data, 'medium') AS medium, 
        JSONExtractString(_airbyte_data, 'order') AS order, 
        JSONExtractString(_airbyte_data, 'orders') AS orders, 
        JSONExtractString(_airbyte_data, 'os') AS os, 
        JSONExtractString(_airbyte_data, 'phoneNumber') AS phoneNumber, 
        JSONExtractString(_airbyte_data, 'phonesInText') AS phonesInText, 
        JSONExtractString(_airbyte_data, 'phrases') AS phrases, 
        JSONExtractString(_airbyte_data, 'redirectNumber') AS redirectNumber, 
        JSONExtractString(_airbyte_data, 'ref') AS ref, 
        JSONExtractString(_airbyte_data, 'sessionDate') AS sessionDate, 
        JSONExtractString(_airbyte_data, 'sessionId') AS sessionId, 
        JSONExtractString(_airbyte_data, 'sipCallId') AS sipCallId, 
        JSONExtractString(_airbyte_data, 'siteId') AS siteId, 
        JSONExtractString(_airbyte_data, 'siteName') AS siteName, 
        JSONExtractString(_airbyte_data, 'source') AS source, 
        JSONExtractString(_airbyte_data, 'statusDetails') AS statusDetails, 
        JSONExtractString(_airbyte_data, 'subPoolName') AS subPoolName, 
        JSONExtractString(_airbyte_data, 'successful') AS successful, 
        JSONExtractString(_airbyte_data, 'targetCall') AS targetCall, 
        JSONExtractString(_airbyte_data, 'timestamp') AS timestamp, 
        JSONExtractString(_airbyte_data, 'uniqTargetCall') AS uniqTargetCall, 
        JSONExtractString(_airbyte_data, 'uniqueCall') AS uniqueCall, 
        JSONExtractString(_airbyte_data, 'url') AS url, 
        JSONExtractString(_airbyte_data, 'userAgent') AS userAgent, 
        JSONExtractString(_airbyte_data, 'utmCampaign') AS utmCampaign, 
        JSONExtractString(_airbyte_data, 'utmContent') AS utmContent, 
        JSONExtractString(_airbyte_data, 'utmMedium') AS utmMedium, 
        JSONExtractString(_airbyte_data, 'utmSource') AS utmSource, 
        JSONExtractString(_airbyte_data, 'utmTerm') AS utmTerm, 
        JSONExtractString(_airbyte_data, 'waitingConnect') AS waitingConnect, 
        JSONExtractString(_airbyte_data, 'yaClientId') AS yaClientId, 
        JSONExtractString(_airbyte_data, 'yandexDirect') AS yandexDirect,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at,
        toInt32("_airbyte_loaded_at") AS _airbyte_loaded_at
FROM airbyte_internal.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
)

)
  )...
[0m18:56:36.629644 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.632942 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    drop table if exists test.normalize_appsflyer_events_default_in_app_events 
  
  ...
[0m18:56:36.636497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.637720 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    rename table test.normalize_appsflyer_events_default_in_app_events__dbt_tmp to test.normalize_appsflyer_events_default_in_app_events 
  
  ...
[0m18:56:36.641251 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.645409 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */
drop table if exists test.normalize_appsflyer_events_default_in_app_events__dbt_backup 
  ...
[0m18:56:36.649467 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.651088 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events (execute): 2024-07-18 18:56:36.498052 => 2024-07-18 18:56:36.651009
[0m18:56:36.651758 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:36.652519 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fa65540>]}
[0m18:56:36.657207 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m18:56:36.658014 [info ] [Thread-1 (]: 11 of 95 OK created sql view model test.normalize_appsflyer_events_default_in_app_events  [[32mOK[0m in 0.31s]
[0m18:56:36.659523 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m18:56:36.660649 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m18:56:36.661445 [info ] [Thread-1 (]: 13 of 95 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m18:56:36.662629 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m18:56:36.663478 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.663846 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m18:56:36.665967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls to test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m18:56:36.666702 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m18:56:36.672011 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m18:56:36.673457 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.679362 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls 
  
  ...
[0m18:56:36.682670 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.684078 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls__dbt_tmp to test.normalize_calltouch_events_default_calls 
  
  ...
[0m18:56:36.686163 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.689756 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.691293 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.695427 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */
drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  ...
[0m18:56:36.699866 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.706368 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.709351 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m18:56:36.710775 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-07-18 18:56:36.618452 => 2024-07-18 18:56:36.710708
[0m18:56:36.711738 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fab6aa0>]}
[0m18:56:36.712395 [info ] [Thread-2 (]: 12 of 95 OK created sql view model test.normalize_calltouch_events_default_calls  [[32mOK[0m in 0.19s]
[0m18:56:36.712801 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m18:56:36.713163 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m18:56:36.714550 [info ] [Thread-2 (]: 14 of 95 START sql view model test.normalize_mt_registry_default_banners ....... [RUN]
[0m18:56:36.714917 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-07-18 18:56:36.667697 => 2024-07-18 18:56:36.714841
[0m18:56:36.716091 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m18:56:36.716810 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m18:56:36.717292 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m18:56:36.724140 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m18:56:36.724705 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m18:56:36.729195 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m18:56:36.730471 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
)

)
  )...
[0m18:56:36.738302 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.741716 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.743029 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.746120 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m18:56:36.751125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.752520 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m18:56:36.753290 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.761435 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m18:56:36.762346 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.765832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m18:56:36.767822 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-07-18 18:56:36.725292 => 2024-07-18 18:56:36.767445
[0m18:56:36.768422 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m18:56:36.773284 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m18:56:36.774201 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.775850 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m18:56:36.777792 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


  create view test.normalize_mt_registry_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
        JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_mt_default_accountid_banners
)

)
  )...
[0m18:56:36.781447 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.787503 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m18:56:36.788201 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.792581 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m18:56:36.793429 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.796115 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-07-18 18:56:36.717660 => 2024-07-18 18:56:36.796042
[0m18:56:36.796821 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fa65780>]}
[0m18:56:36.797329 [info ] [Thread-1 (]: 13 of 95 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.13s]
[0m18:56:36.798135 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.798625 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m18:56:36.800347 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners to test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m18:56:36.801089 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m18:56:36.803065 [info ] [Thread-1 (]: 15 of 95 START sql view model test.normalize_mt_registry_default_campaigns ..... [RUN]
[0m18:56:36.804268 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m18:56:36.804692 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m18:56:36.805440 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.805853 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m18:56:36.808682 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners 
  
  ...
[0m18:56:36.814145 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m18:56:36.818139 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.819392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners__dbt_tmp to test.normalize_mt_registry_default_banners 
  
  ...
[0m18:56:36.823179 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:36.827553 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */
drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  ...
[0m18:56:36.828990 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.835724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.836618 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.838885 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (execute): 2024-07-18 18:56:36.768593 => 2024-07-18 18:56:36.838810
[0m18:56:36.842113 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4f9fc1f0>]}
[0m18:56:36.842898 [info ] [Thread-2 (]: 14 of 95 OK created sql view model test.normalize_mt_registry_default_banners .. [[32mOK[0m in 0.13s]
[0m18:56:36.843528 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m18:56:36.844120 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m18:56:36.845142 [info ] [Thread-2 (]: 16 of 95 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m18:56:36.847025 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.848296 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m18:56:36.857666 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m18:56:36.858445 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m18:56:36.859898 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m18:56:36.866103 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-07-18 18:56:36.809239 => 2024-07-18 18:56:36.865819
[0m18:56:36.869170 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m18:56:36.869769 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m18:56:36.879664 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m18:56:36.880744 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.885969 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:36.888299 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


  create view test.normalize_mt_registry_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_campaigns') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
)

)
  )...
[0m18:56:36.894358 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.901347 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m18:56:36.902431 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.910420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m18:56:36.913137 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-07-18 18:56:36.860517 => 2024-07-18 18:56:36.912894
[0m18:56:36.913612 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m18:56:36.921165 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m18:56:36.923001 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.925661 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns to test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m18:56:36.927648 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
        JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_sheets_default_accountid_planCosts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
)

)
  )...
[0m18:56:36.931286 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:36.936858 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns 
  
  ...
[0m18:56:36.938408 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.042685 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m18:56:37.044808 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m18:56:37.046036 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns__dbt_tmp to test.normalize_mt_registry_default_campaigns 
  
  ...
[0m18:56:37.050493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.051016 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.054619 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */
drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  ...
[0m18:56:37.056081 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m18:56:37.060228 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.061678 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (execute): 2024-07-18 18:56:36.871849 => 2024-07-18 18:56:37.061608
[0m18:56:37.062432 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.063252 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d61a4a0>]}
[0m18:56:37.066588 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m18:56:37.067533 [info ] [Thread-1 (]: 15 of 95 OK created sql view model test.normalize_mt_registry_default_campaigns  [[32mOK[0m in 0.26s]
[0m18:56:37.069126 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m18:56:37.069735 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m18:56:37.070158 [info ] [Thread-1 (]: 17 of 95 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m18:56:37.070827 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.072080 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m18:56:37.073914 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m18:56:37.074451 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m18:56:37.076402 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m18:56:37.081324 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m18:56:37.082298 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.088669 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m18:56:37.091387 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.096163 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:37.097753 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.099517 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-07-18 18:56:36.913757 => 2024-07-18 18:56:37.099404
[0m18:56:37.100439 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d7238e0>]}
[0m18:56:37.101376 [info ] [Thread-2 (]: 16 of 95 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.25s]
[0m18:56:37.101846 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m18:56:37.102250 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m18:56:37.102859 [info ] [Thread-2 (]: 18 of 95 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m18:56:37.104086 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.105342 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m18:56:37.113689 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m18:56:37.114105 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m18:56:37.114672 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m18:56:37.120016 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m18:56:37.121507 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-07-18 18:56:37.076703 => 2024-07-18 18:56:37.121331
[0m18:56:37.121974 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m18:56:37.127693 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m18:56:37.128590 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.131873 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:37.134116 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
        JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
        JSONExtractString(_airbyte_data, 'data') AS data, 
        JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
        JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
        JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
)

)
  )...
[0m18:56:37.137724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.152442 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m18:56:37.153572 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.157742 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m18:56:37.159333 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-18 18:56:37.115255 => 2024-07-18 18:56:37.159171
[0m18:56:37.160094 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m18:56:37.166178 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m18:56:37.166982 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.169236 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m18:56:37.170571 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
        JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'moat') AS moat, 
        JSONExtractString(_airbyte_data, 'playable') AS playable, 
        JSONExtractString(_airbyte_data, 'romi') AS romi, 
        JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
        JSONExtractString(_airbyte_data, 'tps') AS tps, 
        JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
        JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
        JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
)

)
  )...
[0m18:56:37.172302 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.175416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m18:56:37.179244 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.180441 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m18:56:37.181227 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.185691 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m18:56:37.186668 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.192274 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m18:56:37.193387 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.195733 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m18:56:37.197035 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.199632 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-07-18 18:56:37.122281 => 2024-07-18 18:56:37.199553
[0m18:56:37.200532 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d5e5ed0>]}
[0m18:56:37.201736 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.201054 [info ] [Thread-1 (]: 17 of 95 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.13s]
[0m18:56:37.205700 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m18:56:37.206178 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m18:56:37.207335 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m18:56:37.208081 [info ] [Thread-1 (]: 19 of 95 START sql view model test.normalize_vkads_registry_default_ad_plans ... [RUN]
[0m18:56:37.209020 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m18:56:37.210359 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m18:56:37.211683 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.212122 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m18:56:37.213669 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m18:56:37.219221 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m18:56:37.223800 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.229445 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m18:56:37.230299 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.235995 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:37.240712 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.241448 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.242905 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-18 18:56:37.160489 => 2024-07-18 18:56:37.242841
[0m18:56:37.260042 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d6e6650>]}
[0m18:56:37.260585 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m18:56:37.261189 [info ] [Thread-2 (]: 18 of 95 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.15s]
[0m18:56:37.262460 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m18:56:37.263222 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m18:56:37.264627 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-07-18 18:56:37.214124 => 2024-07-18 18:56:37.264510
[0m18:56:37.264115 [info ] [Thread-2 (]: 20 of 95 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m18:56:37.265325 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m18:56:37.266160 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m18:56:37.271278 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m18:56:37.271795 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m18:56:37.272801 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m18:56:37.277114 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m18:56:37.279603 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


  create view test.normalize_vkads_registry_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
        JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
        JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
        JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
        JSONExtractString(_airbyte_data, 'created') AS created, 
        JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
        JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'objective') AS objective, 
        JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
        JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
        JSONExtractString(_airbyte_data, 'status') AS status, 
        JSONExtractString(_airbyte_data, 'updated') AS updated, 
        JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
)

)
  )...
[0m18:56:37.286919 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.290697 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:37.291427 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.296149 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m18:56:37.298215 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.310656 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.312414 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m18:56:37.314022 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans to test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m18:56:37.316512 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-07-18 18:56:37.273294 => 2024-07-18 18:56:37.316321
[0m18:56:37.316971 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m18:56:37.321795 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m18:56:37.322675 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.325995 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m18:56:37.327229 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
        JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
        JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
        JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
        JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Date') AS Date, 
        JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_yd_default_accountid_custom_report') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
)

)
  )...
[0m18:56:37.329295 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.330401 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans__dbt_tmp to test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m18:56:37.334103 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.338298 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */
drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m18:56:37.339768 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.343274 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m18:56:37.344899 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.346559 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (execute): 2024-07-18 18:56:37.266604 => 2024-07-18 18:56:37.346499
[0m18:56:37.347450 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d957e80>]}
[0m18:56:37.348053 [info ] [Thread-1 (]: 19 of 95 OK created sql view model test.normalize_vkads_registry_default_ad_plans  [[32mOK[0m in 0.14s]
[0m18:56:37.349416 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m18:56:37.350318 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.351019 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m18:56:37.352556 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m18:56:37.353843 [info ] [Thread-1 (]: 21 of 95 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m18:56:37.356916 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m18:56:37.357261 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m18:56:37.357480 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m18:56:37.361769 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m18:56:37.362617 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.369848 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m18:56:37.370826 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.375332 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m18:56:37.376469 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.379334 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m18:56:37.382350 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.389095 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.398753 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m18:56:37.414591 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m18:56:37.415495 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.418282 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-07-18 18:56:37.317163 => 2024-07-18 18:56:37.418213
[0m18:56:37.419491 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d81db70>]}
[0m18:56:37.419884 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-07-18 18:56:37.357639 => 2024-07-18 18:56:37.419807
[0m18:56:37.420360 [info ] [Thread-2 (]: 20 of 95 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.15s]
[0m18:56:37.420907 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m18:56:37.421527 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m18:56:37.426577 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m18:56:37.427405 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m18:56:37.428714 [info ] [Thread-2 (]: 22 of 95 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m18:56:37.429473 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m18:56:37.429793 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m18:56:37.430360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
        JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
        JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
        JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
        JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
        JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
)

)
  )...
[0m18:56:37.430951 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m18:56:37.446347 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m18:56:37.448369 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.453552 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m18:56:37.454684 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-07-18 18:56:37.432487 => 2024-07-18 18:56:37.454514
[0m18:56:37.455389 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m18:56:37.461666 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.463835 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m18:56:37.488580 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.498844 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m18:56:37.501648 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.505544 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.506745 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m18:56:37.509481 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.510097 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.513272 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.518445 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m18:56:37.523241 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.524930 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-07-18 18:56:37.422006 => 2024-07-18 18:56:37.524842
[0m18:56:37.525847 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fd713f0>]}
[0m18:56:37.526530 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.527451 [info ] [Thread-1 (]: 21 of 95 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.17s]
[0m18:56:37.537652 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:37.538448 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m18:56:37.548262 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:37.549133 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m18:56:37.551210 [info ] [Thread-1 (]: 23 of 95 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m18:56:37.552164 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m18:56:37.552517 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m18:56:37.552745 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m18:56:37.556969 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m18:56:37.557910 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.574994 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-07-18 18:56:37.552867 => 2024-07-18 18:56:37.574804
[0m18:56:37.580401 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
    )
        ...
[0m18:56:37.581020 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m18:56:37.589963 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.596528 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.602393 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.608217 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.610677 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:37.611378 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:37.614176 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:37.619723 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.623872 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.626304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
    )
        ...
[0m18:56:37.627697 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.629482 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m18:56:37.631067 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
  
      ...
[0m18:56:37.642622 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.646340 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.651645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.653820 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m18:56:37.654315 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
  
      ...
[0m18:56:37.657852 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:37.658981 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:37.666780 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.667891 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:37.738493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m18:56:37.741766 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.743117 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m18:56:37.745980 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.747402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.749092 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:37.753634 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.755719 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:37.756840 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.761088 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:37.766284 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.769093 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m18:56:37.770786 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.773749 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:37.775283 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.777661 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-07-18 18:56:37.582060 => 2024-07-18 18:56:37.777589
[0m18:56:37.778273 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d61a4a0>]}
[0m18:56:37.778688 [info ] [Thread-1 (]: 23 of 95 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.23s]
[0m18:56:37.779066 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m18:56:37.779391 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m18:56:37.780682 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.780118 [info ] [Thread-1 (]: 24 of 95 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m18:56:37.784331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m18:56:37.785425 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m18:56:37.786928 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m18:56:37.787460 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m18:56:37.791437 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m18:56:37.792306 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.794503 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-07-18 18:56:37.455742 => 2024-07-18 18:56:37.794418
[0m18:56:37.795698 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d6f8490>]}
[0m18:56:37.796409 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-07-18 18:56:37.787653 => 2024-07-18 18:56:37.796269
[0m18:56:37.797099 [info ] [Thread-2 (]: 22 of 95 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.37s]
[0m18:56:37.797965 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m18:56:37.798727 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m18:56:37.807433 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.808306 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m18:56:37.810634 [info ] [Thread-2 (]: 25 of 95 START sql table model test.incremental_adjust_registry_default_events . [RUN]
[0m18:56:37.811590 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_registry_default_events'
[0m18:56:37.811869 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_registry_default_events)
[0m18:56:37.812039 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m18:56:37.815941 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m18:56:37.816836 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.820950 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.822335 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (compile): 2024-07-18 18:56:37.812135 => 2024-07-18 18:56:37.822171
[0m18:56:37.823539 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m18:56:37.837744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.841053 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

            

    
        create table test.incremental_adjust_registry_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
    )
        ...
[0m18:56:37.843912 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:37.849203 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:37.853108 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:37.855530 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
    )
        ...
[0m18:56:37.868813 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.873325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_registry_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.873943 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.950190 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:37.950858 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m18:56:37.953427 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m18:56:37.953937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_registry_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
  ...
[0m18:56:37.956268 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.958113 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m18:56:37.958678 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
  
      ...
[0m18:56:37.972333 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.977363 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
EXCHANGE TABLES test.incremental_adjust_registry_default_events__dbt_backup AND test.incremental_adjust_registry_default_events 
  
  ...
[0m18:56:37.981404 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:37.982474 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:37.983036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.988087 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
drop table if exists test.incremental_adjust_registry_default_events__dbt_backup 
  ...
[0m18:56:37.993991 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:37.995726 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (execute): 2024-07-18 18:56:37.823964 => 2024-07-18 18:56:37.995629
[0m18:56:37.996561 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d7ee140>]}
[0m18:56:37.997045 [info ] [Thread-2 (]: 25 of 95 OK created sql table model test.incremental_adjust_registry_default_events  [[32mOK[0m in 0.19s]
[0m18:56:37.997467 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m18:56:37.997775 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m18:56:37.998495 [info ] [Thread-2 (]: 26 of 95 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m18:56:37.999286 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m18:56:37.999602 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m18:56:37.999791 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m18:56:38.004291 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m18:56:38.005448 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-07-18 18:56:37.999890 => 2024-07-18 18:56:38.005291
[0m18:56:38.005886 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m18:56:38.012533 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.019821 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.024919 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.030474 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.034464 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:38.038075 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:38.039289 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m18:56:38.042298 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.043057 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:38.046010 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
    )
        ...
[0m18:56:38.048254 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:38.050240 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:38.057388 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.061071 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:38.064850 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:38.068382 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m18:56:38.069653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:38.073006 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.073952 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.077126 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-07-18 18:56:37.799196 => 2024-07-18 18:56:38.077048
[0m18:56:38.078001 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d85cc70>]}
[0m18:56:38.079868 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.082843 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m18:56:38.084072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
  
      ...
[0m18:56:38.099774 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:38.100784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:38.162558 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m18:56:38.166349 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.172003 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.173538 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:38.183889 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.186670 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:38.190813 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:38.193640 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m18:56:38.196570 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:38.198856 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-07-18 18:56:38.006063 => 2024-07-18 18:56:38.198767
[0m18:56:38.199588 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8b90f0>]}
[0m18:56:38.871895 [info ] [Thread-1 (]: 24 of 95 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.29s]
[0m18:56:38.873356 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m18:56:38.872690 [info ] [Thread-2 (]: 26 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.20s]
[0m18:56:38.874421 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m18:56:38.875226 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m18:56:38.876029 [info ] [Thread-1 (]: 27 of 95 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m18:56:38.876926 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m18:56:38.877928 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m18:56:38.878628 [info ] [Thread-2 (]: 28 of 95 START sql incremental model test.incremental_appmetrica_events_default_installations  [RUN]
[0m18:56:38.879301 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m18:56:38.880105 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations'
[0m18:56:38.880670 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m18:56:38.881248 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations)
[0m18:56:38.886058 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m18:56:38.886643 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m18:56:38.890383 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m18:56:38.891016 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (compile): 2024-07-18 18:56:38.887063 => 2024-07-18 18:56:38.890925
[0m18:56:38.891360 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-07-18 18:56:38.881767 => 2024-07-18 18:56:38.891254
[0m18:56:38.891763 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m18:56:38.892215 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m18:56:38.900199 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.908522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.915702 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.919561 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.921461 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.924817 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.929874 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:38.932737 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:38.933629 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.936707 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:38.940084 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_installations:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:38.946034 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:38.946797 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.949667 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
    )
        ...
[0m18:56:38.950894 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:38.953621 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

            

    
        create table test.incremental_appmetrica_events_default_installations__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
    )
        ...
[0m18:56:38.969033 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:38.972159 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.972951 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:38.976825 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:38.986556 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.987348 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:38.989216 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m18:56:38.991278 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m18:56:38.992579 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
  
      ...
[0m18:56:38.993336 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_installations__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
  
      ...
[0m18:56:39.016321 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.017408 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

      delete from test.incremental_appmetrica_events_default_installations where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_installations__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:39.021894 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:39.023234 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:39.063384 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:39.066876 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.072580 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.074643 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:39.076254 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m18:56:39.079735 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.084762 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.088894 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.090530 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.092431 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        insert into test.incremental_appmetrica_events_default_installations select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_installations__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:39.093337 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.098168 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m18:56:39.101911 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.104202 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-07-18 18:56:38.900614 => 2024-07-18 18:56:39.104099
[0m18:56:39.105470 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.106351 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d5f1240>]}
[0m18:56:39.109744 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.111473 [info ] [Thread-1 (]: 27 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.23s]
[0m18:56:39.112214 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m18:56:39.113160 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m18:56:39.114425 [info ] [Thread-1 (]: 29 of 95 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m18:56:39.115898 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m18:56:39.116824 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.117234 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m18:56:39.121187 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_distributed_new_data 
  ...
[0m18:56:39.121859 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m18:56:39.127853 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m18:56:39.129163 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.131992 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (execute): 2024-07-18 18:56:38.892510 => 2024-07-18 18:56:39.131911
[0m18:56:39.133128 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d5f24d0>]}
[0m18:56:39.133590 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-07-18 18:56:39.123160 => 2024-07-18 18:56:39.133500
[0m18:56:39.134467 [info ] [Thread-2 (]: 28 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_installations  [[32mOK[0m in 0.25s]
[0m18:56:39.135468 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m18:56:39.136136 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m18:56:39.145871 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.147052 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m18:56:39.149685 [info ] [Thread-2 (]: 30 of 95 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m18:56:39.151391 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m18:56:39.152248 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m18:56:39.152689 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m18:56:39.158318 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m18:56:39.159406 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.163486 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.165397 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-07-18 18:56:39.152823 => 2024-07-18 18:56:39.165114
[0m18:56:39.166197 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m18:56:39.173939 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.174837 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.178982 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:39.183436 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.184517 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.191714 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.193051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.196402 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
    )
        ...
[0m18:56:39.203915 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.207143 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:39.210956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.214429 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.217431 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
    )
        ...
[0m18:56:39.219249 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.223053 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.228937 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.230889 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m18:56:39.231609 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
  
      ...
[0m18:56:39.237344 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.240526 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.247002 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.249314 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m18:56:39.250032 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
  
      ...
[0m18:56:39.266428 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.267684 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:39.289323 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m18:56:39.291278 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:39.307929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:39.311170 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.317498 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.319377 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:39.327043 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:39.330368 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.332443 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.337712 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.342502 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.344255 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:39.345254 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.349623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m18:56:39.353575 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.355997 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-07-18 18:56:39.166518 => 2024-07-18 18:56:39.355848
[0m18:56:39.356737 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.357866 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d91b010>]}
[0m18:56:39.361978 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.362667 [info ] [Thread-2 (]: 30 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.21s]
[0m18:56:39.364584 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m18:56:39.365831 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m18:56:39.367599 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.366466 [info ] [Thread-2 (]: 31 of 95 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m18:56:39.371416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m18:56:39.372599 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m18:56:39.373748 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m18:56:39.374370 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m18:56:39.378419 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m18:56:39.379481 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.382022 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-07-18 18:56:39.136455 => 2024-07-18 18:56:39.381922
[0m18:56:39.383657 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fa65270>]}
[0m18:56:39.384540 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-07-18 18:56:39.374543 => 2024-07-18 18:56:39.384348
[0m18:56:39.385319 [info ] [Thread-1 (]: 29 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.27s]
[0m18:56:39.386149 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m18:56:39.386958 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m18:56:39.394239 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
    )
        ...
[0m18:56:39.395153 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m18:56:39.397746 [info ] [Thread-1 (]: 32 of 95 START sql incremental model test.incremental_appsflyer_events_default_in_app_events  [RUN]
[0m18:56:39.399772 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events'
[0m18:56:39.400351 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events)
[0m18:56:39.400684 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m18:56:39.412999 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"
[0m18:56:39.414677 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.419499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.420985 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events (compile): 2024-07-18 18:56:39.400920 => 2024-07-18 18:56:39.420811
[0m18:56:39.424529 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m18:56:39.431330 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.433890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.436774 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m18:56:39.439492 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
  ...
[0m18:56:39.446790 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.452159 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.457189 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.457984 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.459774 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m18:56:39.498835 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.512551 [debug] [Thread-1 (]: 
    In test.incremental_appsflyer_events_default_in_app_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:39.514945 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m18:56:39.518278 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */
drop table if exists test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.522751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.523638 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.525328 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-07-18 18:56:39.387544 => 2024-07-18 18:56:39.525251
[0m18:56:39.528169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

            

    
        create table test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appsflyer_events_default_in_app_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appsflyer_events_default_in_app_events
    )
        ...
[0m18:56:39.529128 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d5f7d30>]}
[0m18:56:39.531058 [info ] [Thread-2 (]: 31 of 95 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.16s]
[0m18:56:39.531827 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m18:56:39.532451 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m18:56:39.533001 [info ] [Thread-2 (]: 33 of 95 START sql incremental model test.incremental_calltouch_events_default_calls  [RUN]
[0m18:56:39.533879 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m18:56:39.534326 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m18:56:39.534555 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m18:56:39.541286 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m18:56:39.543639 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-07-18 18:56:39.534956 => 2024-07-18 18:56:39.543308
[0m18:56:39.544259 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m18:56:39.552434 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.561013 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.571123 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.571836 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:39.576752 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.577600 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.592015 [debug] [Thread-2 (]: 
    In test.incremental_calltouch_events_default_calls:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:39.593048 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.596323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.600110 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"
[0m18:56:39.602488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

        
  
    
    
        
        insert into test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "ad_unit", "advertising_id", "af_ad", "af_ad_id", "af_ad_type", "af_adset", "af_adset_id", "af_attribution_lookback", "af_c_id", "af_channel", "af_cost_currency", "af_cost_model", "af_cost_value", "af_keywords", "af_prt", "af_reengagement_window", "af_siteid", "af_sub1", "af_sub2", "af_sub3", "af_sub4", "af_sub5", "af_sub_siteid", "amazon_aid", "android_id", "app_id", "app_name", "app_type", "app_version", "appsflyer_id", "att", "attributed_touch_time", "attributed_touch_type", "blocked_reason", "blocked_reason_rule", "blocked_reason_value", "blocked_sub_reason", "bundle_id", "campaign", "campaign_type", "carrier", "city", "contributor1_af_prt", "contributor1_campaign", "contributor1_match_type", "contributor1_media_source", "contributor1_touch_time", "contributor1_touch_type", "contributor2_af_prt", "contributor2_campaign", "contributor2_match_type", "contributor2_media_source", "contributor2_touch_time", "contributor2_touch_type", "contributor3_af_prt", "contributor3_campaign", "contributor3_match_type", "contributor3_media_source", "contributor3_touch_time", "contributor3_touch_type", "conversion_type", "country_code", "custom_data", "customer_user_id", "deeplink_url", "device_category", "device_download_time", "device_model", "device_type", "dma", "event_name", "event_revenue", "event_revenue_currency", "event_revenue_usd", "event_source", "event_time", "event_value", "gp_broadcast_referrer", "gp_click_time", "gp_install_begin", "gp_referrer", "http_referrer", "idfa", "idfv", "imei", "impressions", "install_app_store", "install_time", "ip", "is_lat", "is_primary_attribution", "is_receipt_validated", "is_retargeting", "keyword_id", "keyword_match_type", "language", "match_type", "media_source", "mediation_network", "monetization_network", "network_account_id", "oaid", "operator", "original_url", "os_version", "placement", "platform", "postal_code", "region", "rejected_reason", "rejected_reason_value", "retargeting_conversion_type", "sdk_version", "segment", "state", "store_reinstall", "user_agent", "wifi", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appsflyer_events_default_in_app_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appsflyer_events_default_in_app_events
  
      ...
[0m18:56:39.605011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.608331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

            

    
        create table test.incremental_calltouch_events_default_calls__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
    )
        ...
[0m18:56:39.625198 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.628875 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.635083 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.637468 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m18:56:39.638042 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        
  
    
    
        
        insert into test.incremental_calltouch_events_default_calls__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
  
      ...
[0m18:56:39.672023 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:39.673231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

      delete from test.incremental_calltouch_events_default_calls where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_calltouch_events_default_calls__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:39.724523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:39.727893 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.733635 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.736258 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        insert into test.incremental_calltouch_events_default_calls select "__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_calltouch_events_default_calls__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:39.751861 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.754832 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.759793 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.765517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_distributed_new_data 
  ...
[0m18:56:39.768459 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.771135 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-07-18 18:56:39.544454 => 2024-07-18 18:56:39.771041
[0m18:56:39.772021 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d5f24a0>]}
[0m18:56:39.772628 [info ] [Thread-2 (]: 33 of 95 OK created sql incremental model test.incremental_calltouch_events_default_calls  [[32mOK[0m in 0.24s]
[0m18:56:39.773070 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m18:56:39.773538 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m18:56:39.774548 [info ] [Thread-2 (]: 34 of 95 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m18:56:39.775398 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m18:56:39.775555 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m18:56:39.775714 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m18:56:39.779599 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m18:56:39.780941 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-07-18 18:56:39.775813 => 2024-07-18 18:56:39.780790
[0m18:56:39.781304 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m18:56:39.789084 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.794996 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.798887 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.805332 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.807820 [debug] [Thread-2 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:39.811420 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.814460 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.815218 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.21 seconds
[0m18:56:39.818542 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
    )
        ...
[0m18:56:39.820943 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

      delete from test.incremental_appsflyer_events_default_in_app_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:39.838665 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:39.843312 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.849268 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.851719 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m18:56:39.853037 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
  
      ...
[0m18:56:39.868136 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.869408 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:39.898530 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m18:56:39.901662 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.907756 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.911202 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

        insert into test.incremental_appsflyer_events_default_in_app_events select "__date", "ad_unit", "advertising_id", "af_ad", "af_ad_id", "af_ad_type", "af_adset", "af_adset_id", "af_attribution_lookback", "af_c_id", "af_channel", "af_cost_currency", "af_cost_model", "af_cost_value", "af_keywords", "af_prt", "af_reengagement_window", "af_siteid", "af_sub1", "af_sub2", "af_sub3", "af_sub4", "af_sub5", "af_sub_siteid", "amazon_aid", "android_id", "app_id", "app_name", "app_type", "app_version", "appsflyer_id", "att", "attributed_touch_time", "attributed_touch_type", "blocked_reason", "blocked_reason_rule", "blocked_reason_value", "blocked_sub_reason", "bundle_id", "campaign", "campaign_type", "carrier", "city", "contributor1_af_prt", "contributor1_campaign", "contributor1_match_type", "contributor1_media_source", "contributor1_touch_time", "contributor1_touch_type", "contributor2_af_prt", "contributor2_campaign", "contributor2_match_type", "contributor2_media_source", "contributor2_touch_time", "contributor2_touch_type", "contributor3_af_prt", "contributor3_campaign", "contributor3_match_type", "contributor3_media_source", "contributor3_touch_time", "contributor3_touch_type", "conversion_type", "country_code", "custom_data", "customer_user_id", "deeplink_url", "device_category", "device_download_time", "device_model", "device_type", "dma", "event_name", "event_revenue", "event_revenue_currency", "event_revenue_usd", "event_source", "event_time", "event_value", "gp_broadcast_referrer", "gp_click_time", "gp_install_begin", "gp_referrer", "http_referrer", "idfa", "idfv", "imei", "impressions", "install_app_store", "install_time", "ip", "is_lat", "is_primary_attribution", "is_receipt_validated", "is_retargeting", "keyword_id", "keyword_match_type", "language", "match_type", "media_source", "mediation_network", "monetization_network", "network_account_id", "oaid", "operator", "original_url", "os_version", "placement", "platform", "postal_code", "region", "rejected_reason", "rejected_reason_value", "retargeting_conversion_type", "sdk_version", "segment", "state", "store_reinstall", "user_agent", "wifi", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:39.912087 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:39.916969 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:39.922388 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.924396 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:39.931592 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:39.935391 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.939152 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.943334 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m18:56:39.947705 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.950322 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-07-18 18:56:39.781418 => 2024-07-18 18:56:39.950237
[0m18:56:39.951233 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d782470>]}
[0m18:56:39.952125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:39.953097 [info ] [Thread-2 (]: 34 of 95 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.18s]
[0m18:56:39.957366 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */
drop table if exists test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:39.958139 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m18:56:39.959782 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m18:56:39.961083 [info ] [Thread-2 (]: 35 of 95 START sql table model test.incremental_mt_registry_default_banners .... [RUN]
[0m18:56:39.962147 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_banners'
[0m18:56:39.963221 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:39.963580 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_banners)
[0m18:56:40.048984 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */
drop table if exists test.incremental_appsflyer_events_default_in_app_events__dbt_distributed_new_data 
  ...
[0m18:56:40.049423 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m18:56:40.054409 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m18:56:40.055505 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.057634 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events (execute): 2024-07-18 18:56:39.424854 => 2024-07-18 18:56:40.057568
[0m18:56:40.058357 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8a53c0>]}
[0m18:56:40.058724 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (compile): 2024-07-18 18:56:40.050661 => 2024-07-18 18:56:40.058605
[0m18:56:40.059434 [info ] [Thread-1 (]: 32 of 95 OK created sql incremental model test.incremental_appsflyer_events_default_in_app_events  [[32mOK[0m in 0.66s]
[0m18:56:40.060039 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m18:56:40.060600 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m18:56:40.064927 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

            

    
        create table test.incremental_mt_registry_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
    )
        ...
[0m18:56:40.065809 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m18:56:40.068454 [info ] [Thread-1 (]: 36 of 95 START sql table model test.incremental_mt_registry_default_campaigns .. [RUN]
[0m18:56:40.070435 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns'
[0m18:56:40.070914 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns)
[0m18:56:40.071263 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m18:56:40.076313 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m18:56:40.076933 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (compile): 2024-07-18 18:56:40.071455 => 2024-07-18 18:56:40.076863
[0m18:56:40.077111 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m18:56:40.081471 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

            

    
        create table test.incremental_mt_registry_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
    )
        ...
[0m18:56:40.084035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.089573 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.094951 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.096510 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m18:56:40.097219 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.100378 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.102260 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
  ...
[0m18:56:40.106489 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.108138 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m18:56:40.108701 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
  ...
[0m18:56:40.114542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.116195 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
EXCHANGE TABLES test.incremental_mt_registry_default_banners__dbt_backup AND test.incremental_mt_registry_default_banners 
  
  ...
[0m18:56:40.118577 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.120008 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_registry_default_campaigns__dbt_backup AND test.incremental_mt_registry_default_campaigns 
  
  ...
[0m18:56:40.121546 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.125988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
drop table if exists test.incremental_mt_registry_default_banners__dbt_backup 
  ...
[0m18:56:40.127257 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.131439 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
drop table if exists test.incremental_mt_registry_default_campaigns__dbt_backup 
  ...
[0m18:56:40.132351 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.134739 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (execute): 2024-07-18 18:56:40.060907 => 2024-07-18 18:56:40.134667
[0m18:56:40.135718 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d53e140>]}
[0m18:56:40.136577 [info ] [Thread-2 (]: 35 of 95 OK created sql table model test.incremental_mt_registry_default_banners  [[32mOK[0m in 0.17s]
[0m18:56:40.137461 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.138379 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m18:56:40.140214 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (execute): 2024-07-18 18:56:40.077199 => 2024-07-18 18:56:40.140158
[0m18:56:40.141083 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m18:56:40.142242 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8a59c0>]}
[0m18:56:40.142662 [info ] [Thread-2 (]: 37 of 95 START sql table model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m18:56:40.144425 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m18:56:40.143147 [info ] [Thread-1 (]: 36 of 95 OK created sql table model test.incremental_mt_registry_default_campaigns  [[32mOK[0m in 0.07s]
[0m18:56:40.145203 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m18:56:40.145811 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m18:56:40.146118 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m18:56:40.146667 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m18:56:40.151294 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m18:56:40.152410 [info ] [Thread-1 (]: 38 of 95 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m18:56:40.154201 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m18:56:40.154894 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m18:56:40.155546 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m18:56:40.158851 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m18:56:40.159414 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-07-18 18:56:40.147558 => 2024-07-18 18:56:40.159279
[0m18:56:40.159869 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m18:56:40.166516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
    )
        ...
[0m18:56:40.167016 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-07-18 18:56:40.155788 => 2024-07-18 18:56:40.166890
[0m18:56:40.168947 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m18:56:40.174036 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
    )
        ...
[0m18:56:40.187248 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.190738 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.192976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.196262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.197145 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.199946 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m18:56:40.201313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_backup ("Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
  ...
[0m18:56:40.204844 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.206690 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m18:56:40.207705 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
  ...
[0m18:56:40.211692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.212829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m18:56:40.217673 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.221746 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m18:56:40.223040 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.224917 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m18:56:40.227324 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.229377 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-07-18 18:56:40.160471 => 2024-07-18 18:56:40.229300
[0m18:56:40.230022 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d733880>]}
[0m18:56:40.230483 [info ] [Thread-2 (]: 37 of 95 OK created sql table model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.09s]
[0m18:56:40.231242 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.232126 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m18:56:40.236390 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m18:56:40.236945 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m18:56:40.238956 [info ] [Thread-2 (]: 39 of 95 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m18:56:40.240453 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m18:56:40.240892 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m18:56:40.241105 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m18:56:40.246086 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m18:56:40.246852 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.249164 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-07-18 18:56:40.169385 => 2024-07-18 18:56:40.249092
[0m18:56:40.249983 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b633e7670>]}
[0m18:56:40.250586 [info ] [Thread-1 (]: 38 of 95 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.10s]
[0m18:56:40.251071 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-18 18:56:40.241282 => 2024-07-18 18:56:40.250951
[0m18:56:40.251546 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m18:56:40.252207 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m18:56:40.252970 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m18:56:40.260074 [info ] [Thread-1 (]: 40 of 95 START sql table model test.incremental_vkads_registry_default_ad_plans  [RUN]
[0m18:56:40.261719 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.262790 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans'
[0m18:56:40.264174 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans)
[0m18:56:40.264638 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m18:56:40.268793 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m18:56:40.269661 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (compile): 2024-07-18 18:56:40.264948 => 2024-07-18 18:56:40.269506
[0m18:56:40.270214 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m18:56:40.275479 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

            

    
        create table test.incremental_vkads_registry_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
    )
        ...
[0m18:56:40.276929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.281408 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.288545 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.293089 [debug] [Thread-2 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:40.295963 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:40.297199 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.300969 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.303087 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.306026 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    )
        ...
[0m18:56:40.307487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.309182 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m18:56:40.310437 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_registry_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
  ...
[0m18:56:40.322031 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.324778 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.326213 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.327582 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_registry_default_ad_plans__dbt_backup AND test.incremental_vkads_registry_default_ad_plans 
  
  ...
[0m18:56:40.330580 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.332466 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m18:56:40.333271 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.337474 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
drop table if exists test.incremental_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m18:56:40.337889 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
  
      ...
[0m18:56:40.343332 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.344582 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (execute): 2024-07-18 18:56:40.270459 => 2024-07-18 18:56:40.344509
[0m18:56:40.345297 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8a59c0>]}
[0m18:56:40.345753 [info ] [Thread-1 (]: 40 of 95 OK created sql table model test.incremental_vkads_registry_default_ad_plans  [[32mOK[0m in 0.08s]
[0m18:56:40.346158 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m18:56:40.346492 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m18:56:40.347022 [info ] [Thread-1 (]: 41 of 95 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m18:56:40.348224 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m18:56:40.348487 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m18:56:40.348662 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m18:56:40.353052 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m18:56:40.354109 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.355664 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:40.356052 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-07-18 18:56:40.348767 => 2024-07-18 18:56:40.355974
[0m18:56:40.357931 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m18:56:40.367711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.373159 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.377355 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.383240 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.386314 [debug] [Thread-1 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:40.389668 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:40.390405 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:40.393681 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.396781 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.399653 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
    )
        ...
[0m18:56:40.401286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.403340 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:40.413273 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.416787 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:40.418591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.422747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.424117 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.427637 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m18:56:40.429027 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.431745 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m18:56:40.433435 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.435399 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-18 18:56:40.253721 => 2024-07-18 18:56:40.435338
[0m18:56:40.436673 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d731a50>]}
[0m18:56:40.437157 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
  
      ...
[0m18:56:40.437633 [info ] [Thread-2 (]: 39 of 95 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.20s]
[0m18:56:40.438912 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m18:56:40.439582 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m18:56:40.440281 [info ] [Thread-2 (]: 42 of 95 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m18:56:40.441428 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m18:56:40.441738 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m18:56:40.441955 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m18:56:40.447181 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m18:56:40.448479 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-07-18 18:56:40.442068 => 2024-07-18 18:56:40.448335
[0m18:56:40.449030 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m18:56:40.456158 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.457444 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.459092 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:40.463786 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.467748 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.474020 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.478919 [debug] [Thread-2 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:40.485799 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:40.489632 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.492682 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
    )
        ...
[0m18:56:40.501735 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:40.504902 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.508563 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.511607 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.512373 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.515286 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:40.519606 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.522063 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m18:56:40.522835 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.525748 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:40.527172 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
  
      ...
[0m18:56:40.530824 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.534848 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m18:56:40.538600 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.540807 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-07-18 18:56:40.358221 => 2024-07-18 18:56:40.540735
[0m18:56:40.541526 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d9b4250>]}
[0m18:56:40.542040 [info ] [Thread-1 (]: 41 of 95 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.19s]
[0m18:56:40.542504 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m18:56:40.542865 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m18:56:40.543589 [info ] [Thread-1 (]: 43 of 95 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m18:56:40.544690 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m18:56:40.544947 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m18:56:40.545230 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m18:56:40.554077 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:40.560981 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:40.575317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m18:56:40.582268 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.604514 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.609501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.617043 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m18:56:40.617610 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:40.621421 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.625920 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.626759 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.628480 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:40.632831 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.638590 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.641974 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_installations$')        
...
[0m18:56:40.642813 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.647316 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:40.652308 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.656325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m18:56:40.657687 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.662658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.664361 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.667091 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-07-18 18:56:40.449304 => 2024-07-18 18:56:40.667013
[0m18:56:40.667849 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d731a50>]}
[0m18:56:40.668371 [info ] [Thread-2 (]: 42 of 95 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.23s]
[0m18:56:40.669128 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.669558 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m18:56:40.672768 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m18:56:40.673536 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m18:56:40.676334 [info ] [Thread-2 (]: 44 of 95 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m18:56:40.677559 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m18:56:40.677930 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m18:56:40.678175 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m18:56:40.687698 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m18:56:40.688591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.693386 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.701883 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.705269 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m18:56:40.706595 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.710562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.712002 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.715478 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.720365 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.721040 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.723910 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m18:56:40.731060 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m18:56:40.733071 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-07-18 18:56:40.545343 => 2024-07-18 18:56:40.732869
[0m18:56:40.733530 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m18:56:40.738995 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-07-18 18:56:40.678283 => 2024-07-18 18:56:40.738889
[0m18:56:40.741544 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.742081 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m18:56:40.749535 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



    )
        ...
[0m18:56:40.750226 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.754898 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.760949 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.767662 [debug] [Thread-1 (]: 
    In test.join_appmetrica_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:40.768533 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:40.771523 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:40.774798 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.778915 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.781317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[8] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



    )
        ...
[0m18:56:40.782146 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.786694 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m18:56:40.789219 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



  ...
[0m18:56:40.798895 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.800227 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m18:56:40.804113 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.808818 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m18:56:40.812525 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.814045 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-07-18 18:56:40.744001 => 2024-07-18 18:56:40.813973
[0m18:56:40.814799 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d6f91b0>]}
[0m18:56:40.815477 [info ] [Thread-2 (]: 44 of 95 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.14s]
[0m18:56:40.816084 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m18:56:40.816594 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appsflyer_events
[0m18:56:40.817638 [info ] [Thread-2 (]: 45 of 95 START sql table model test.join_appsflyer_events ...................... [RUN]
[0m18:56:40.818557 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appsflyer_events'
[0m18:56:40.819071 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appsflyer_events)
[0m18:56:40.819342 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appsflyer_events
[0m18:56:40.828421 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appsflyer_events_[^_]+_in_app_events$')        
...
[0m18:56:40.837495 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.842160 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.846929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.855210 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appsflyer_events"
[0m18:56:40.855738 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appsflyer_events (compile): 2024-07-18 18:56:40.819442 => 2024-07-18 18:56:40.855656
[0m18:56:40.855993 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appsflyer_events
[0m18:56:40.860989 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

            

    
        create table test.join_appsflyer_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appsflyer_events_default_in_app_events
SELECT
    toLowCardinality(attributed_touch_type) AS touch_type,
    toDateTime32(attributed_touch_time) AS touch_time,
    toDateTime32(install_time) AS install_time,
    toDateTime32(event_time) AS event_time,
    toLowCardinality(event_name) AS event_name,
    toLowCardinality(event_source) AS event_source,
    toLowCardinality(af_prt) AS partner,
    toLowCardinality(media_source) AS media_source,
    toLowCardinality(campaign) AS campaign,
    af_siteid AS site_id,
    af_ad AS ad,                                            
    toLowCardinality(country_code) AS country_code,
    toLowCardinality(city) AS city,   
    appsflyer_id,
    customer_user_id AS custom_uid,
    toLowCardinality(platform) AS platform,
    toLowCardinality(is_retargeting) AS is_retargeting,                  
    toLowCardinality(is_primary_attribution) AS is_primary_attribution,  
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('&&&') AS __link                                    
FROM (
    

        (
            select
                cast('test.incremental_appsflyer_events_default_in_app_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_unit" as String) as "ad_unit" ,
                    cast("advertising_id" as String) as "advertising_id" ,
                    cast("af_ad" as String) as "af_ad" ,
                    cast("af_ad_id" as String) as "af_ad_id" ,
                    cast("af_ad_type" as String) as "af_ad_type" ,
                    cast("af_adset" as String) as "af_adset" ,
                    cast("af_adset_id" as String) as "af_adset_id" ,
                    cast("af_attribution_lookback" as String) as "af_attribution_lookback" ,
                    cast("af_c_id" as String) as "af_c_id" ,
                    cast("af_channel" as String) as "af_channel" ,
                    cast("af_cost_currency" as String) as "af_cost_currency" ,
                    cast("af_cost_model" as String) as "af_cost_model" ,
                    cast("af_cost_value" as String) as "af_cost_value" ,
                    cast("af_keywords" as String) as "af_keywords" ,
                    cast("af_prt" as String) as "af_prt" ,
                    cast("af_reengagement_window" as String) as "af_reengagement_window" ,
                    cast("af_siteid" as String) as "af_siteid" ,
                    cast("af_sub1" as String) as "af_sub1" ,
                    cast("af_sub2" as String) as "af_sub2" ,
                    cast("af_sub3" as String) as "af_sub3" ,
                    cast("af_sub4" as String) as "af_sub4" ,
                    cast("af_sub5" as String) as "af_sub5" ,
                    cast("af_sub_siteid" as String) as "af_sub_siteid" ,
                    cast("amazon_aid" as String) as "amazon_aid" ,
                    cast("android_id" as String) as "android_id" ,
                    cast("app_id" as String) as "app_id" ,
                    cast("app_name" as String) as "app_name" ,
                    cast("app_type" as String) as "app_type" ,
                    cast("app_version" as String) as "app_version" ,
                    cast("appsflyer_id" as String) as "appsflyer_id" ,
                    cast("att" as String) as "att" ,
                    cast("attributed_touch_time" as String) as "attributed_touch_time" ,
                    cast("attributed_touch_type" as String) as "attributed_touch_type" ,
                    cast("blocked_reason" as String) as "blocked_reason" ,
                    cast("blocked_reason_rule" as String) as "blocked_reason_rule" ,
                    cast("blocked_reason_value" as String) as "blocked_reason_value" ,
                    cast("blocked_sub_reason" as String) as "blocked_sub_reason" ,
                    cast("bundle_id" as String) as "bundle_id" ,
                    cast("campaign" as String) as "campaign" ,
                    cast("campaign_type" as String) as "campaign_type" ,
                    cast("carrier" as String) as "carrier" ,
                    cast("city" as String) as "city" ,
                    cast("contributor1_af_prt" as String) as "contributor1_af_prt" ,
                    cast("contributor1_campaign" as String) as "contributor1_campaign" ,
                    cast("contributor1_match_type" as String) as "contributor1_match_type" ,
                    cast("contributor1_media_source" as String) as "contributor1_media_source" ,
                    cast("contributor1_touch_time" as String) as "contributor1_touch_time" ,
                    cast("contributor1_touch_type" as String) as "contributor1_touch_type" ,
                    cast("contributor2_af_prt" as String) as "contributor2_af_prt" ,
                    cast("contributor2_campaign" as String) as "contributor2_campaign" ,
                    cast("contributor2_match_type" as String) as "contributor2_match_type" ,
                    cast("contributor2_media_source" as String) as "contributor2_media_source" ,
                    cast("contributor2_touch_time" as String) as "contributor2_touch_time" ,
                    cast("contributor2_touch_type" as String) as "contributor2_touch_type" ,
                    cast("contributor3_af_prt" as String) as "contributor3_af_prt" ,
                    cast("contributor3_campaign" as String) as "contributor3_campaign" ,
                    cast("contributor3_match_type" as String) as "contributor3_match_type" ,
                    cast("contributor3_media_source" as String) as "contributor3_media_source" ,
                    cast("contributor3_touch_time" as String) as "contributor3_touch_time" ,
                    cast("contributor3_touch_type" as String) as "contributor3_touch_type" ,
                    cast("conversion_type" as String) as "conversion_type" ,
                    cast("country_code" as String) as "country_code" ,
                    cast("custom_data" as String) as "custom_data" ,
                    cast("customer_user_id" as String) as "customer_user_id" ,
                    cast("deeplink_url" as String) as "deeplink_url" ,
                    cast("device_category" as String) as "device_category" ,
                    cast("device_download_time" as String) as "device_download_time" ,
                    cast("device_model" as String) as "device_model" ,
                    cast("device_type" as String) as "device_type" ,
                    cast("dma" as String) as "dma" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_revenue" as String) as "event_revenue" ,
                    cast("event_revenue_currency" as String) as "event_revenue_currency" ,
                    cast("event_revenue_usd" as String) as "event_revenue_usd" ,
                    cast("event_source" as String) as "event_source" ,
                    cast("event_time" as String) as "event_time" ,
                    cast("event_value" as String) as "event_value" ,
                    cast("gp_broadcast_referrer" as String) as "gp_broadcast_referrer" ,
                    cast("gp_click_time" as String) as "gp_click_time" ,
                    cast("gp_install_begin" as String) as "gp_install_begin" ,
                    cast("gp_referrer" as String) as "gp_referrer" ,
                    cast("http_referrer" as String) as "http_referrer" ,
                    cast("idfa" as String) as "idfa" ,
                    cast("idfv" as String) as "idfv" ,
                    cast("imei" as String) as "imei" ,
                    cast("impressions" as String) as "impressions" ,
                    cast("install_app_store" as String) as "install_app_store" ,
                    cast("install_time" as String) as "install_time" ,
                    cast("ip" as String) as "ip" ,
                    cast("is_lat" as String) as "is_lat" ,
                    cast("is_primary_attribution" as String) as "is_primary_attribution" ,
                    cast("is_receipt_validated" as String) as "is_receipt_validated" ,
                    cast("is_retargeting" as String) as "is_retargeting" ,
                    cast("keyword_id" as String) as "keyword_id" ,
                    cast("keyword_match_type" as String) as "keyword_match_type" ,
                    cast("language" as String) as "language" ,
                    cast("match_type" as String) as "match_type" ,
                    cast("media_source" as String) as "media_source" ,
                    cast("mediation_network" as String) as "mediation_network" ,
                    cast("monetization_network" as String) as "monetization_network" ,
                    cast("network_account_id" as String) as "network_account_id" ,
                    cast("oaid" as String) as "oaid" ,
                    cast("operator" as String) as "operator" ,
                    cast("original_url" as String) as "original_url" ,
                    cast("os_version" as String) as "os_version" ,
                    cast("placement" as String) as "placement" ,
                    cast("platform" as String) as "platform" ,
                    cast("postal_code" as String) as "postal_code" ,
                    cast("region" as String) as "region" ,
                    cast("rejected_reason" as String) as "rejected_reason" ,
                    cast("rejected_reason_value" as String) as "rejected_reason_value" ,
                    cast("retargeting_conversion_type" as String) as "retargeting_conversion_type" ,
                    cast("sdk_version" as String) as "sdk_version" ,
                    cast("segment" as String) as "segment" ,
                    cast("state" as String) as "state" ,
                    cast("store_reinstall" as String) as "store_reinstall" ,
                    cast("user_agent" as String) as "user_agent" ,
                    cast("wifi" as String) as "wifi" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appsflyer_events_default_in_app_events

            
        )

        )



    )
        ...
[0m18:56:40.912512 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:40.916584 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

    select name, type from system.columns where table = 'join_appsflyer_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.922987 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.925587 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appsflyer_events"
[0m18:56:40.926460 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

  
    
    
        
        insert into test.join_appsflyer_events__dbt_backup ("touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appsflyer_events_default_in_app_events
SELECT
    toLowCardinality(attributed_touch_type) AS touch_type,
    toDateTime32(attributed_touch_time) AS touch_time,
    toDateTime32(install_time) AS install_time,
    toDateTime32(event_time) AS event_time,
    toLowCardinality(event_name) AS event_name,
    toLowCardinality(event_source) AS event_source,
    toLowCardinality(af_prt) AS partner,
    toLowCardinality(media_source) AS media_source,
    toLowCardinality(campaign) AS campaign,
    af_siteid AS site_id,
    af_ad AS ad,                                            
    toLowCardinality(country_code) AS country_code,
    toLowCardinality(city) AS city,   
    appsflyer_id,
    customer_user_id AS custom_uid,
    toLowCardinality(platform) AS platform,
    toLowCardinality(is_retargeting) AS is_retargeting,                  
    toLowCardinality(is_primary_attribution) AS is_primary_attribution,  
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('&&&') AS __link                                    
FROM (
    

        (
            select
                cast('test.incremental_appsflyer_events_default_in_app_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_unit" as String) as "ad_unit" ,
                    cast("advertising_id" as String) as "advertising_id" ,
                    cast("af_ad" as String) as "af_ad" ,
                    cast("af_ad_id" as String) as "af_ad_id" ,
                    cast("af_ad_type" as String) as "af_ad_type" ,
                    cast("af_adset" as String) as "af_adset" ,
                    cast("af_adset_id" as String) as "af_adset_id" ,
                    cast("af_attribution_lookback" as String) as "af_attribution_lookback" ,
                    cast("af_c_id" as String) as "af_c_id" ,
                    cast("af_channel" as String) as "af_channel" ,
                    cast("af_cost_currency" as String) as "af_cost_currency" ,
                    cast("af_cost_model" as String) as "af_cost_model" ,
                    cast("af_cost_value" as String) as "af_cost_value" ,
                    cast("af_keywords" as String) as "af_keywords" ,
                    cast("af_prt" as String) as "af_prt" ,
                    cast("af_reengagement_window" as String) as "af_reengagement_window" ,
                    cast("af_siteid" as String) as "af_siteid" ,
                    cast("af_sub1" as String) as "af_sub1" ,
                    cast("af_sub2" as String) as "af_sub2" ,
                    cast("af_sub3" as String) as "af_sub3" ,
                    cast("af_sub4" as String) as "af_sub4" ,
                    cast("af_sub5" as String) as "af_sub5" ,
                    cast("af_sub_siteid" as String) as "af_sub_siteid" ,
                    cast("amazon_aid" as String) as "amazon_aid" ,
                    cast("android_id" as String) as "android_id" ,
                    cast("app_id" as String) as "app_id" ,
                    cast("app_name" as String) as "app_name" ,
                    cast("app_type" as String) as "app_type" ,
                    cast("app_version" as String) as "app_version" ,
                    cast("appsflyer_id" as String) as "appsflyer_id" ,
                    cast("att" as String) as "att" ,
                    cast("attributed_touch_time" as String) as "attributed_touch_time" ,
                    cast("attributed_touch_type" as String) as "attributed_touch_type" ,
                    cast("blocked_reason" as String) as "blocked_reason" ,
                    cast("blocked_reason_rule" as String) as "blocked_reason_rule" ,
                    cast("blocked_reason_value" as String) as "blocked_reason_value" ,
                    cast("blocked_sub_reason" as String) as "blocked_sub_reason" ,
                    cast("bundle_id" as String) as "bundle_id" ,
                    cast("campaign" as String) as "campaign" ,
                    cast("campaign_type" as String) as "campaign_type" ,
                    cast("carrier" as String) as "carrier" ,
                    cast("city" as String) as "city" ,
                    cast("contributor1_af_prt" as String) as "contributor1_af_prt" ,
                    cast("contributor1_campaign" as String) as "contributor1_campaign" ,
                    cast("contributor1_match_type" as String) as "contributor1_match_type" ,
                    cast("contributor1_media_source" as String) as "contributor1_media_source" ,
                    cast("contributor1_touch_time" as String) as "contributor1_touch_time" ,
                    cast("contributor1_touch_type" as String) as "contributor1_touch_type" ,
                    cast("contributor2_af_prt" as String) as "contributor2_af_prt" ,
                    cast("contributor2_campaign" as String) as "contributor2_campaign" ,
                    cast("contributor2_match_type" as String) as "contributor2_match_type" ,
                    cast("contributor2_media_source" as String) as "contributor2_media_source" ,
                    cast("contributor2_touch_time" as String) as "contributor2_touch_time" ,
                    cast("contributor2_touch_type" as String) as "contributor2_touch_type" ,
                    cast("contributor3_af_prt" as String) as "contributor3_af_prt" ,
                    cast("contributor3_campaign" as String) as "contributor3_campaign" ,
                    cast("contributor3_match_type" as String) as "contributor3_match_type" ,
                    cast("contributor3_media_source" as String) as "contributor3_media_source" ,
                    cast("contributor3_touch_time" as String) as "contributor3_touch_time" ,
                    cast("contributor3_touch_type" as String) as "contributor3_touch_type" ,
                    cast("conversion_type" as String) as "conversion_type" ,
                    cast("country_code" as String) as "country_code" ,
                    cast("custom_data" as String) as "custom_data" ,
                    cast("customer_user_id" as String) as "customer_user_id" ,
                    cast("deeplink_url" as String) as "deeplink_url" ,
                    cast("device_category" as String) as "device_category" ,
                    cast("device_download_time" as String) as "device_download_time" ,
                    cast("device_model" as String) as "device_model" ,
                    cast("device_type" as String) as "device_type" ,
                    cast("dma" as String) as "dma" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_revenue" as String) as "event_revenue" ,
                    cast("event_revenue_currency" as String) as "event_revenue_currency" ,
                    cast("event_revenue_usd" as String) as "event_revenue_usd" ,
                    cast("event_source" as String) as "event_source" ,
                    cast("event_time" as String) as "event_time" ,
                    cast("event_value" as String) as "event_value" ,
                    cast("gp_broadcast_referrer" as String) as "gp_broadcast_referrer" ,
                    cast("gp_click_time" as String) as "gp_click_time" ,
                    cast("gp_install_begin" as String) as "gp_install_begin" ,
                    cast("gp_referrer" as String) as "gp_referrer" ,
                    cast("http_referrer" as String) as "http_referrer" ,
                    cast("idfa" as String) as "idfa" ,
                    cast("idfv" as String) as "idfv" ,
                    cast("imei" as String) as "imei" ,
                    cast("impressions" as String) as "impressions" ,
                    cast("install_app_store" as String) as "install_app_store" ,
                    cast("install_time" as String) as "install_time" ,
                    cast("ip" as String) as "ip" ,
                    cast("is_lat" as String) as "is_lat" ,
                    cast("is_primary_attribution" as String) as "is_primary_attribution" ,
                    cast("is_receipt_validated" as String) as "is_receipt_validated" ,
                    cast("is_retargeting" as String) as "is_retargeting" ,
                    cast("keyword_id" as String) as "keyword_id" ,
                    cast("keyword_match_type" as String) as "keyword_match_type" ,
                    cast("language" as String) as "language" ,
                    cast("match_type" as String) as "match_type" ,
                    cast("media_source" as String) as "media_source" ,
                    cast("mediation_network" as String) as "mediation_network" ,
                    cast("monetization_network" as String) as "monetization_network" ,
                    cast("network_account_id" as String) as "network_account_id" ,
                    cast("oaid" as String) as "oaid" ,
                    cast("operator" as String) as "operator" ,
                    cast("original_url" as String) as "original_url" ,
                    cast("os_version" as String) as "os_version" ,
                    cast("placement" as String) as "placement" ,
                    cast("platform" as String) as "platform" ,
                    cast("postal_code" as String) as "postal_code" ,
                    cast("region" as String) as "region" ,
                    cast("rejected_reason" as String) as "rejected_reason" ,
                    cast("rejected_reason_value" as String) as "rejected_reason_value" ,
                    cast("retargeting_conversion_type" as String) as "retargeting_conversion_type" ,
                    cast("sdk_version" as String) as "sdk_version" ,
                    cast("segment" as String) as "segment" ,
                    cast("state" as String) as "state" ,
                    cast("store_reinstall" as String) as "store_reinstall" ,
                    cast("user_agent" as String) as "user_agent" ,
                    cast("wifi" as String) as "wifi" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appsflyer_events_default_in_app_events

            
        )

        )



  ...
[0m18:56:40.945399 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.16 seconds
[0m18:56:40.953706 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:40.956987 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:40.958774 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */
EXCHANGE TABLES test.join_appsflyer_events__dbt_backup AND test.join_appsflyer_events 
  
  ...
[0m18:56:40.959818 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.962972 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m18:56:40.964012 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[8] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



  
      ...
[0m18:56:40.967353 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:40.971331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */
drop table if exists test.join_appsflyer_events__dbt_backup 
  ...
[0m18:56:40.975442 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:40.976736 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appsflyer_events (execute): 2024-07-18 18:56:40.856109 => 2024-07-18 18:56:40.976677
[0m18:56:40.977278 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d782470>]}
[0m18:56:40.977666 [info ] [Thread-2 (]: 45 of 95 OK created sql table model test.join_appsflyer_events ................. [[32mOK[0m in 0.16s]
[0m18:56:40.977999 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appsflyer_events
[0m18:56:40.978278 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m18:56:40.978684 [info ] [Thread-2 (]: 46 of 95 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m18:56:40.980001 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m18:56:40.980215 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m18:56:40.980363 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m18:56:40.997259 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m18:56:41.005664 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.009580 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.015854 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.019220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_banners$')        
...
[0m18:56:41.026583 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.029973 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.036218 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.039989 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_campaigns$')        
...
[0m18:56:41.049180 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.056218 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.063404 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.153958 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m18:56:41.160513 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.166828 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m18:56:41.192167 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:41.193765 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m18:56:41.194368 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-07-18 18:56:40.980452 => 2024-07-18 18:56:41.194254
[0m18:56:41.194769 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m18:56:41.201315 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.208678 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.212970 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.219359 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.222478 [debug] [Thread-2 (]: 
    In test.join_mt_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:41.224967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:41.228723 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.230717 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[8]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



    )
        ...
[0m18:56:41.231889 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.27 seconds
[0m18:56:41.233266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

      delete from test.join_appmetrica_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_appmetrica_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:41.277913 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:41.280881 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.286324 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.287117 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:41.289464 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m18:56:41.293899 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.295703 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[8]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



  
      ...
[0m18:56:41.299092 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.301203 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        insert into test.join_appmetrica_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link" from test.join_appmetrica_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:41.311108 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.314541 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:41.318927 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.322213 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_distributed_new_data 
  ...
[0m18:56:41.326073 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.328160 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-07-18 18:56:40.733686 => 2024-07-18 18:56:41.328094
[0m18:56:41.328834 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d66c2b0>]}
[0m18:56:41.329329 [info ] [Thread-1 (]: 43 of 95 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 0.78s]
[0m18:56:41.329746 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m18:56:41.330366 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m18:56:41.331056 [info ] [Thread-1 (]: 47 of 95 START sql table model test.join_sheets_periodstat ..................... [RUN]
[0m18:56:41.331958 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m18:56:41.332316 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m18:56:41.332531 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m18:56:41.341854 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m18:56:41.349411 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:41.350737 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

      delete from test.join_mt_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_mt_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:41.352493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.356959 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.362935 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.365844 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m18:56:41.366702 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-07-18 18:56:41.332651 => 2024-07-18 18:56:41.366469
[0m18:56:41.367425 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m18:56:41.374913 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



    )
        ...
[0m18:56:41.403741 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:41.408592 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.409433 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:41.413319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.415418 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.417351 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        insert into test.join_mt_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_mt_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:41.422407 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.424226 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m18:56:41.424793 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.428176 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:41.429499 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

  
    
    
        
        insert into test.join_sheets_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



  ...
[0m18:56:41.431780 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.434715 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_distributed_new_data 
  ...
[0m18:56:41.438586 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.440593 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-07-18 18:56:41.194958 => 2024-07-18 18:56:41.440533
[0m18:56:41.441179 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.442039 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d87a890>]}
[0m18:56:41.443672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m18:56:41.444608 [info ] [Thread-2 (]: 46 of 95 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.46s]
[0m18:56:41.446483 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m18:56:41.447195 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m18:56:41.447933 [info ] [Thread-2 (]: 48 of 95 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m18:56:41.448752 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m18:56:41.449044 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m18:56:41.449209 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m18:56:41.456133 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.464440 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m18:56:41.465388 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m18:56:41.472086 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.473511 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-07-18 18:56:41.367645 => 2024-07-18 18:56:41.473436
[0m18:56:41.474372 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d66f2e0>]}
[0m18:56:41.475598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.476373 [info ] [Thread-1 (]: 47 of 95 OK created sql table model test.join_sheets_periodstat ................ [[32mOK[0m in 0.14s]
[0m18:56:41.480697 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.481365 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m18:56:41.483420 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m18:56:41.484771 [info ] [Thread-1 (]: 49 of 95 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m18:56:41.485862 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m18:56:41.486321 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m18:56:41.486928 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m18:56:41.500575 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:41.502497 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m18:56:41.505607 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m18:56:41.507561 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-07-18 18:56:41.449304 => 2024-07-18 18:56:41.507449
[0m18:56:41.507969 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m18:56:41.513130 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



    )
        ...
[0m18:56:41.514454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.519851 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.524980 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.528940 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_registry_[^_]+_ad_plans$')        
...
[0m18:56:41.537518 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.542329 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.547480 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.551259 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m18:56:41.553313 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:41.556307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.557052 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.559745 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m18:56:41.562884 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.564636 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m18:56:41.565316 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



  ...
[0m18:56:41.572127 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.573490 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m18:56:41.574047 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-07-18 18:56:41.487186 => 2024-07-18 18:56:41.573952
[0m18:56:41.574345 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m18:56:41.581008 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.581718 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:41.584030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m18:56:41.588817 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.590147 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.594501 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m18:56:41.598188 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.602130 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.603500 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-07-18 18:56:41.508150 => 2024-07-18 18:56:41.603438
[0m18:56:41.604145 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d676f50>]}
[0m18:56:41.604755 [info ] [Thread-2 (]: 48 of 95 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.16s]
[0m18:56:41.605392 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m18:56:41.605956 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m18:56:41.607049 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.607814 [info ] [Thread-2 (]: 50 of 95 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m18:56:41.611143 [debug] [Thread-1 (]: 
    In test.join_vkads_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:41.612137 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m18:56:41.617054 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:41.617501 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m18:56:41.618992 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m18:56:41.625719 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.633649 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[8]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



    )
        ...
[0m18:56:41.634071 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m18:56:41.642920 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.647659 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.654709 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.657773 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m18:56:41.662888 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.664757 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m18:56:41.669988 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:41.673509 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.678440 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.680045 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m18:56:41.680990 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:41.682980 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m18:56:41.684070 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-07-18 18:56:41.619348 => 2024-07-18 18:56:41.683925
[0m18:56:41.684428 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m18:56:41.690108 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[8]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



  
      ...
[0m18:56:41.692603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.699901 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.703744 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.709578 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.712895 [debug] [Thread-2 (]: 
    In test.join_yd_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:41.716090 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:41.718784 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.721082 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



    )
        ...
[0m18:56:41.736239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:41.737832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

      delete from test.join_vkads_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_vkads_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:41.743207 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:41.746773 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.753448 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.755333 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m18:56:41.755883 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



  
      ...
[0m18:56:41.773459 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:41.774635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

      delete from test.join_yd_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_yd_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:41.778275 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:41.780888 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.786635 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.788267 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        insert into test.join_vkads_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link" from test.join_vkads_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:41.796759 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.800759 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:41.804474 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:41.808329 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.809198 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.813268 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_distributed_new_data 
  ...
[0m18:56:41.815140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.817090 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        insert into test.join_yd_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_yd_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:41.820557 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.823133 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-07-18 18:56:41.574465 => 2024-07-18 18:56:41.823053
[0m18:56:41.823955 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d869c00>]}
[0m18:56:41.824478 [info ] [Thread-1 (]: 49 of 95 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.34s]
[0m18:56:41.824965 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m18:56:41.825884 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.826352 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m18:56:41.829928 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:41.830660 [info ] [Thread-1 (]: 51 of 95 START sql incremental model test.join_ym_events ....................... [RUN]
[0m18:56:41.833037 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m18:56:41.833423 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m18:56:41.833629 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m18:56:41.841683 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.851402 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_distributed_new_data 
  ...
[0m18:56:41.851845 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_')        
...
[0m18:56:41.856751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.858699 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-07-18 18:56:41.684630 => 2024-07-18 18:56:41.858635
[0m18:56:41.859258 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d674970>]}
[0m18:56:41.859712 [info ] [Thread-2 (]: 50 of 95 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.25s]
[0m18:56:41.860199 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m18:56:41.860577 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m18:56:41.861766 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.862390 [info ] [Thread-2 (]: 52 of 95 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m18:56:41.866889 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.868133 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m18:56:41.870521 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m18:56:41.871306 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m18:56:41.880260 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.885510 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m18:56:41.888867 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m18:56:41.897017 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.898582 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m18:56:41.899493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.905213 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.911136 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.912913 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m18:56:41.914378 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-07-18 18:56:41.871509 => 2024-07-18 18:56:41.914226
[0m18:56:41.914769 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m18:56:41.919447 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

    )
        ...
[0m18:56:41.920448 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:41.924344 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m18:56:41.925359 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-07-18 18:56:41.833736 => 2024-07-18 18:56:41.925210
[0m18:56:41.925749 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m18:56:41.932654 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.937798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:41.940530 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.941998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.948005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:41.949946 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.952146 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m18:56:41.953395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

  ...
[0m18:56:41.955113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.960530 [debug] [Thread-1 (]: 
    In test.join_ym_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:41.963661 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:41.964486 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.966590 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m18:56:41.967782 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.970333 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



    )
        ...
[0m18:56:41.972582 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:41.977459 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m18:56:41.981897 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:41.983423 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-07-18 18:56:41.914884 => 2024-07-18 18:56:41.983349
[0m18:56:41.984169 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8c76a0>]}
[0m18:56:41.984644 [info ] [Thread-2 (]: 52 of 95 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.12s]
[0m18:56:41.985169 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m18:56:41.985649 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m18:56:41.986676 [info ] [Thread-2 (]: 53 of 95 START sql table model test.combine_periodstat ......................... [RUN]
[0m18:56:41.987595 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m18:56:41.987921 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m18:56:41.988145 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m18:56:41.992818 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m18:56:41.995952 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:42.000255 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.001208 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.008245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.008601 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.010952 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m18:56:42.013210 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



  
      ...
[0m18:56:42.017700 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.019855 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m18:56:42.020516 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-07-18 18:56:41.988267 => 2024-07-18 18:56:42.020410
[0m18:56:42.020837 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m18:56:42.025700 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

    )
        ...
[0m18:56:42.037317 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:42.038619 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

      delete from test.join_ym_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_ym_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:42.042558 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:42.045788 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.052404 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.054516 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m18:56:42.055395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

  
    
    
        
        insert into test.combine_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

  ...
[0m18:56:42.063141 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.064547 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m18:56:42.068926 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:42.072714 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m18:56:42.073619 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:42.078446 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.079149 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.081180 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-07-18 18:56:42.020965 => 2024-07-18 18:56:42.081107
[0m18:56:42.081914 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d875720>]}
[0m18:56:42.082551 [info ] [Thread-2 (]: 53 of 95 OK created sql table model test.combine_periodstat .................... [[32mOK[0m in 0.09s]
[0m18:56:42.082995 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m18:56:42.083746 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m18:56:42.084635 [info ] [Thread-2 (]: 54 of 95 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m18:56:42.086360 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m18:56:42.087024 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m18:56:42.087683 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.087951 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m18:56:42.089699 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        insert into test.join_ym_events select "__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link" from test.join_ym_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:42.093913 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m18:56:42.102667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.108099 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.109025 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.187448 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:42.191294 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:42.191912 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m18:56:42.194857 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_distributed_new_data 
  ...
[0m18:56:42.198220 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m18:56:42.200019 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-07-18 18:56:42.090021 => 2024-07-18 18:56:42.199880
[0m18:56:42.200383 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m18:56:42.204606 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

    )
        ...
[0m18:56:42.205551 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.208336 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-07-18 18:56:41.925981 => 2024-07-18 18:56:42.208264
[0m18:56:42.209396 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d760130>]}
[0m18:56:42.210170 [info ] [Thread-1 (]: 51 of 95 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.38s]
[0m18:56:42.210760 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m18:56:42.211020 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m18:56:42.211290 [info ] [Thread-1 (]: 55 of 95 START sql incremental model test.combine_datestat ..................... [RUN]
[0m18:56:42.212262 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m18:56:42.212948 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m18:56:42.213499 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m18:56:42.217850 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m18:56:42.224635 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:42.227850 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.229543 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.235935 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.236184 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.238199 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m18:56:42.240302 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

  ...
[0m18:56:42.244468 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.249073 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.250596 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.252070 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m18:56:42.254452 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:42.258566 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.259404 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.264987 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m18:56:42.267130 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.272204 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m18:56:42.273068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.275819 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-07-18 18:56:42.200515 => 2024-07-18 18:56:42.275725
[0m18:56:42.276523 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d68b580>]}
[0m18:56:42.276906 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-07-18 18:56:42.213672 => 2024-07-18 18:56:42.276827
[0m18:56:42.277348 [info ] [Thread-2 (]: 54 of 95 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.19s]
[0m18:56:42.277813 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m18:56:42.278463 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m18:56:42.285360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.285926 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m18:56:42.287855 [info ] [Thread-2 (]: 56 of 95 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m18:56:42.289145 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m18:56:42.289547 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m18:56:42.289799 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m18:56:42.297405 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m18:56:42.298295 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.302696 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.304254 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-07-18 18:56:42.290004 => 2024-07-18 18:56:42.304090
[0m18:56:42.304660 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m18:56:42.309637 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_registry_appprofilematching 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m18:56:42.310519 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.314975 [debug] [Thread-1 (]: 
    In test.combine_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:42.318602 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:42.322070 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:42.324819 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

    )
        ...
[0m18:56:42.345734 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:42.349930 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.350858 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:42.355562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.357285 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.359026 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m18:56:42.360082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:42.361834 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m18:56:42.362292 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

  
    
    
        
        insert into test.hash_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_registry_appprofilematching 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m18:56:42.363707 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

  
      ...
[0m18:56:42.380238 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:42.381435 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
EXCHANGE TABLES test.hash_registry_appprofilematching__dbt_backup AND test.hash_registry_appprofilematching 
  
  ...
[0m18:56:42.386989 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.390784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
drop table if exists test.hash_registry_appprofilematching__dbt_backup 
  ...
[0m18:56:42.393997 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:42.395856 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

      delete from test.combine_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:42.396493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.398951 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-07-18 18:56:42.304792 => 2024-07-18 18:56:42.398867
[0m18:56:42.399776 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d832ec0>]}
[0m18:56:42.427500 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:42.430509 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:42.436253 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.437875 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        insert into test.combine_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId" from test.combine_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:42.448886 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:42.451748 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:42.455799 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:42.459262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_distributed_new_data 
  ...
[0m18:56:42.462579 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:42.464537 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-07-18 18:56:42.278844 => 2024-07-18 18:56:42.464416
[0m18:56:42.465165 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d762e90>]}
[0m18:56:43.141716 [info ] [Thread-2 (]: 56 of 95 OK created sql table model test.hash_registry_appprofilematching ...... [[32mOK[0m in 0.11s]
[0m18:56:43.142867 [info ] [Thread-1 (]: 55 of 95 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.25s]
[0m18:56:43.143794 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m18:56:43.150552 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m18:56:43.151235 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m18:56:43.152148 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m18:56:43.153690 [info ] [Thread-2 (]: 57 of 95 START sql table model test.hash_periodstat ............................ [RUN]
[0m18:56:43.154903 [info ] [Thread-1 (]: 58 of 95 START sql incremental model test.combine_events ....................... [RUN]
[0m18:56:43.156228 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m18:56:43.157081 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m18:56:43.157578 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m18:56:43.158432 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m18:56:43.159042 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m18:56:43.159526 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m18:56:43.170495 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m18:56:43.174151 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m18:56:43.176181 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-07-18 18:56:43.159831 => 2024-07-18 18:56:43.176006
[0m18:56:43.176669 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m18:56:43.181201 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m18:56:43.182775 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.187574 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.194482 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.200059 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appsflyer_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.203251 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.206808 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.207928 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.214464 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.216497 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.219182 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m18:56:43.220122 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

  
    
    
        
        insert into test.hash_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m18:56:43.221836 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.228465 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m18:56:43.229296 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-07-18 18:56:43.165384 => 2024-07-18 18:56:43.229202
[0m18:56:43.229588 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m18:56:43.236376 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.240137 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.241443 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m18:56:43.244351 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.248128 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.248957 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.256793 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m18:56:43.258195 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.270035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.273725 [debug] [Thread-1 (]: 
    In test.combine_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:43.275989 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-07-18 18:56:43.176836 => 2024-07-18 18:56:43.275917
[0m18:56:43.278856 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:43.279991 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8beb60>]}
[0m18:56:43.281728 [info ] [Thread-2 (]: 57 of 95 OK created sql table model test.hash_periodstat ....................... [[32mOK[0m in 0.12s]
[0m18:56:43.282824 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m18:56:43.283408 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m18:56:43.284680 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.284114 [info ] [Thread-2 (]: 59 of 95 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m18:56:43.287736 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime(0) as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as adSourceDirty ,
        toString('') as utmSource ,
        toString('') as utmMedium ,
        toString('') as utmCampaign ,
        toString('') as utmTerm ,
        toString('') as utmContent ,
        toString('') as transactionId ,
        toString('') as utmHash ,
        toUInt8(0) as sessions ,
        toUInt8(0) as addToCartSessions ,
        toUInt8(0) as cartViewSessions ,
        toUInt8(0) as checkoutSessions ,
        toUInt8(0) as webSalesSessions ,
        toUInt8(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt8(0) as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8(0) as linkingCardToPhoneNumberSessions ,
        toUInt8(0) as registrationLendingPromotionsSessions ,
        toUInt8(0) as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8(0) as couponActivationSessions ,
        toUInt8(0) as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appsflyer_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

    )
        ...
[0m18:56:43.288518 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m18:56:43.289958 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m18:56:43.290331 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m18:56:43.298445 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m18:56:43.299305 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-07-18 18:56:43.290835 => 2024-07-18 18:56:43.299124
[0m18:56:43.299754 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m18:56:43.304537 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m18:56:43.317171 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:43.321924 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.327288 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.329543 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m18:56:43.330156 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:43.335233 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.336721 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime(0) as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as adSourceDirty ,
        toString('') as utmSource ,
        toString('') as utmMedium ,
        toString('') as utmCampaign ,
        toString('') as utmTerm ,
        toString('') as utmContent ,
        toString('') as transactionId ,
        toString('') as utmHash ,
        toUInt8(0) as sessions ,
        toUInt8(0) as addToCartSessions ,
        toUInt8(0) as cartViewSessions ,
        toUInt8(0) as checkoutSessions ,
        toUInt8(0) as webSalesSessions ,
        toUInt8(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt8(0) as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8(0) as linkingCardToPhoneNumberSessions ,
        toUInt8(0) as registrationLendingPromotionsSessions ,
        toUInt8(0) as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8(0) as couponActivationSessions ,
        toUInt8(0) as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appsflyer_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

  
      ...
[0m18:56:43.342922 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.344959 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m18:56:43.345528 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m18:56:43.366137 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.367547 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m18:56:43.371326 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.376417 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m18:56:43.379983 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.381302 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-07-18 18:56:43.299922 => 2024-07-18 18:56:43.381238
[0m18:56:43.382006 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d9060b0>]}
[0m18:56:43.382678 [info ] [Thread-2 (]: 59 of 95 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.09s]
[0m18:56:43.383161 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m18:56:43.383521 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m18:56:43.384046 [info ] [Thread-2 (]: 60 of 95 START sql table model test.link_registry_appprofilematching ........... [RUN]
[0m18:56:43.385380 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_appprofilematching'
[0m18:56:43.385637 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_appprofilematching)
[0m18:56:43.385886 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m18:56:43.392006 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.397671 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.400140 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m18:56:43.401101 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m18:56:43.402528 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

      delete from test.combine_events where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:43.404036 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (compile): 2024-07-18 18:56:43.386012 => 2024-07-18 18:56:43.403806
[0m18:56:43.404518 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m18:56:43.409998 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

            

    
        create table test.link_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

    )
        ...
[0m18:56:43.427436 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.434095 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.440891 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.442580 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m18:56:43.443677 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

  
    
    
        
        insert into test.link_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

  ...
[0m18:56:43.453552 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:43.456683 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.462090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.463299 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
EXCHANGE TABLES test.link_registry_appprofilematching__dbt_backup AND test.link_registry_appprofilematching 
  
  ...
[0m18:56:43.464053 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.468346 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        insert into test.combine_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews" from test.combine_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:43.469861 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.474737 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
drop table if exists test.link_registry_appprofilematching__dbt_backup 
  ...
[0m18:56:43.478249 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.479623 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (execute): 2024-07-18 18:56:43.404664 => 2024-07-18 18:56:43.479556
[0m18:56:43.480400 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d831f90>]}
[0m18:56:43.480915 [info ] [Thread-2 (]: 60 of 95 OK created sql table model test.link_registry_appprofilematching ...... [[32mOK[0m in 0.10s]
[0m18:56:43.481321 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m18:56:43.481657 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m18:56:43.482393 [info ] [Thread-2 (]: 61 of 95 START sql incremental model test.hash_datestat ........................ [RUN]
[0m18:56:43.483162 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m18:56:43.483414 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m18:56:43.483589 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m18:56:43.490146 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m18:56:43.491030 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.491733 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-07-18 18:56:43.483691 => 2024-07-18 18:56:43.491617
[0m18:56:43.495991 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:43.496551 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m18:56:43.504806 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.505947 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.510535 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_distributed_new_data 
  ...
[0m18:56:43.512330 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.516292 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.517377 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.520898 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-07-18 18:56:43.229723 => 2024-07-18 18:56:43.520772
[0m18:56:43.521566 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d763ca0>]}
[0m18:56:43.521917 [info ] [Thread-1 (]: 58 of 95 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.36s]
[0m18:56:43.522319 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m18:56:43.522627 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m18:56:43.524473 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.523650 [info ] [Thread-1 (]: 62 of 95 START sql table model test.link_periodstat ............................ [RUN]
[0m18:56:43.529014 [debug] [Thread-2 (]: 
    In test.hash_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:43.530064 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m18:56:43.534704 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:43.535402 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m18:56:43.537065 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m18:56:43.543634 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.546121 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.549301 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m18:56:43.554643 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.556764 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m18:56:43.557236 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-07-18 18:56:43.537344 => 2024-07-18 18:56:43.557166
[0m18:56:43.557432 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m18:56:43.562008 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

    )
        ...
[0m18:56:43.581594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.584634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.591338 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.592946 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m18:56:43.593561 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

  ...
[0m18:56:43.600107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:43.603105 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.609081 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.611267 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m18:56:43.611944 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.613843 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m18:56:43.615211 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m18:56:43.618915 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.625263 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m18:56:43.629832 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.631200 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-07-18 18:56:43.557550 => 2024-07-18 18:56:43.631130
[0m18:56:43.631972 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d761150>]}
[0m18:56:43.632607 [info ] [Thread-1 (]: 62 of 95 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.10s]
[0m18:56:43.633106 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m18:56:43.633452 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m18:56:43.634395 [info ] [Thread-1 (]: 63 of 95 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m18:56:43.635200 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m18:56:43.635487 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m18:56:43.635728 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m18:56:43.640897 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.646577 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.648689 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m18:56:43.649321 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-07-18 18:56:43.635837 => 2024-07-18 18:56:43.649231
[0m18:56:43.649724 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m18:56:43.654608 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

    )
        ...
[0m18:56:43.674282 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:43.677316 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.683440 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.685714 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m18:56:43.686255 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

  ...
[0m18:56:43.698591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.700220 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m18:56:43.705195 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.709734 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m18:56:43.713907 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.715601 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-07-18 18:56:43.649934 => 2024-07-18 18:56:43.715500
[0m18:56:43.716296 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d763dc0>]}
[0m18:56:43.717253 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m18:56:43.716766 [info ] [Thread-1 (]: 63 of 95 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.08s]
[0m18:56:43.718896 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

      delete from test.hash_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:43.719325 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m18:56:43.720212 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m18:56:43.720889 [info ] [Thread-1 (]: 64 of 95 START sql incremental model test.hash_events .......................... [RUN]
[0m18:56:43.721820 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m18:56:43.722598 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m18:56:43.723453 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m18:56:43.814788 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m18:56:43.821004 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m18:56:43.823540 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.825458 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-07-18 18:56:43.723906 => 2024-07-18 18:56:43.825277
[0m18:56:43.825902 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m18:56:43.832143 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.832966 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.836263 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        insert into test.hash_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime" from test.hash_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:43.840367 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.844419 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.850492 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.854008 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:43.854833 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.865860 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.874393 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_distributed_new_data 
  ...
[0m18:56:43.879154 [debug] [Thread-1 (]: 
    In test.hash_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:43.881911 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:43.885211 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.887307 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-07-18 18:56:43.497642 => 2024-07-18 18:56:43.887244
[0m18:56:43.888030 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fab4400>]}
[0m18:56:43.888614 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.889342 [info ] [Thread-2 (]: 61 of 95 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.41s]
[0m18:56:43.892176 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 
  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(__date) 
    
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as VisitStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_events 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m18:56:43.893068 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m18:56:43.895587 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m18:56:43.896955 [info ] [Thread-2 (]: 65 of 95 START sql table model test.full_periodstat ............................ [RUN]
[0m18:56:43.898143 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_periodstat'
[0m18:56:43.898513 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_periodstat)
[0m18:56:43.898772 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_periodstat
[0m18:56:43.905262 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m18:56:43.910724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.912159 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m18:56:43.917128 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.918959 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m18:56:43.925201 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.927181 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m18:56:43.932368 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.933754 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m18:56:43.940591 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.942069 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m18:56:43.947375 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.948956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m18:56:43.954140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.957700 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m18:56:43.962879 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:43.964284 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m18:56:43.971818 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.973154 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m18:56:43.979266 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.983738 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:43.989563 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:43.991467 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_periodstat"
[0m18:56:43.992716 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (compile): 2024-07-18 18:56:43.898889 => 2024-07-18 18:56:43.992488
[0m18:56:43.993200 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_periodstat
[0m18:56:43.997356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

            

    
        create table test.full_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m18:56:43.998231 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m18:56:44.002508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.007375 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.009740 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m18:56:44.010306 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 
  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(__date) 
    
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as VisitStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_events 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m18:56:44.025095 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:44.027975 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'full_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.033856 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.035451 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_periodstat"
[0m18:56:44.036711 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

  
    
    
        
        insert into test.full_periodstat__dbt_backup ("period_date", "campaign", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime", "cost_per_day")
  -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  ...
[0m18:56:44.053456 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.054712 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
EXCHANGE TABLES test.full_periodstat__dbt_backup AND test.full_periodstat 
  
  ...
[0m18:56:44.059153 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.063444 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
drop table if exists test.full_periodstat__dbt_backup 
  ...
[0m18:56:44.067444 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.068834 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (execute): 2024-07-18 18:56:43.993303 => 2024-07-18 18:56:44.068771
[0m18:56:44.069468 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d85c0a0>]}
[0m18:56:44.069872 [info ] [Thread-2 (]: 65 of 95 OK created sql table model test.full_periodstat ....................... [[32mOK[0m in 0.17s]
[0m18:56:44.070252 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m18:56:44.070633 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m18:56:44.071143 [info ] [Thread-2 (]: 66 of 95 START sql table model test.link_datestat .............................. [RUN]
[0m18:56:44.071956 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m18:56:44.072482 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m18:56:44.072773 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m18:56:44.079280 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.085589 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.088586 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m18:56:44.089087 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-07-18 18:56:44.072873 => 2024-07-18 18:56:44.088998
[0m18:56:44.089327 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m18:56:44.093504 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

    )
        ...
[0m18:56:44.105587 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m18:56:44.106784 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

      delete from test.hash_events where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:44.117210 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.121014 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.127350 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.129539 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m18:56:44.130272 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

  ...
[0m18:56:44.152116 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.153418 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m18:56:44.157956 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.162352 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m18:56:44.163993 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m18:56:44.167203 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.168003 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.170291 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-07-18 18:56:44.089420 => 2024-07-18 18:56:44.170227
[0m18:56:44.171020 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d61d570>]}
[0m18:56:44.171549 [info ] [Thread-2 (]: 66 of 95 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.10s]
[0m18:56:44.172492 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m18:56:44.173704 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m18:56:44.174315 [info ] [Thread-2 (]: 67 of 95 START sql incremental model test.full_datestat ........................ [RUN]
[0m18:56:44.175431 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m18:56:44.176115 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.176371 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m18:56:44.179228 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        insert into test.hash_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime" from test.hash_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:44.179797 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m18:56:44.188650 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m18:56:44.195755 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.197964 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m18:56:44.204487 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.206252 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m18:56:44.211350 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.212806 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m18:56:44.214862 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:44.219367 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:44.221183 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.223367 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m18:56:44.224802 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.228339 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_distributed_new_data 
  ...
[0m18:56:44.229789 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.231251 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m18:56:44.232717 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.235177 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-07-18 18:56:43.826052 => 2024-07-18 18:56:44.235105
[0m18:56:44.236338 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d511ae0>]}
[0m18:56:44.237798 [info ] [Thread-1 (]: 64 of 95 OK created sql incremental model test.hash_events ..................... [[32mOK[0m in 0.51s]
[0m18:56:44.238391 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m18:56:44.239662 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.240093 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_events
[0m18:56:44.241381 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m18:56:44.241827 [info ] [Thread-1 (]: 68 of 95 START sql table model test.link_events ................................ [RUN]
[0m18:56:44.244056 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m18:56:44.244402 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m18:56:44.244668 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m18:56:44.251317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.255176 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.256634 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m18:56:44.257958 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.261055 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m18:56:44.261585 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-07-18 18:56:44.244810 => 2024-07-18 18:56:44.261475
[0m18:56:44.262076 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m18:56:44.262628 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.269043 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,touch_type,touch_time,install_time,event_time,event_name,event_source,partner,media_source,campaign,site_id,ad,country_code,city,appsflyer_id,custom_uid,platform,is_retargeting,is_primary_attribution,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,VisitStatHash,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,YmClientHash,UtmHashHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, touch_type, touch_time, install_time, event_time, event_name, event_source, partner, media_source, campaign, site_id, ad, country_code, city, appsflyer_id, custom_uid, platform, is_retargeting, is_primary_attribution, visitId, clientId, cityCode, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

    )
        ...
[0m18:56:44.271242 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m18:56:44.277989 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.280103 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m18:56:44.286340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.288286 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m18:56:44.288877 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-07-18 18:56:44.180875 => 2024-07-18 18:56:44.288762
[0m18:56:44.289218 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m18:56:44.296085 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.298209 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:44.301954 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.302639 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.308686 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.310273 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.312995 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m18:56:44.313859 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.320643 [debug] [Thread-2 (]: 
    In test.full_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m18:56:44.324423 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:44.324827 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,touch_type,touch_time,install_time,event_time,event_name,event_source,partner,media_source,campaign,site_id,ad,country_code,city,appsflyer_id,custom_uid,platform,is_retargeting,is_primary_attribution,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,VisitStatHash,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,YmClientHash,UtmHashHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, touch_type, touch_time, install_time, event_time, event_name, event_source, partner, media_source, campaign, site_id, ad, country_code, city, appsflyer_id, custom_uid, platform, is_retargeting, is_primary_attribution, visitId, clientId, cityCode, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

  ...
[0m18:56:44.328863 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.331095 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m18:56:44.356573 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:44.359647 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.367656 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.369556 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m18:56:44.370199 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:44.371661 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m18:56:44.373028 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        
  
    
    
        
        insert into test.full_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash")
  -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  
      ...
[0m18:56:44.375650 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.379822 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m18:56:44.383942 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.385604 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-07-18 18:56:44.262900 => 2024-07-18 18:56:44.385547
[0m18:56:44.386257 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fa8a7d0>]}
[0m18:56:44.386592 [info ] [Thread-1 (]: 68 of 95 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.14s]
[0m18:56:44.386907 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m18:56:44.387796 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m18:56:44.388210 [info ] [Thread-1 (]: 69 of 95 START sql table model test.graph_tuples ............................... [RUN]
[0m18:56:44.389014 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m18:56:44.389320 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m18:56:44.389503 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m18:56:44.396523 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m18:56:44.398439 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-07-18 18:56:44.389603 => 2024-07-18 18:56:44.398255
[0m18:56:44.398963 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m18:56:44.406042 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppEventStatHash'), toDateTime(0),  AppEventStatHash) as node_left
            from test.hash_events
            where nullIf(AppEventStatHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
            
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null
            



    )
        ...
[0m18:56:44.406864 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:44.409603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

      delete from test.full_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.full_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d);
    ...
[0m18:56:44.428540 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.432262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.438344 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.440201 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m18:56:44.442304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppEventStatHash'), toDateTime(0),  AppEventStatHash) as node_left
            from test.hash_events
            where nullIf(AppEventStatHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
            
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null
            



  ...
[0m18:56:44.453789 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:44.457911 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.465349 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.466082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.468116 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        insert into test.full_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash" from test.full_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d
    ...
[0m18:56:44.470251 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m18:56:44.477458 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.481945 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m18:56:44.483606 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.486926 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_new_data_26d0c049_9041_4404_b230_28a0ed9b021d 
  ...
[0m18:56:44.488467 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.490111 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-07-18 18:56:44.399189 => 2024-07-18 18:56:44.490045
[0m18:56:44.491129 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fa893c0>]}
[0m18:56:44.491782 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.492435 [info ] [Thread-1 (]: 69 of 95 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 0.10s]
[0m18:56:44.496885 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_distributed_new_data 
  ...
[0m18:56:44.497529 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m18:56:44.500082 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m18:56:44.501191 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.500597 [info ] [Thread-1 (]: 70 of 95 START sql table model test.graph_lookup ............................... [RUN]
[0m18:56:44.503837 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-07-18 18:56:44.289329 => 2024-07-18 18:56:44.503758
[0m18:56:44.504698 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m18:56:44.505678 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d6b2590>]}
[0m18:56:44.506093 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m18:56:44.506783 [info ] [Thread-2 (]: 67 of 95 OK created sql incremental model test.full_datestat ................... [[32mOK[0m in 0.33s]
[0m18:56:44.507268 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m18:56:44.507602 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m18:56:44.512729 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m18:56:44.514971 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-07-18 18:56:44.507978 => 2024-07-18 18:56:44.514814
[0m18:56:44.515468 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m18:56:44.520587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys

LIMIT 0



    )
        ...
[0m18:56:44.538294 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.541095 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.548043 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.549938 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m18:56:44.551775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys

LIMIT 0



  ...
[0m18:56:44.559418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.560562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m18:56:44.566613 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.571326 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m18:56:44.574544 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.575933 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-07-18 18:56:44.515717 => 2024-07-18 18:56:44.575874
[0m18:56:44.576541 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d5119c0>]}
[0m18:56:44.576892 [info ] [Thread-1 (]: 70 of 95 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.07s]
[0m18:56:44.577218 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m18:56:44.578543 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m18:56:44.579287 [info ] [Thread-2 (]: 71 of 95 START sql table model test.graph_unique ............................... [RUN]
[0m18:56:44.579962 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m18:56:44.580255 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m18:56:44.580436 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m18:56:44.584066 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m18:56:44.585231 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-07-18 18:56:44.580529 => 2024-07-18 18:56:44.585103
[0m18:56:44.585566 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m18:56:44.589679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup

LIMIT 0



    )
        ...
[0m18:56:44.606397 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.610164 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.618401 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.619878 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m18:56:44.621254 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup

LIMIT 0



  ...
[0m18:56:44.625576 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.626718 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m18:56:44.630625 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.636093 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m18:56:44.640044 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.641379 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-07-18 18:56:44.585717 => 2024-07-18 18:56:44.641321
[0m18:56:44.641959 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fa8a140>]}
[0m18:56:44.642309 [info ] [Thread-2 (]: 71 of 95 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.06s]
[0m18:56:44.642629 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m18:56:44.643634 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m18:56:44.644702 [info ] [Thread-1 (]: 72 of 95 START sql table model test.graph_edge ................................. [RUN]
[0m18:56:44.645604 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m18:56:44.645872 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m18:56:44.646088 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m18:56:44.649480 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m18:56:44.650724 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-07-18 18:56:44.646249 => 2024-07-18 18:56:44.650574
[0m18:56:44.651156 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m18:56:44.655471 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash

LIMIT 0



    )
        ...
[0m18:56:44.672414 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.675254 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.680819 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.682216 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m18:56:44.683356 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash

LIMIT 0



  ...
[0m18:56:44.692529 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.693705 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m18:56:44.702435 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.705457 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m18:56:44.710433 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.714275 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m18:56:44.718285 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.719647 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-07-18 18:56:44.651357 => 2024-07-18 18:56:44.719588
[0m18:56:44.720282 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fa8a4d0>]}
[0m18:56:44.720636 [info ] [Thread-1 (]: 72 of 95 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.07s]
[0m18:56:44.720954 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m18:56:44.722962 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m18:56:44.723435 [info ] [Thread-2 (]: 73 of 95 START sql table model test.graph_glue ................................. [RUN]
[0m18:56:44.724115 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m18:56:44.724326 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m18:56:44.724505 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m18:56:44.727517 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m18:56:44.728950 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-07-18 18:56:44.724616 => 2024-07-18 18:56:44.728696
[0m18:56:44.729537 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m18:56:44.733822 [debug] [Thread-2 (]: Running iteration 0
[0m18:56:44.734276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m18:56:44.760730 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:44.761779 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m18:56:44.786622 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.787843 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m18:56:44.794649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.795859 [debug] [Thread-2 (]: VALUE: 0
[0m18:56:44.796084 [debug] [Thread-2 (]: Running iteration 1
[0m18:56:44.796199 [debug] [Thread-2 (]: Running iteration 2
[0m18:56:44.796300 [debug] [Thread-2 (]: Running iteration 3
[0m18:56:44.796398 [debug] [Thread-2 (]: Running iteration 4
[0m18:56:44.796495 [debug] [Thread-2 (]: Running iteration 5
[0m18:56:44.796591 [debug] [Thread-2 (]: Running iteration 6
[0m18:56:44.796687 [debug] [Thread-2 (]: Running iteration 7
[0m18:56:44.796814 [debug] [Thread-2 (]: Running iteration 8
[0m18:56:44.796935 [debug] [Thread-2 (]: Running iteration 9
[0m18:56:44.797036 [debug] [Thread-2 (]: Running iteration 10
[0m18:56:44.797134 [debug] [Thread-2 (]: Running iteration 11
[0m18:56:44.797229 [debug] [Thread-2 (]: Running iteration 12
[0m18:56:44.797324 [debug] [Thread-2 (]: Running iteration 13
[0m18:56:44.798722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left

LIMIT 0



    )
        ...
[0m18:56:44.814177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.817315 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.822110 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.823737 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m18:56:44.825535 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left

LIMIT 0



  ...
[0m18:56:44.832022 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.833155 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m18:56:44.838499 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.842428 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m18:56:44.846759 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.848042 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-07-18 18:56:44.729820 => 2024-07-18 18:56:44.847984
[0m18:56:44.848635 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d963790>]}
[0m18:56:44.849032 [info ] [Thread-2 (]: 73 of 95 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.12s]
[0m18:56:44.849375 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m18:56:44.850918 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m18:56:44.851382 [info ] [Thread-1 (]: 74 of 95 START sql table model test.graph_qid .................................. [RUN]
[0m18:56:44.851922 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m18:56:44.852048 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m18:56:44.852181 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m18:56:44.855144 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m18:56:44.856619 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-07-18 18:56:44.852270 => 2024-07-18 18:56:44.856447
[0m18:56:44.857037 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m18:56:44.862280 [debug] [Thread-1 (]: Running iteration 0
[0m18:56:44.862934 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m18:56:44.888929 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:44.889956 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m18:56:44.913019 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.914040 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m18:56:44.922432 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.923571 [debug] [Thread-1 (]: VALUE: 0
[0m18:56:44.923784 [debug] [Thread-1 (]: Running iteration 1
[0m18:56:44.923896 [debug] [Thread-1 (]: Running iteration 2
[0m18:56:44.924002 [debug] [Thread-1 (]: Running iteration 3
[0m18:56:44.924099 [debug] [Thread-1 (]: Running iteration 4
[0m18:56:44.924194 [debug] [Thread-1 (]: Running iteration 5
[0m18:56:44.924290 [debug] [Thread-1 (]: Running iteration 6
[0m18:56:44.924385 [debug] [Thread-1 (]: Running iteration 7
[0m18:56:44.924481 [debug] [Thread-1 (]: Running iteration 8
[0m18:56:44.924576 [debug] [Thread-1 (]: Running iteration 9
[0m18:56:44.924671 [debug] [Thread-1 (]: Running iteration 10
[0m18:56:44.924767 [debug] [Thread-1 (]: Running iteration 11
[0m18:56:44.924875 [debug] [Thread-1 (]: Running iteration 12
[0m18:56:44.924970 [debug] [Thread-1 (]: Running iteration 13
[0m18:56:44.926695 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup

LIMIT 0



    )
        ...
[0m18:56:44.943641 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:44.946511 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:44.952376 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.953828 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m18:56:44.954972 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup

LIMIT 0



  ...
[0m18:56:44.960401 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.961544 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m18:56:44.965588 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.969442 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m18:56:44.973727 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:44.975730 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-07-18 18:56:44.857141 => 2024-07-18 18:56:44.975668
[0m18:56:44.976329 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d75a950>]}
[0m18:56:44.976709 [info ] [Thread-1 (]: 74 of 95 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.12s]
[0m18:56:44.977059 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m18:56:44.978304 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m18:56:44.979144 [info ] [Thread-2 (]: 75 of 95 START sql table model test.full_events ................................ [RUN]
[0m18:56:44.979817 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m18:56:44.980040 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m18:56:44.980228 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m18:56:44.986195 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m18:56:44.992300 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:44.993743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m18:56:44.999637 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.001391 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m18:56:45.006939 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.008267 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m18:56:45.013104 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.014395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m18:56:45.019525 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.021236 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m18:56:45.026261 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.027532 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m18:56:45.032599 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.036330 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m18:56:45.040562 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.041871 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m18:56:45.046874 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.048725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m18:56:45.053262 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.054937 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m18:56:45.055499 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-07-18 18:56:44.980341 => 2024-07-18 18:56:45.055410
[0m18:56:45.055758 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m18:56:45.059964 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_events
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m18:56:45.113422 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:45.116763 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.121796 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.124145 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m18:56:45.124639 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "qid", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.graph_qid
-- depends_on: test.link_events
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  ...
[0m18:56:45.195137 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m18:56:45.196266 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m18:56:45.200400 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.204071 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m18:56:45.208254 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.209548 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-07-18 18:56:45.055871 => 2024-07-18 18:56:45.209479
[0m18:56:45.210215 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d759090>]}
[0m18:56:45.210590 [info ] [Thread-2 (]: 75 of 95 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.23s]
[0m18:56:45.210927 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m18:56:45.212131 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m18:56:45.212435 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m18:56:45.212879 [info ] [Thread-1 (]: 76 of 95 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m18:56:45.213642 [info ] [Thread-2 (]: 77 of 95 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m18:56:45.214631 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m18:56:45.215490 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m18:56:45.215964 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m18:56:45.216363 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m18:56:45.216722 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m18:56:45.216995 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m18:56:45.220604 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m18:56:45.225852 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m18:56:45.227838 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-07-18 18:56:45.217279 => 2024-07-18 18:56:45.227675
[0m18:56:45.228268 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m18:56:45.234223 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m18:56:45.235836 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-07-18 18:56:45.221141 => 2024-07-18 18:56:45.235648
[0m18:56:45.236664 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m18:56:45.241473 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m18:56:45.258700 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.262084 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.266949 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:45.270535 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.272499 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.275448 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m18:56:45.276796 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.279680 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m18:56:45.280333 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m18:56:45.282569 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m18:56:45.303805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.305273 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m18:56:45.310800 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:45.312007 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m18:56:45.313360 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.318215 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m18:56:45.319072 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.324548 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m18:56:45.325454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.328062 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-07-18 18:56:45.228551 => 2024-07-18 18:56:45.327956
[0m18:56:45.329140 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d6888b0>]}
[0m18:56:45.329590 [info ] [Thread-1 (]: 76 of 95 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.11s]
[0m18:56:45.329969 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m18:56:45.331600 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m18:56:45.332215 [info ] [Thread-1 (]: 78 of 95 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m18:56:45.333177 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m18:56:45.333909 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.334168 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m18:56:45.335596 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-07-18 18:56:45.237216 => 2024-07-18 18:56:45.335534
[0m18:56:45.336115 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m18:56:45.336887 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d5e4520>]}
[0m18:56:45.343747 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m18:56:45.344663 [info ] [Thread-2 (]: 77 of 95 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.12s]
[0m18:56:45.345546 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m18:56:45.346783 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m18:56:45.347574 [info ] [Thread-2 (]: 79 of 95 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m18:56:45.348548 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m18:56:45.349250 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-07-18 18:56:45.337160 => 2024-07-18 18:56:45.349092
[0m18:56:45.349771 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m18:56:45.350366 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m18:56:45.350929 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m18:56:45.356346 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




    )
        ...
[0m18:56:45.363659 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m18:56:45.365627 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-07-18 18:56:45.356814 => 2024-07-18 18:56:45.365437
[0m18:56:45.366157 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m18:56:45.371513 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




    )
        ...
[0m18:56:45.387626 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.390508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.391142 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.395507 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.401621 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.402500 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.404042 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m18:56:45.406220 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m18:56:45.408017 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




  ...
[0m18:56:45.408728 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




  ...
[0m18:56:45.418986 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.420908 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m18:56:45.421590 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.423815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m18:56:45.427326 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.431285 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m18:56:45.432714 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.436970 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m18:56:45.438223 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.439967 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-07-18 18:56:45.366370 => 2024-07-18 18:56:45.439871
[0m18:56:45.440817 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d977a90>]}
[0m18:56:45.441682 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.442243 [info ] [Thread-2 (]: 79 of 95 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.09s]
[0m18:56:45.443991 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-07-18 18:56:45.351428 => 2024-07-18 18:56:45.443930
[0m18:56:45.444428 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m18:56:45.445148 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d6c3d60>]}
[0m18:56:45.446929 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m18:56:45.446544 [info ] [Thread-1 (]: 78 of 95 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.11s]
[0m18:56:45.447548 [info ] [Thread-2 (]: 80 of 95 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m18:56:45.448113 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m18:56:45.449613 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m18:56:45.450878 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m18:56:45.451213 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m18:56:45.451544 [info ] [Thread-1 (]: 81 of 95 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m18:56:45.452060 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m18:56:45.453118 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m18:56:45.459135 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m18:56:45.458655 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m18:56:45.459494 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m18:56:45.463186 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m18:56:45.463883 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-07-18 18:56:45.460132 => 2024-07-18 18:56:45.463790
[0m18:56:45.464257 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-07-18 18:56:45.453670 => 2024-07-18 18:56:45.464128
[0m18:56:45.464667 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m18:56:45.464983 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m18:56:45.471039 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




    )
        ...
[0m18:56:45.476353 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




    )
        ...
[0m18:56:45.492637 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.495513 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.496403 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.502851 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.508116 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.509659 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m18:56:45.510294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.512581 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m18:56:45.514284 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




  ...
[0m18:56:45.514775 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




  ...
[0m18:56:45.522812 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.524203 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m18:56:45.526849 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.528270 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m18:56:45.529529 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.606477 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m18:56:45.609039 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m18:56:45.613650 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m18:56:45.618512 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.619822 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-07-18 18:56:45.465333 => 2024-07-18 18:56:45.619765
[0m18:56:45.620603 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d73ddb0>]}
[0m18:56:45.621411 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.622207 [info ] [Thread-1 (]: 81 of 95 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.17s]
[0m18:56:45.624147 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-07-18 18:56:45.471427 => 2024-07-18 18:56:45.624087
[0m18:56:45.624603 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m18:56:45.625667 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d62f790>]}
[0m18:56:45.627068 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m18:56:45.626716 [info ] [Thread-2 (]: 80 of 95 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.18s]
[0m18:56:45.627769 [info ] [Thread-1 (]: 82 of 95 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m18:56:45.628284 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m18:56:45.628944 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m18:56:45.630089 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m18:56:45.630473 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m18:56:45.630900 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m18:56:45.638142 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m18:56:45.638766 [info ] [Thread-2 (]: 83 of 95 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m18:56:45.639917 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m18:56:45.640420 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m18:56:45.640734 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m18:56:45.648296 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m18:56:45.648812 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-07-18 18:56:45.631220 => 2024-07-18 18:56:45.648680
[0m18:56:45.649575 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m18:56:45.654141 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m18:56:45.654587 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-07-18 18:56:45.640867 => 2024-07-18 18:56:45.654455
[0m18:56:45.656313 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m18:56:45.661689 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m18:56:45.679367 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.682473 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.684085 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.688181 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.689995 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.691450 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m18:56:45.692720 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m18:56:45.694134 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.696036 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m18:56:45.696830 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m18:56:45.708705 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.710060 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m18:56:45.711309 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.712815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m18:56:45.715566 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.720707 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m18:56:45.722197 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.726282 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m18:56:45.730212 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.731564 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-07-18 18:56:45.656640 => 2024-07-18 18:56:45.731493
[0m18:56:45.732358 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8c02e0>]}
[0m18:56:45.733222 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.734022 [info ] [Thread-2 (]: 83 of 95 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.09s]
[0m18:56:45.735781 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-07-18 18:56:45.649979 => 2024-07-18 18:56:45.735719
[0m18:56:45.736607 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m18:56:45.737609 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8c69b0>]}
[0m18:56:45.738496 [info ] [Thread-1 (]: 82 of 95 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.11s]
[0m18:56:45.739652 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m18:56:45.740348 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m18:56:45.740924 [info ] [Thread-2 (]: 84 of 95 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m18:56:45.742683 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m18:56:45.743380 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m18:56:45.743783 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m18:56:45.744259 [info ] [Thread-1 (]: 85 of 95 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m18:56:45.744777 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m18:56:45.745649 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m18:56:45.749488 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m18:56:45.750037 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m18:56:45.750930 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m18:56:45.755383 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m18:56:45.756022 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-07-18 18:56:45.746030 => 2024-07-18 18:56:45.755907
[0m18:56:45.756370 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m18:56:45.760716 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




    )
        ...
[0m18:56:45.762129 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-07-18 18:56:45.751207 => 2024-07-18 18:56:45.761881
[0m18:56:45.762683 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m18:56:45.771560 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




    )
        ...
[0m18:56:45.781797 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.786253 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.789349 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.792785 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.795151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.796753 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m18:56:45.798494 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.801617 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m18:56:45.802083 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




  ...
[0m18:56:45.803385 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




  ...
[0m18:56:45.814157 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.815592 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m18:56:45.817192 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.818425 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m18:56:45.820531 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.824706 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m18:56:45.825410 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.830589 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m18:56:45.832027 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.834510 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-07-18 18:56:45.762926 => 2024-07-18 18:56:45.834448
[0m18:56:45.835392 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.836297 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d885f90>]}
[0m18:56:45.837808 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-07-18 18:56:45.756517 => 2024-07-18 18:56:45.837754
[0m18:56:45.838660 [info ] [Thread-1 (]: 85 of 95 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m18:56:45.839886 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8c02b0>]}
[0m18:56:45.840357 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m18:56:45.842465 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m18:56:45.842900 [info ] [Thread-1 (]: 86 of 95 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m18:56:45.843580 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m18:56:45.843809 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m18:56:45.844045 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m18:56:45.848228 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m18:56:45.849473 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-07-18 18:56:45.844173 => 2024-07-18 18:56:45.849286
[0m18:56:45.849995 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m18:56:45.855915 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m18:56:45.896533 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:45.899251 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:45.904695 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:45.906176 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m18:56:45.907622 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m18:56:45.928862 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:45.930122 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m18:56:45.934394 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.938327 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m18:56:45.942969 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:45.944434 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-07-18 18:56:45.850209 => 2024-07-18 18:56:45.944376
[0m18:56:45.945154 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d97dde0>]}
[0m18:56:46.606018 [info ] [Thread-2 (]: 84 of 95 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.10s]
[0m18:56:46.607270 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m18:56:46.608019 [info ] [Thread-1 (]: 86 of 95 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.10s]
[0m18:56:46.609540 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m18:56:46.609973 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m18:56:46.610918 [info ] [Thread-2 (]: 87 of 95 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m18:56:46.612844 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m18:56:46.613625 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m18:56:46.614116 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m18:56:46.614791 [info ] [Thread-1 (]: 88 of 95 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m18:56:46.615784 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m18:56:46.617463 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m18:56:46.622669 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m18:56:46.623066 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m18:56:46.624298 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m18:56:46.633620 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m18:56:46.634533 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-07-18 18:56:46.618075 => 2024-07-18 18:56:46.634375
[0m18:56:46.635300 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m18:56:46.641415 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m18:56:46.641940 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-18 18:56:46.625021 => 2024-07-18 18:56:46.641809
[0m18:56:46.643510 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m18:56:46.650082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m18:56:46.667823 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:46.672812 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:46.677540 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:46.680756 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:46.681629 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.685862 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m18:56:46.687080 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m18:56:46.690957 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.693859 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m18:56:46.695583 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m18:56:46.704663 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:46.706387 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m18:56:46.710733 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:46.715120 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m18:56:46.718837 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:46.720592 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-07-18 18:56:46.636019 => 2024-07-18 18:56:46.720516
[0m18:56:46.721349 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d885cc0>]}
[0m18:56:46.721880 [info ] [Thread-2 (]: 87 of 95 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.11s]
[0m18:56:46.722237 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m18:56:46.723207 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:46.725340 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m18:56:46.726581 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m18:56:46.727444 [info ] [Thread-2 (]: 89 of 95 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m18:56:46.728296 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m18:56:46.728648 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m18:56:46.728843 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m18:56:46.735868 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.739423 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m18:56:46.744304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m18:56:46.746460 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-18 18:56:46.728944 => 2024-07-18 18:56:46.746160
[0m18:56:46.746957 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m18:56:46.752734 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m18:56:46.753587 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.757505 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-18 18:56:46.644269 => 2024-07-18 18:56:46.757435
[0m18:56:46.758196 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4fd77d00>]}
[0m18:56:46.758781 [info ] [Thread-1 (]: 88 of 95 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.14s]
[0m18:56:46.759219 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m18:56:46.760631 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m18:56:46.761166 [info ] [Thread-1 (]: 90 of 95 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m18:56:46.761947 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m18:56:46.762319 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m18:56:46.762566 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m18:56:46.773018 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m18:56:46.775291 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-07-18 18:56:46.762699 => 2024-07-18 18:56:46.775050
[0m18:56:46.775947 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m18:56:46.781031 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m18:56:46.782113 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:46.788068 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:46.794246 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.797360 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m18:56:46.798222 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m18:56:46.813895 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m18:56:46.817943 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:46.821959 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m18:56:46.823504 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m18:56:46.825378 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.827310 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m18:56:46.828681 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:46.834975 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m18:56:46.835766 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




  ...
[0m18:56:46.840877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:46.842433 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-18 18:56:46.747053 => 2024-07-18 18:56:46.842367
[0m18:56:46.843273 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8bf880>]}
[0m18:56:46.843891 [info ] [Thread-2 (]: 89 of 95 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.12s]
[0m18:56:46.844373 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m18:56:46.845400 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m18:56:46.845922 [info ] [Thread-2 (]: 91 of 95 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m18:56:46.846778 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m18:56:46.847214 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m18:56:46.847475 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m18:56:46.859256 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m18:56:46.860568 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-07-18 18:56:46.847583 => 2024-07-18 18:56:46.860341
[0m18:56:46.861111 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m18:56:46.870447 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m18:56:46.872678 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:46.875336 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m18:56:46.881284 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:46.889702 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m18:56:46.896998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.899628 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-07-18 18:56:46.776094 => 2024-07-18 18:56:46.899440
[0m18:56:46.901340 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d8639a0>]}
[0m18:56:46.902756 [info ] [Thread-1 (]: 90 of 95 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.14s]
[0m18:56:46.903631 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m18:56:46.905265 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m18:56:46.906629 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:46.907455 [info ] [Thread-1 (]: 92 of 95 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m18:56:46.912853 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:46.914297 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m18:56:46.916542 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m18:56:46.917113 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m18:56:46.924923 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m18:56:46.926111 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.928813 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m18:56:46.930343 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




  ...
[0m18:56:46.931005 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-07-18 18:56:46.917455 => 2024-07-18 18:56:46.930878
[0m18:56:46.932916 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m18:56:46.945368 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model
-- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m18:56:46.972401 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:46.974246 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m18:56:46.980225 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.989485 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m18:56:46.995846 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:46.998260 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-07-18 18:56:46.861277 => 2024-07-18 18:56:46.998156
[0m18:56:46.999813 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:47.005249 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d852950>]}
[0m18:56:47.009823 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:47.010878 [info ] [Thread-2 (]: 91 of 95 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.16s]
[0m18:56:47.012471 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m18:56:47.014200 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m18:56:47.014889 [info ] [Thread-2 (]: 93 of 95 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m18:56:47.015899 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m18:56:47.016228 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m18:56:47.016411 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m18:56:47.020204 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m18:56:47.021100 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.025474 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m18:56:47.026588 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-07-18 18:56:47.016515 => 2024-07-18 18:56:47.026402
[0m18:56:47.026999 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m18:56:47.036728 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model
-- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m18:56:47.039688 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model
-- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m18:56:47.078073 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:47.082730 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:47.091286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.093983 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m18:56:47.095314 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m18:56:47.096941 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m18:56:47.098093 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model
-- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m18:56:47.101764 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:47.105843 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m18:56:47.109277 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:47.110615 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-07-18 18:56:46.933266 => 2024-07-18 18:56:47.110553
[0m18:56:47.111200 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d5ec8b0>]}
[0m18:56:47.111535 [info ] [Thread-1 (]: 92 of 95 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.20s]
[0m18:56:47.111885 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m18:56:47.113229 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m18:56:47.113655 [info ] [Thread-1 (]: 94 of 95 START sql table model test.dataset_event_table ........................ [RUN]
[0m18:56:47.114269 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m18:56:47.114504 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m18:56:47.114718 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m18:56:47.122125 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:47.128720 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.134304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:47.135795 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m18:56:47.139699 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m18:56:47.143861 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.144872 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:47.156082 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m18:56:47.160531 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m18:56:47.162573 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-07-18 18:56:47.114900 => 2024-07-18 18:56:47.162421
[0m18:56:47.162917 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m18:56:47.169430 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m18:56:47.170185 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.172988 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-07-18 18:56:47.027140 => 2024-07-18 18:56:47.172925
[0m18:56:47.173756 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d4e3d90>]}
[0m18:56:47.175168 [info ] [Thread-2 (]: 93 of 95 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.16s]
[0m18:56:47.175843 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m18:56:47.176133 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m18:56:47.176423 [info ] [Thread-2 (]: 95 of 95 START sql table model test.dataset_event_table2 ....................... [RUN]
[0m18:56:47.177071 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table2'
[0m18:56:47.177565 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table2)
[0m18:56:47.177844 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table2
[0m18:56:47.185951 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:47.191599 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.196212 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_events'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:47.201779 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.210454 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m18:56:47.211119 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (compile): 2024-07-18 18:56:47.177942 => 2024-07-18 18:56:47.211014
[0m18:56:47.211374 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table2
[0m18:56:47.216956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

            

    
        create table test.dataset_event_table2__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.full_events
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m18:56:47.257925 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m18:56:47.263146 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:47.269253 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.272756 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m18:56:47.274411 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m18:56:47.311484 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m18:56:47.314546 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'dataset_event_table2__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m18:56:47.321543 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.324236 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m18:56:47.324902 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

  
    
    
        
        insert into test.dataset_event_table2__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "qid", "AppProfileMatchingHash")
  -- depends_on: test.full_datestat
-- depends_on: test.full_events
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m18:56:47.504207 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.18 seconds
[0m18:56:47.505526 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
EXCHANGE TABLES test.dataset_event_table2__dbt_backup AND test.dataset_event_table2 
  
  ...
[0m18:56:47.506699 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.23 seconds
[0m18:56:47.508043 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m18:56:47.511754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.516399 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
drop table if exists test.dataset_event_table2__dbt_backup 
  ...
[0m18:56:47.518198 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.522745 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m18:56:47.524215 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m18:56:47.526058 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (execute): 2024-07-18 18:56:47.211473 => 2024-07-18 18:56:47.525972
[0m18:56:47.526816 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d511ff0>]}
[0m18:56:47.527609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m18:56:47.528224 [info ] [Thread-2 (]: 95 of 95 OK created sql table model test.dataset_event_table2 .................. [[32mOK[0m in 0.35s]
[0m18:56:47.529849 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-07-18 18:56:47.163093 => 2024-07-18 18:56:47.529782
[0m18:56:47.530578 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m18:56:47.531608 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '26d0c049-9041-4404-b230-28a0ed9b021d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d890fa0>]}
[0m18:56:47.532909 [info ] [Thread-1 (]: 94 of 95 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.42s]
[0m18:56:47.533781 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m18:56:47.536394 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m18:56:47.537054 [debug] [MainThread]: Connection 'master' was properly closed.
[0m18:56:47.537317 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m18:56:47.537462 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m18:56:47.537563 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table2' was left open.
[0m18:56:47.537671 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table2: Close
[0m18:56:47.538214 [info ] [MainThread]: 
[0m18:56:47.538493 [info ] [MainThread]: Finished running 21 view models, 24 incremental models, 50 table models in 0 hours 0 minutes and 13.78 seconds (13.78s).
[0m18:56:47.541584 [debug] [MainThread]: Command end result
[0m18:56:47.640896 [info ] [MainThread]: 
[0m18:56:47.641351 [info ] [MainThread]: [32mCompleted successfully[0m
[0m18:56:47.641760 [info ] [MainThread]: 
[0m18:56:47.642062 [info ] [MainThread]: Done. PASS=95 WARN=0 ERROR=0 SKIP=0 TOTAL=95
[0m18:56:47.642696 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b635f3a90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b6344baf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2b4d7cb970>]}
[0m18:56:47.643028 [debug] [MainThread]: Flushing usage events


============================== 2024-07-18 19:03:04.908069 | 5e559b73-51b1-4e64-8a98-8bec018cfb19 ==============================
[0m19:03:04.908069 [info ] [MainThread]: Running with dbt=1.4.7
[0m19:03:04.909961 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'write_manifest': False, 'compile': False, 'which': 'parse', 'rpc_method': 'parse', 'indirect_selection': 'eager'}
[0m19:03:04.910121 [debug] [MainThread]: Tracking: tracking
[0m19:03:04.913320 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f63239c1c00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6323b73970>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6323b72350>]}
[0m19:03:04.913732 [info ] [MainThread]: Start parsing.
[0m19:03:04.936574 [info ] [MainThread]: Dependencies loaded
[0m19:03:04.937425 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m19:03:04.962142 [info ] [MainThread]: ManifestLoader created
[0m19:03:05.003523 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m19:03:05.003934 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m19:03:05.004080 [info ] [MainThread]: Manifest loaded
[0m19:03:05.006724 [info ] [MainThread]: Manifest checked
[0m19:03:05.010388 [info ] [MainThread]: Flat graph built
[0m19:03:05.010872 [info ] [MainThread]: Manifest finished loading
[0m19:03:05.011661 [info ] [MainThread]: Performance info: target/perf_info.json
[0m19:03:05.012242 [info ] [MainThread]: Done.
[0m19:03:05.012660 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6322e99ae0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6322e99a20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6322e99a50>]}
[0m19:03:05.013067 [debug] [MainThread]: Flushing usage events


============================== 2024-07-18 19:03:10.372551 | fc6dcd45-03d4-4df0-bbe5-2a5974f8c00f ==============================
[0m19:03:10.372551 [info ] [MainThread]: Running with dbt=1.4.7
[0m19:03:10.374143 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'parse_only': False, 'which': 'compile', 'rpc_method': 'compile', 'indirect_selection': 'eager'}
[0m19:03:10.379987 [debug] [MainThread]: Tracking: tracking
[0m19:03:10.382686 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f39902f5c90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f39903838e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3990383ee0>]}
[0m19:03:10.407252 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m19:03:10.462830 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m19:03:10.463333 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m19:03:10.473361 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'fc6dcd45-03d4-4df0-bbe5-2a5974f8c00f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f398f6d1c60>]}
[0m19:03:10.496798 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'fc6dcd45-03d4-4df0-bbe5-2a5974f8c00f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f398f691420>]}
[0m19:03:10.497260 [info ] [MainThread]: Found 95 models, 6 tests, 0 snapshots, 0 analyses, 546 macros, 0 operations, 26 seed files, 0 sources, 0 exposures, 0 metrics
[0m19:03:10.497599 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'fc6dcd45-03d4-4df0-bbe5-2a5974f8c00f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f398f6915d0>]}
[0m19:03:10.501933 [info ] [MainThread]: 
[0m19:03:10.503891 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m19:03:10.509244 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m19:03:10.519144 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:03:11.010338 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m19:03:11.020137 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.031053 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'fc6dcd45-03d4-4df0-bbe5-2a5974f8c00f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f398f6d2350>]}
[0m19:03:11.031835 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m19:03:11.032258 [info ] [MainThread]: 
[0m19:03:11.037468 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m19:03:11.037881 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m19:03:11.038448 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m19:03:11.039187 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m19:03:11.039596 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m19:03:11.040070 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m19:03:11.040425 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m19:03:11.087702 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m19:03:11.094360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$')        
...
[0m19:03:11.106156 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.132365 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_cohorts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.137627 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:11.175377 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m19:03:11.177875 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-07-18 19:03:11.057666 => 2024-07-18 19:03:11.177669
[0m19:03:11.178397 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m19:03:11.178639 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-07-18 19:03:11.178567 => 2024-07-18 19:03:11.178586
[0m19:03:11.180678 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m19:03:11.181260 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m19:03:11.182695 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m19:03:11.184037 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m19:03:11.184613 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m19:03:11.190374 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$')        
...
[0m19:03:11.198971 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.204351 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_network'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.211144 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.211868 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$')        
...
[0m19:03:11.225852 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m19:03:11.226475 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-07-18 19:03:11.184789 => 2024-07-18 19:03:11.226392
[0m19:03:11.226803 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m19:03:11.227342 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-07-18 19:03:11.227225 => 2024-07-18 19:03:11.227248
[0m19:03:11.228109 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m19:03:11.228607 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m19:03:11.229619 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_registry_default_events'
[0m19:03:11.230210 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_registry_default_events)
[0m19:03:11.230507 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m19:03:11.235016 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$')        
...
[0m19:03:11.236530 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.240911 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.242652 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.247503 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.248475 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.256259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.259257 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m19:03:11.269417 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m19:03:11.270388 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-07-18 19:03:11.040702 => 2024-07-18 19:03:11.270282
[0m19:03:11.270634 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (compile): 2024-07-18 19:03:11.230623 => 2024-07-18 19:03:11.270575
[0m19:03:11.271014 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m19:03:11.271334 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m19:03:11.271611 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-07-18 19:03:11.271537 => 2024-07-18 19:03:11.271551
[0m19:03:11.271983 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (execute): 2024-07-18 19:03:11.271884 => 2024-07-18 19:03:11.271900
[0m19:03:11.273053 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m19:03:11.274210 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m19:03:11.274794 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m19:03:11.275818 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m19:03:11.276920 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m19:03:11.277851 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m19:03:11.278202 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m19:03:11.278520 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m19:03:11.279068 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m19:03:11.279356 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m19:03:11.283469 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$')        
...
[0m19:03:11.288233 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m19:03:11.295668 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.296353 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.299663 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.303692 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.308816 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:11.314944 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.321576 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m19:03:11.337349 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m19:03:11.338002 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-07-18 19:03:11.283904 => 2024-07-18 19:03:11.337916
[0m19:03:11.338372 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m19:03:11.338735 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-07-18 19:03:11.279573 => 2024-07-18 19:03:11.338622
[0m19:03:11.339161 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-07-18 19:03:11.339043 => 2024-07-18 19:03:11.339067
[0m19:03:11.339510 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m19:03:11.340459 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m19:03:11.340739 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-07-18 19:03:11.340682 => 2024-07-18 19:03:11.340690
[0m19:03:11.341108 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m19:03:11.341955 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m19:03:11.342894 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations'
[0m19:03:11.343570 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m19:03:11.344216 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations)
[0m19:03:11.345120 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m19:03:11.345614 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m19:03:11.345932 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m19:03:11.350929 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$')        
...
[0m19:03:11.351555 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m19:03:11.357089 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m19:03:11.363534 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.367010 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.368292 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:11.371460 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_installations'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.376731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:11.382598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:11.396156 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m19:03:11.405984 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m19:03:11.407041 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (compile): 2024-07-18 19:03:11.346201 => 2024-07-18 19:03:11.406937
[0m19:03:11.407550 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m19:03:11.407883 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-07-18 19:03:11.352721 => 2024-07-18 19:03:11.407807
[0m19:03:11.408475 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (execute): 2024-07-18 19:03:11.408278 => 2024-07-18 19:03:11.408310
[0m19:03:11.408988 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m19:03:11.409784 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m19:03:11.410106 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-07-18 19:03:11.410042 => 2024-07-18 19:03:11.410052
[0m19:03:11.410516 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m19:03:11.411701 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m19:03:11.412534 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m19:03:11.413006 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m19:03:11.413578 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m19:03:11.414739 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m19:03:11.415413 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m19:03:11.416171 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m19:03:11.420912 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m19:03:11.421540 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m19:03:11.427726 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m19:03:11.433670 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.434244 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.438126 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.441824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.447631 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:11.448578 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.457032 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m19:03:11.470467 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m19:03:11.471747 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-07-18 19:03:11.416687 => 2024-07-18 19:03:11.471425
[0m19:03:11.472568 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m19:03:11.473022 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-07-18 19:03:11.472844 => 2024-07-18 19:03:11.472890
[0m19:03:11.473832 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m19:03:11.474374 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-07-18 19:03:11.423135 => 2024-07-18 19:03:11.474284
[0m19:03:11.474772 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m19:03:11.475519 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m19:03:11.476879 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events'
[0m19:03:11.477699 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-07-18 19:03:11.477511 => 2024-07-18 19:03:11.477545
[0m19:03:11.478334 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events)
[0m19:03:11.479307 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m19:03:11.479867 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m19:03:11.480763 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m19:03:11.490098 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appsflyer_default_[^_]+_in_app_events$')        
...
[0m19:03:11.491094 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m19:03:11.492766 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m19:03:11.493213 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m19:03:11.499469 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m19:03:11.501410 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.506563 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appsflyer_default_accountid_in_app_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.508112 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.512638 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.514969 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.531769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:11.666781 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m19:03:11.689127 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-07-18 19:03:11.493348 => 2024-07-18 19:03:11.688873
[0m19:03:11.695046 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m19:03:11.701033 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-07-18 19:03:11.700860 => 2024-07-18 19:03:11.700891
[0m19:03:11.705925 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"
[0m19:03:11.707182 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m19:03:11.707951 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m19:03:11.708930 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m19:03:11.709947 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m19:03:11.710314 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events (compile): 2024-07-18 19:03:11.481617 => 2024-07-18 19:03:11.710219
[0m19:03:11.710786 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m19:03:11.711121 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m19:03:11.715660 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m19:03:11.716166 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events (execute): 2024-07-18 19:03:11.716059 => 2024-07-18 19:03:11.716077
[0m19:03:11.718902 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m19:03:11.719768 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m19:03:11.720465 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m19:03:11.720675 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m19:03:11.720894 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m19:03:11.726288 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m19:03:11.728072 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.733156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.734211 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.739795 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.740654 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.747746 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.750537 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m19:03:11.757690 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m19:03:11.758460 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-07-18 19:03:11.711329 => 2024-07-18 19:03:11.758351
[0m19:03:11.758750 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-07-18 19:03:11.721714 => 2024-07-18 19:03:11.758686
[0m19:03:11.759300 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m19:03:11.760018 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m19:03:11.760539 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-07-18 19:03:11.760398 => 2024-07-18 19:03:11.760422
[0m19:03:11.761036 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (execute): 2024-07-18 19:03:11.760951 => 2024-07-18 19:03:11.760965
[0m19:03:11.761727 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m19:03:11.762810 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m19:03:11.763466 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m19:03:11.764774 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m19:03:11.766171 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m19:03:11.766952 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m19:03:11.767337 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m19:03:11.767718 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m19:03:11.768179 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m19:03:11.768494 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m19:03:11.774202 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m19:03:11.846916 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m19:03:11.854273 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.858025 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.859736 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.863628 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.867804 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.868515 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:11.874346 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m19:03:11.880203 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m19:03:11.880927 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-07-18 19:03:11.774621 => 2024-07-18 19:03:11.880776
[0m19:03:11.881393 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-07-18 19:03:11.768688 => 2024-07-18 19:03:11.881283
[0m19:03:11.882188 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m19:03:11.882708 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m19:03:11.883272 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-07-18 19:03:11.883069 => 2024-07-18 19:03:11.883093
[0m19:03:11.883729 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (execute): 2024-07-18 19:03:11.883623 => 2024-07-18 19:03:11.883639
[0m19:03:11.884754 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m19:03:11.885812 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m19:03:11.886358 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m19:03:11.887622 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m19:03:11.889568 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m19:03:11.890578 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m19:03:11.890978 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m19:03:11.891328 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m19:03:11.891762 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m19:03:11.892225 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m19:03:11.896882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m19:03:11.902214 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m19:03:11.909351 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.914280 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.915233 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.919986 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.921488 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.932019 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.933320 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m19:03:11.949988 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m19:03:11.950882 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-18 19:03:11.897366 => 2024-07-18 19:03:11.950741
[0m19:03:11.951407 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-07-18 19:03:11.892418 => 2024-07-18 19:03:11.951299
[0m19:03:11.951871 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m19:03:11.952259 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m19:03:11.952821 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-18 19:03:11.952645 => 2024-07-18 19:03:11.952681
[0m19:03:11.953363 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-07-18 19:03:11.953276 => 2024-07-18 19:03:11.953291
[0m19:03:11.954102 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m19:03:11.954969 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m19:03:11.955641 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m19:03:11.956753 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m19:03:11.957841 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m19:03:11.958956 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m19:03:11.959400 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m19:03:11.959738 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m19:03:11.960223 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m19:03:11.960682 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m19:03:11.965578 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m19:03:11.970948 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m19:03:11.978834 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.982514 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:11.983680 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.990653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:11.989970 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:12.007826 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m19:03:12.009917 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-07-18 19:03:11.960901 => 2024-07-18 19:03:12.009750
[0m19:03:12.010322 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m19:03:12.010567 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (execute): 2024-07-18 19:03:12.010481 => 2024-07-18 19:03:12.010499
[0m19:03:12.011397 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m19:03:12.011906 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m19:03:12.012730 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m19:03:12.013618 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.014244 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m19:03:12.027718 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m19:03:12.028234 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m19:03:12.033535 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m19:03:12.035099 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-07-18 19:03:11.966097 => 2024-07-18 19:03:12.034896
[0m19:03:12.035705 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m19:03:12.036099 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-07-18 19:03:12.035994 => 2024-07-18 19:03:12.036012
[0m19:03:12.036820 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m19:03:12.037259 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
[0m19:03:12.038307 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts'
[0m19:03:12.038757 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts)
[0m19:03:12.039070 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
[0m19:03:12.041995 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts (compile): 2024-07-18 19:03:12.039703 => 2024-07-18 19:03:12.041890
[0m19:03:12.042855 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
[0m19:03:12.043291 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts (execute): 2024-07-18 19:03:12.043201 => 2024-07-18 19:03:12.043218
[0m19:03:12.043915 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
[0m19:03:12.044826 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.045260 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
[0m19:03:12.048905 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:12.050570 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics'
[0m19:03:12.052223 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics)
[0m19:03:12.052969 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
[0m19:03:12.055219 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics (compile): 2024-07-18 19:03:12.053288 => 2024-07-18 19:03:12.054954
[0m19:03:12.055641 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
[0m19:03:12.055857 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics (execute): 2024-07-18 19:03:12.055785 => 2024-07-18 19:03:12.055800
[0m19:03:12.056477 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
[0m19:03:12.057018 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_events
[0m19:03:12.057642 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_events'
[0m19:03:12.058434 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.058926 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_events)
[0m19:03:12.080475 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_events
[0m19:03:12.084105 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m19:03:12.087854 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_events (compile): 2024-07-18 19:03:12.084453 => 2024-07-18 19:03:12.087729
[0m19:03:12.088750 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_events
[0m19:03:12.089569 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_events (execute): 2024-07-18 19:03:12.089411 => 2024-07-18 19:03:12.089437
[0m19:03:12.090700 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_events
[0m19:03:12.091140 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-07-18 19:03:12.028768 => 2024-07-18 19:03:12.091020
[0m19:03:12.091910 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_network
[0m19:03:12.093063 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m19:03:12.094306 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_network'
[0m19:03:12.094846 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-07-18 19:03:12.094727 => 2024-07-18 19:03:12.094750
[0m19:03:12.095220 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_network)
[0m19:03:12.096000 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m19:03:12.096556 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_network
[0m19:03:12.097111 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid__viewitemevents
[0m19:03:12.100419 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_network (compile): 2024-07-18 19:03:12.098175 => 2024-07-18 19:03:12.100300
[0m19:03:12.101544 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid__viewitemevents'
[0m19:03:12.102059 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_network
[0m19:03:12.102455 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid__viewitemevents)
[0m19:03:12.102831 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_network (execute): 2024-07-18 19:03:12.102748 => 2024-07-18 19:03:12.102763
[0m19:03:12.103120 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid__viewitemevents
[0m19:03:12.103939 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_adjust_default_accountid_network
[0m19:03:12.106232 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid__viewitemevents (compile): 2024-07-18 19:03:12.104614 => 2024-07-18 19:03:12.106134
[0m19:03:12.106789 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
[0m19:03:12.107386 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid__viewitemevents
[0m19:03:12.108063 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks'
[0m19:03:12.108541 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid__viewitemevents (execute): 2024-07-18 19:03:12.108376 => 2024-07-18 19:03:12.108397
[0m19:03:12.109040 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks)
[0m19:03:12.110305 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid__viewitemevents
[0m19:03:12.111020 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
[0m19:03:12.111760 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
[0m19:03:12.114294 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks (compile): 2024-07-18 19:03:12.112352 => 2024-07-18 19:03:12.114179
[0m19:03:12.115006 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
[0m19:03:12.115514 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
[0m19:03:12.116007 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_events)
[0m19:03:12.116374 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks (execute): 2024-07-18 19:03:12.116288 => 2024-07-18 19:03:12.116306
[0m19:03:12.116732 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
[0m19:03:12.117674 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
[0m19:03:12.119629 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_events (compile): 2024-07-18 19:03:12.118019 => 2024-07-18 19:03:12.119528
[0m19:03:12.120472 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
[0m19:03:12.121671 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
[0m19:03:12.122930 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations'
[0m19:03:12.123653 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_events (execute): 2024-07-18 19:03:12.123502 => 2024-07-18 19:03:12.123527
[0m19:03:12.124052 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations)
[0m19:03:12.125229 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
[0m19:03:12.125779 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
[0m19:03:12.126473 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
[0m19:03:12.128837 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations (compile): 2024-07-18 19:03:12.127157 => 2024-07-18 19:03:12.128737
[0m19:03:12.129751 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
[0m19:03:12.130181 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
[0m19:03:12.130431 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles)
[0m19:03:12.130725 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations (execute): 2024-07-18 19:03:12.130628 => 2024-07-18 19:03:12.130644
[0m19:03:12.131133 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
[0m19:03:12.131818 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
[0m19:03:12.135545 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles (compile): 2024-07-18 19:03:12.132507 => 2024-07-18 19:03:12.135407
[0m19:03:12.136388 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
[0m19:03:12.137267 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
[0m19:03:12.138280 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
[0m19:03:12.138888 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles (execute): 2024-07-18 19:03:12.138777 => 2024-07-18 19:03:12.138803
[0m19:03:12.139301 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts)
[0m19:03:12.140279 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
[0m19:03:12.141120 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
[0m19:03:12.142127 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_viewitemevents
[0m19:03:12.145048 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts (compile): 2024-07-18 19:03:12.143065 => 2024-07-18 19:03:12.144941
[0m19:03:12.146077 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_viewitemevents'
[0m19:03:12.146590 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
[0m19:03:12.146852 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_viewitemevents)
[0m19:03:12.147344 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts (execute): 2024-07-18 19:03:12.147209 => 2024-07-18 19:03:12.147234
[0m19:03:12.147832 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_viewitemevents
[0m19:03:12.149054 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
[0m19:03:12.151344 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_viewitemevents (compile): 2024-07-18 19:03:12.149503 => 2024-07-18 19:03:12.151221
[0m19:03:12.152054 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners
[0m19:03:12.152907 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_viewitemevents
[0m19:03:12.153633 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners'
[0m19:03:12.154326 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_viewitemevents (execute): 2024-07-18 19:03:12.154154 => 2024-07-18 19:03:12.154185
[0m19:03:12.154711 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners)
[0m19:03:12.155653 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_appmetrica_default_accountid_viewitemevents
[0m19:03:12.156117 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners
[0m19:03:12.156528 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
[0m19:03:12.158982 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners (compile): 2024-07-18 19:03:12.157218 => 2024-07-18 19:03:12.158863
[0m19:03:12.160068 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
[0m19:03:12.160696 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners
[0m19:03:12.160960 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics)
[0m19:03:12.161371 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners (execute): 2024-07-18 19:03:12.161246 => 2024-07-18 19:03:12.161268
[0m19:03:12.161846 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
[0m19:03:12.162590 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners
[0m19:03:12.164652 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics (compile): 2024-07-18 19:03:12.162916 => 2024-07-18 19:03:12.164549
[0m19:03:12.165598 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
[0m19:03:12.166286 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
[0m19:03:12.167124 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
[0m19:03:12.167742 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics (execute): 2024-07-18 19:03:12.167567 => 2024-07-18 19:03:12.167590
[0m19:03:12.168210 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_campaigns)
[0m19:03:12.169090 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
[0m19:03:12.169624 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
[0m19:03:12.170312 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
[0m19:03:12.173029 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_campaigns (compile): 2024-07-18 19:03:12.170898 => 2024-07-18 19:03:12.172916
[0m19:03:12.174312 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
[0m19:03:12.174800 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
[0m19:03:12.175267 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts)
[0m19:03:12.175827 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_campaigns (execute): 2024-07-18 19:03:12.175692 => 2024-07-18 19:03:12.175713
[0m19:03:12.176209 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
[0m19:03:12.177259 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
[0m19:03:12.179485 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts (compile): 2024-07-18 19:03:12.177723 => 2024-07-18 19:03:12.179378
[0m19:03:12.180273 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
[0m19:03:12.181152 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
[0m19:03:12.181814 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
[0m19:03:12.182540 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts (execute): 2024-07-18 19:03:12.182392 => 2024-07-18 19:03:12.182417
[0m19:03:12.182992 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult)
[0m19:03:12.184205 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
[0m19:03:12.184808 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
[0m19:03:12.185634 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups
[0m19:03:12.189607 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult (compile): 2024-07-18 19:03:12.186351 => 2024-07-18 19:03:12.189500
[0m19:03:12.190399 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups'
[0m19:03:12.190925 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
[0m19:03:12.191370 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups)
[0m19:03:12.191818 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult (execute): 2024-07-18 19:03:12.191725 => 2024-07-18 19:03:12.191742
[0m19:03:12.192118 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups
[0m19:03:12.192866 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
[0m19:03:12.195779 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups (compile): 2024-07-18 19:03:12.193415 => 2024-07-18 19:03:12.195677
[0m19:03:12.196633 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups_statistics
[0m19:03:12.197405 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups
[0m19:03:12.198478 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups_statistics'
[0m19:03:12.199040 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups (execute): 2024-07-18 19:03:12.198934 => 2024-07-18 19:03:12.198955
[0m19:03:12.199309 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups_statistics)
[0m19:03:12.200383 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups
[0m19:03:12.201000 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups_statistics
[0m19:03:12.201527 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
[0m19:03:12.204421 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups_statistics (compile): 2024-07-18 19:03:12.202233 => 2024-07-18 19:03:12.204279
[0m19:03:12.205442 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
[0m19:03:12.206117 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups_statistics
[0m19:03:12.206476 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans)
[0m19:03:12.206823 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups_statistics (execute): 2024-07-18 19:03:12.206731 => 2024-07-18 19:03:12.206750
[0m19:03:12.207166 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
[0m19:03:12.207896 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_groups_statistics
[0m19:03:12.210320 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans (compile): 2024-07-18 19:03:12.208380 => 2024-07-18 19:03:12.210214
[0m19:03:12.211148 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
[0m19:03:12.212038 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
[0m19:03:12.213097 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
[0m19:03:12.213759 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans (execute): 2024-07-18 19:03:12.213621 => 2024-07-18 19:03:12.213646
[0m19:03:12.214118 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics)
[0m19:03:12.214922 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
[0m19:03:12.215509 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
[0m19:03:12.216140 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners
[0m19:03:12.218569 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics (compile): 2024-07-18 19:03:12.216781 => 2024-07-18 19:03:12.218412
[0m19:03:12.219580 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners'
[0m19:03:12.220145 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
[0m19:03:12.220384 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners)
[0m19:03:12.220816 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics (execute): 2024-07-18 19:03:12.220688 => 2024-07-18 19:03:12.220714
[0m19:03:12.221332 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners
[0m19:03:12.222440 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
[0m19:03:12.224470 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners (compile): 2024-07-18 19:03:12.222863 => 2024-07-18 19:03:12.224377
[0m19:03:12.225340 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners_statistics
[0m19:03:12.226387 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners
[0m19:03:12.227170 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners_statistics'
[0m19:03:12.227603 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners (execute): 2024-07-18 19:03:12.227520 => 2024-07-18 19:03:12.227535
[0m19:03:12.227832 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners_statistics)
[0m19:03:12.228585 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners
[0m19:03:12.229006 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners_statistics
[0m19:03:12.229409 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
[0m19:03:12.231568 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners_statistics (compile): 2024-07-18 19:03:12.229883 => 2024-07-18 19:03:12.231465
[0m19:03:12.232749 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
[0m19:03:12.233388 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners_statistics
[0m19:03:12.233883 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_yd_default_accountid_custom_report)
[0m19:03:12.234548 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners_statistics (execute): 2024-07-18 19:03:12.234420 => 2024-07-18 19:03:12.234443
[0m19:03:12.235285 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
[0m19:03:12.237716 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_vkads_default_accountid_banners_statistics
[0m19:03:12.240243 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_yd_default_accountid_custom_report (compile): 2024-07-18 19:03:12.238227 => 2024-07-18 19:03:12.240114
[0m19:03:12.241104 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
[0m19:03:12.241720 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
[0m19:03:12.242794 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
[0m19:03:12.243592 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_yd_default_accountid_custom_report (execute): 2024-07-18 19:03:12.243396 => 2024-07-18 19:03:12.243430
[0m19:03:12.244128 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream)
[0m19:03:12.244842 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
[0m19:03:12.245369 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
[0m19:03:12.245848 [debug] [Thread-2 (]: Began running node seed.etlcraft_integration_tests.datacraft_testOlga_raw__stream_avito_default_accountid_calls_by_time
[0m19:03:12.247833 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream (compile): 2024-07-18 19:03:12.246144 => 2024-07-18 19:03:12.247732
[0m19:03:12.249345 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_testOlga_raw__stream_avito_default_accountid_calls_by_time'
[0m19:03:12.250368 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
[0m19:03:12.250991 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_testOlga_raw__stream_avito_default_accountid_calls_by_time)
[0m19:03:12.251715 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream (execute): 2024-07-18 19:03:12.251527 => 2024-07-18 19:03:12.251567
[0m19:03:12.252309 [debug] [Thread-2 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_testOlga_raw__stream_avito_default_accountid_calls_by_time
[0m19:03:12.253547 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
[0m19:03:12.255709 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_testOlga_raw__stream_avito_default_accountid_calls_by_time (compile): 2024-07-18 19:03:12.253897 => 2024-07-18 19:03:12.255600
[0m19:03:12.256680 [debug] [Thread-1 (]: Began running node seed.etlcraft_integration_tests.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
[0m19:03:12.257626 [debug] [Thread-2 (]: Began executing node seed.etlcraft_integration_tests.datacraft_testOlga_raw__stream_avito_default_accountid_calls_by_time
[0m19:03:12.258570 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'seed.etlcraft_integration_tests.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
[0m19:03:12.259139 [debug] [Thread-2 (]: Timing info for seed.etlcraft_integration_tests.datacraft_testOlga_raw__stream_avito_default_accountid_calls_by_time (execute): 2024-07-18 19:03:12.259003 => 2024-07-18 19:03:12.259027
[0m19:03:12.259574 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly seed.etlcraft_integration_tests.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls)
[0m19:03:12.260478 [debug] [Thread-2 (]: Finished running node seed.etlcraft_integration_tests.datacraft_testOlga_raw__stream_avito_default_accountid_calls_by_time
[0m19:03:12.261077 [debug] [Thread-1 (]: Began compiling node seed.etlcraft_integration_tests.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
[0m19:03:12.261883 [debug] [Thread-2 (]: Began running node test.etlcraft.test_find_incremental_datetime_field
[0m19:03:12.264627 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls (compile): 2024-07-18 19:03:12.262637 => 2024-07-18 19:03:12.264510
[0m19:03:12.265529 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'test.etlcraft.test_find_incremental_datetime_field'
[0m19:03:12.266252 [debug] [Thread-1 (]: Began executing node seed.etlcraft_integration_tests.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
[0m19:03:12.266578 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly test.etlcraft.test_find_incremental_datetime_field)
[0m19:03:12.267022 [debug] [Thread-1 (]: Timing info for seed.etlcraft_integration_tests.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls (execute): 2024-07-18 19:03:12.266889 => 2024-07-18 19:03:12.266912
[0m19:03:12.267702 [debug] [Thread-2 (]: Began compiling node test.etlcraft.test_find_incremental_datetime_field
[0m19:03:12.268722 [debug] [Thread-1 (]: Finished running node seed.etlcraft_integration_tests.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
[0m19:03:12.277028 [debug] [Thread-2 (]: Writing injected SQL for node "test.etlcraft.test_find_incremental_datetime_field"
[0m19:03:12.277959 [debug] [Thread-1 (]: Began running node test.etlcraft.test_get_column_count_in_subquery
[0m19:03:12.279185 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'test.etlcraft.test_get_column_count_in_subquery'
[0m19:03:12.279570 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly test.etlcraft.test_get_column_count_in_subquery)
[0m19:03:12.279790 [debug] [Thread-1 (]: Began compiling node test.etlcraft.test_get_column_count_in_subquery
[0m19:03:12.283830 [debug] [Thread-1 (]: Writing injected SQL for node "test.etlcraft.test_get_column_count_in_subquery"
[0m19:03:12.284573 [debug] [Thread-1 (]: Timing info for test.etlcraft.test_get_column_count_in_subquery (compile): 2024-07-18 19:03:12.279893 => 2024-07-18 19:03:12.284460
[0m19:03:12.284997 [debug] [Thread-2 (]: Timing info for test.etlcraft.test_find_incremental_datetime_field (compile): 2024-07-18 19:03:12.269238 => 2024-07-18 19:03:12.284896
[0m19:03:12.285427 [debug] [Thread-1 (]: Began executing node test.etlcraft.test_get_column_count_in_subquery
[0m19:03:12.285972 [debug] [Thread-2 (]: Began executing node test.etlcraft.test_find_incremental_datetime_field
[0m19:03:12.286543 [debug] [Thread-1 (]: Timing info for test.etlcraft.test_get_column_count_in_subquery (execute): 2024-07-18 19:03:12.286400 => 2024-07-18 19:03:12.286427
[0m19:03:12.286960 [debug] [Thread-2 (]: Timing info for test.etlcraft.test_find_incremental_datetime_field (execute): 2024-07-18 19:03:12.286886 => 2024-07-18 19:03:12.286900
[0m19:03:12.287726 [debug] [Thread-1 (]: Finished running node test.etlcraft.test_get_column_count_in_subquery
[0m19:03:12.288710 [debug] [Thread-2 (]: Finished running node test.etlcraft.test_find_incremental_datetime_field
[0m19:03:12.289404 [debug] [Thread-1 (]: Began running node test.etlcraft.test_get_from_default_dict
[0m19:03:12.290377 [debug] [Thread-2 (]: Began running node test.etlcraft.test_get_relations_dist
[0m19:03:12.291297 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'test.etlcraft.test_get_from_default_dict'
[0m19:03:12.292310 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'test.etlcraft.test_get_relations_dist'
[0m19:03:12.292667 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly test.etlcraft.test_get_from_default_dict)
[0m19:03:12.292923 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly test.etlcraft.test_get_relations_dist)
[0m19:03:12.293328 [debug] [Thread-1 (]: Began compiling node test.etlcraft.test_get_from_default_dict
[0m19:03:12.293852 [debug] [Thread-2 (]: Began compiling node test.etlcraft.test_get_relations_dist
[0m19:03:12.303528 [debug] [Thread-1 (]: Writing injected SQL for node "test.etlcraft.test_get_from_default_dict"
[0m19:03:12.318293 [debug] [Thread-2 (]: dbt_clickhouse adapter: On test.etlcraft.test_get_relations_dist: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "test.etlcraft.test_get_relations_dist"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM (
    SELECT 
    '' as database,
    'incremental_testsourcetypename_testtemplatename' as table,
    'test_col1'as name
    UNION all
    SELECT 
    '' as database,
    'incremental_testsourcetypename_testtemplatename' as table,
    'test_col2'as name
    UNION all
    SELECT 
    '' as database,
    'incremental_testsourcetypename_testtemplatename' as table,
    'test_col3'as name
    UNION all
    SELECT 
    '' as database,
    'normalize_testsourcetypename_testtemplatename' as table,
    'test_col1'as name
    UNION all
    SELECT 
    '' as database,
    'normalize_testsourcetypename_testtemplatename' as table,
    'test_col2'as name
    UNION all
    SELECT 
    '' as database,
    'normalize_testsourcetypename_testtemplatename' as table,
    'test_col3'as name
)
    
    WHERE database = '' AND table LIKE 'incremental_testsourcetypename_testtemplatename_%'
    GROUP BY table

...
[0m19:03:12.320349 [debug] [Thread-1 (]: Timing info for test.etlcraft.test_get_from_default_dict (compile): 2024-07-18 19:03:12.294337 => 2024-07-18 19:03:12.319939
[0m19:03:12.321135 [debug] [Thread-1 (]: Began executing node test.etlcraft.test_get_from_default_dict
[0m19:03:12.321519 [debug] [Thread-1 (]: Timing info for test.etlcraft.test_get_from_default_dict (execute): 2024-07-18 19:03:12.321408 => 2024-07-18 19:03:12.321428
[0m19:03:12.322450 [debug] [Thread-1 (]: Finished running node test.etlcraft.test_get_from_default_dict
[0m19:03:12.322715 [debug] [Thread-1 (]: Began running node test.etlcraft.test_json_list_keys
[0m19:03:12.323138 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'test.etlcraft.test_json_list_keys'
[0m19:03:12.323320 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly test.etlcraft.test_json_list_keys)
[0m19:03:12.323512 [debug] [Thread-1 (]: Began compiling node test.etlcraft.test_json_list_keys
[0m19:03:12.332288 [debug] [Thread-1 (]: Writing injected SQL for node "test.etlcraft.test_json_list_keys"
[0m19:03:12.332954 [debug] [Thread-1 (]: Timing info for test.etlcraft.test_json_list_keys (compile): 2024-07-18 19:03:12.323637 => 2024-07-18 19:03:12.332797
[0m19:03:12.333461 [debug] [Thread-1 (]: Began executing node test.etlcraft.test_json_list_keys
[0m19:03:12.333666 [debug] [Thread-1 (]: Timing info for test.etlcraft.test_json_list_keys (execute): 2024-07-18 19:03:12.333602 => 2024-07-18 19:03:12.333615
[0m19:03:12.334232 [debug] [Thread-1 (]: Finished running node test.etlcraft.test_json_list_keys
[0m19:03:12.334638 [debug] [Thread-1 (]: Began running node test.etlcraft.test_normalize_name
[0m19:03:12.335572 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'test.etlcraft.test_normalize_name'
[0m19:03:12.335874 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly test.etlcraft.test_normalize_name)
[0m19:03:12.336106 [debug] [Thread-1 (]: Began compiling node test.etlcraft.test_normalize_name
[0m19:03:12.342523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:12.343883 [debug] [Thread-2 (]: Writing injected SQL for node "test.etlcraft.test_get_relations_dist"
[0m19:03:12.347909 [debug] [Thread-1 (]: Writing injected SQL for node "test.etlcraft.test_normalize_name"
[0m19:03:12.348993 [debug] [Thread-1 (]: Timing info for test.etlcraft.test_normalize_name (compile): 2024-07-18 19:03:12.336260 => 2024-07-18 19:03:12.348861
[0m19:03:12.349421 [debug] [Thread-1 (]: Began executing node test.etlcraft.test_normalize_name
[0m19:03:12.349774 [debug] [Thread-2 (]: Timing info for test.etlcraft.test_get_relations_dist (compile): 2024-07-18 19:03:12.304085 => 2024-07-18 19:03:12.349675
[0m19:03:12.350257 [debug] [Thread-1 (]: Timing info for test.etlcraft.test_normalize_name (execute): 2024-07-18 19:03:12.350068 => 2024-07-18 19:03:12.350092
[0m19:03:12.350903 [debug] [Thread-2 (]: Began executing node test.etlcraft.test_get_relations_dist
[0m19:03:12.351775 [debug] [Thread-1 (]: Finished running node test.etlcraft.test_normalize_name
[0m19:03:12.352251 [debug] [Thread-2 (]: Timing info for test.etlcraft.test_get_relations_dist (execute): 2024-07-18 19:03:12.352142 => 2024-07-18 19:03:12.352162
[0m19:03:12.352979 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m19:03:12.354269 [debug] [Thread-2 (]: Finished running node test.etlcraft.test_get_relations_dist
[0m19:03:12.355393 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m19:03:12.356310 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m19:03:12.356800 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m19:03:12.357602 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m19:03:12.358043 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m19:03:12.358317 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m19:03:12.369393 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m19:03:12.373450 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m19:03:12.380171 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m19:03:12.381197 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-07-18 19:03:12.373820 => 2024-07-18 19:03:12.381056
[0m19:03:12.381807 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-07-18 19:03:12.358532 => 2024-07-18 19:03:12.381674
[0m19:03:12.382331 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m19:03:12.382760 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m19:03:12.383282 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-07-18 19:03:12.383083 => 2024-07-18 19:03:12.383111
[0m19:03:12.383739 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-07-18 19:03:12.383654 => 2024-07-18 19:03:12.383674
[0m19:03:12.384704 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m19:03:12.385874 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m19:03:12.386812 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m19:03:12.387627 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m19:03:12.388690 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m19:03:12.389650 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_registry_default_events'
[0m19:03:12.390061 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m19:03:12.390309 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_registry_default_events)
[0m19:03:12.390766 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m19:03:12.391228 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m19:03:12.395675 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m19:03:12.400284 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m19:03:12.401593 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-07-18 19:03:12.391449 => 2024-07-18 19:03:12.401434
[0m19:03:12.402255 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m19:03:12.402664 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (compile): 2024-07-18 19:03:12.396162 => 2024-07-18 19:03:12.402546
[0m19:03:12.403075 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-07-18 19:03:12.402977 => 2024-07-18 19:03:12.402997
[0m19:03:12.403516 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m19:03:12.404981 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m19:03:12.405655 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (execute): 2024-07-18 19:03:12.405538 => 2024-07-18 19:03:12.405558
[0m19:03:12.406307 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m19:03:12.407571 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m19:03:12.408431 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m19:03:12.408858 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m19:03:12.409123 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m19:03:12.409892 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m19:03:12.410305 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m19:03:12.410530 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m19:03:12.414206 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m19:03:12.414775 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m19:03:12.415334 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-07-18 19:03:12.410725 => 2024-07-18 19:03:12.415252
[0m19:03:12.418823 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m19:03:12.419449 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m19:03:12.420348 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-07-18 19:03:12.420180 => 2024-07-18 19:03:12.420212
[0m19:03:12.421019 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m19:03:12.421394 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m19:03:12.421924 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations'
[0m19:03:12.422255 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations)
[0m19:03:12.423148 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m19:03:12.427140 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m19:03:12.427677 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-07-18 19:03:12.415545 => 2024-07-18 19:03:12.427456
[0m19:03:12.428564 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m19:03:12.428788 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-07-18 19:03:12.428725 => 2024-07-18 19:03:12.428737
[0m19:03:12.429339 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m19:03:12.429718 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m19:03:12.430706 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m19:03:12.431000 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m19:03:12.431290 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m19:03:12.431605 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (compile): 2024-07-18 19:03:12.423602 => 2024-07-18 19:03:12.431514
[0m19:03:12.436671 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m19:03:12.437319 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m19:03:12.438021 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (execute): 2024-07-18 19:03:12.437922 => 2024-07-18 19:03:12.437937
[0m19:03:12.438664 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m19:03:12.439184 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m19:03:12.440652 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m19:03:12.440947 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-07-18 19:03:12.431851 => 2024-07-18 19:03:12.440875
[0m19:03:12.441187 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m19:03:12.441620 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m19:03:12.442110 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m19:03:12.442613 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-07-18 19:03:12.442501 => 2024-07-18 19:03:12.442521
[0m19:03:12.446443 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m19:03:12.447596 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m19:03:12.448166 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m19:03:12.449132 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m19:03:12.449435 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m19:03:12.449786 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-07-18 19:03:12.442998 => 2024-07-18 19:03:12.449701
[0m19:03:12.450227 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m19:03:12.450601 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m19:03:12.454040 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m19:03:12.454530 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-07-18 19:03:12.454432 => 2024-07-18 19:03:12.454448
[0m19:03:12.455546 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m19:03:12.456188 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m19:03:12.456964 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m19:03:12.457368 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-07-18 19:03:12.450822 => 2024-07-18 19:03:12.457287
[0m19:03:12.457630 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m19:03:12.458488 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m19:03:12.458817 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m19:03:12.459229 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-07-18 19:03:12.459114 => 2024-07-18 19:03:12.459135
[0m19:03:12.462920 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m19:03:12.464171 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m19:03:12.464854 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m19:03:12.465834 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events'
[0m19:03:12.466167 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events)
[0m19:03:12.466786 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m19:03:12.467470 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-07-18 19:03:12.459530 => 2024-07-18 19:03:12.467366
[0m19:03:12.471446 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"
[0m19:03:12.472226 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m19:03:12.472784 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-07-18 19:03:12.472702 => 2024-07-18 19:03:12.472719
[0m19:03:12.473483 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m19:03:12.473913 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m19:03:12.475375 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m19:03:12.475939 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events (compile): 2024-07-18 19:03:12.467734 => 2024-07-18 19:03:12.475842
[0m19:03:12.476314 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m19:03:12.476643 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m19:03:12.476959 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m19:03:12.477248 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events (execute): 2024-07-18 19:03:12.477171 => 2024-07-18 19:03:12.477184
[0m19:03:12.481090 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m19:03:12.482347 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m19:03:12.483310 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m19:03:12.485345 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_banners'
[0m19:03:12.486172 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-07-18 19:03:12.477459 => 2024-07-18 19:03:12.486065
[0m19:03:12.486486 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_banners)
[0m19:03:12.486897 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m19:03:12.487250 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m19:03:12.487643 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-07-18 19:03:12.487551 => 2024-07-18 19:03:12.487568
[0m19:03:12.492660 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m19:03:12.493797 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m19:03:12.494759 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m19:03:12.495821 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m19:03:12.496088 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m19:03:12.496364 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m19:03:12.499509 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m19:03:12.499981 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (compile): 2024-07-18 19:03:12.487990 => 2024-07-18 19:03:12.499853
[0m19:03:12.500798 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m19:03:12.501172 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (execute): 2024-07-18 19:03:12.501081 => 2024-07-18 19:03:12.501098
[0m19:03:12.501857 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m19:03:12.502236 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m19:03:12.503213 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns'
[0m19:03:12.503454 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns)
[0m19:03:12.503691 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m19:03:12.504002 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-07-18 19:03:12.496516 => 2024-07-18 19:03:12.503868
[0m19:03:12.507368 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m19:03:12.508015 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m19:03:12.508707 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-07-18 19:03:12.508628 => 2024-07-18 19:03:12.508644
[0m19:03:12.509356 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m19:03:12.509783 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m19:03:12.510047 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (compile): 2024-07-18 19:03:12.504285 => 2024-07-18 19:03:12.509968
[0m19:03:12.510816 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m19:03:12.511327 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m19:03:12.511573 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m19:03:12.511861 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (execute): 2024-07-18 19:03:12.511789 => 2024-07-18 19:03:12.511801
[0m19:03:12.512114 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m19:03:12.512717 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m19:03:12.516904 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m19:03:12.517520 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m19:03:12.519130 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m19:03:12.519816 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m19:03:12.520197 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m19:03:12.523798 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m19:03:12.524544 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-18 19:03:12.513052 => 2024-07-18 19:03:12.524446
[0m19:03:12.524956 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-07-18 19:03:12.520581 => 2024-07-18 19:03:12.524826
[0m19:03:12.525374 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m19:03:12.525846 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m19:03:12.526216 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-18 19:03:12.526150 => 2024-07-18 19:03:12.526164
[0m19:03:12.526486 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-07-18 19:03:12.526436 => 2024-07-18 19:03:12.526445
[0m19:03:12.527485 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m19:03:12.528550 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m19:03:12.529006 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m19:03:12.529370 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m19:03:12.530348 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans'
[0m19:03:12.530922 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m19:03:12.531290 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans)
[0m19:03:12.531625 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m19:03:12.531884 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m19:03:12.532154 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m19:03:12.535513 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m19:03:12.540966 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m19:03:12.541864 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-07-18 19:03:12.536000 => 2024-07-18 19:03:12.541775
[0m19:03:12.542327 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (compile): 2024-07-18 19:03:12.532355 => 2024-07-18 19:03:12.542149
[0m19:03:12.543015 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m19:03:12.543872 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m19:03:12.544392 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-07-18 19:03:12.544267 => 2024-07-18 19:03:12.544289
[0m19:03:12.544880 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (execute): 2024-07-18 19:03:12.544779 => 2024-07-18 19:03:12.544795
[0m19:03:12.545586 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m19:03:12.546252 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m19:03:12.546685 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m19:03:12.547649 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m19:03:12.549045 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m19:03:12.549688 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m19:03:12.549943 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m19:03:12.550262 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m19:03:12.550618 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m19:03:12.550865 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m19:03:12.554687 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m19:03:12.578531 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m19:03:12.579888 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-07-18 19:03:12.551053 => 2024-07-18 19:03:12.579724
[0m19:03:12.580288 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m19:03:12.580502 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-07-18 19:03:12.580440 => 2024-07-18 19:03:12.580452
[0m19:03:12.581056 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m19:03:12.581474 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m19:03:12.582327 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m19:03:12.582934 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m19:03:12.583351 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m19:03:12.591251 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m19:03:12.592612 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.612780 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.613745 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:12.619278 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.621362 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.628525 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m19:03:12.629432 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.632958 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m19:03:12.633723 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-07-18 19:03:12.583539 => 2024-07-18 19:03:12.633615
[0m19:03:12.634086 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m19:03:12.634297 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-07-18 19:03:12.634234 => 2024-07-18 19:03:12.634246
[0m19:03:12.634880 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m19:03:12.635190 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appsflyer_events
[0m19:03:12.635902 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appsflyer_events'
[0m19:03:12.636429 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appsflyer_events)
[0m19:03:12.636641 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appsflyer_events
[0m19:03:12.645171 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appsflyer_events_[^_]+_in_app_events$')        
...
[0m19:03:12.645870 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:12.650917 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.654586 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.657897 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.659247 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.662448 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_installations$')        
...
[0m19:03:12.667969 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.668889 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.677458 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appsflyer_events"
[0m19:03:12.681625 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.683383 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appsflyer_events (compile): 2024-07-18 19:03:12.636737 => 2024-07-18 19:03:12.683233
[0m19:03:12.683777 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appsflyer_events
[0m19:03:12.684041 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appsflyer_events (execute): 2024-07-18 19:03:12.683970 => 2024-07-18 19:03:12.683983
[0m19:03:12.684588 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appsflyer_events
[0m19:03:12.684969 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m19:03:12.685803 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m19:03:12.686095 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m19:03:12.686303 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m19:03:12.694770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m19:03:12.695420 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.700287 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m19:03:12.706982 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.707473 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.711431 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.714945 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.721394 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:12.724354 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m19:03:12.725888 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.728333 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m19:03:12.729274 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-07-18 19:03:12.686418 => 2024-07-18 19:03:12.729109
[0m19:03:12.729764 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m19:03:12.730081 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-07-18 19:03:12.730013 => 2024-07-18 19:03:12.730026
[0m19:03:12.730745 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m19:03:12.731222 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m19:03:12.732308 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m19:03:12.733369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.733688 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m19:03:12.737094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.737712 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m19:03:12.745111 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.762229 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m19:03:12.763881 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m19:03:12.765316 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-07-18 19:03:12.555254 => 2024-07-18 19:03:12.765137
[0m19:03:12.765905 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m19:03:12.766208 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-07-18 19:03:12.766143 => 2024-07-18 19:03:12.766156
[0m19:03:12.766776 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m19:03:12.767189 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m19:03:12.768031 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m19:03:12.768288 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m19:03:12.768448 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m19:03:12.775727 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.779118 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m19:03:12.782692 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.788986 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:12.792062 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_banners$')        
...
[0m19:03:12.793014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.797758 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.800019 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.803572 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.805089 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.807704 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m19:03:12.808704 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-07-18 19:03:12.768544 => 2024-07-18 19:03:12.808563
[0m19:03:12.809107 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m19:03:12.809689 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.810016 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-07-18 19:03:12.809937 => 2024-07-18 19:03:12.809952
[0m19:03:12.813381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_campaigns$')        
...
[0m19:03:12.814411 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m19:03:12.815897 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m19:03:12.817177 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m19:03:12.817756 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m19:03:12.818461 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m19:03:12.827729 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.831230 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m19:03:12.835272 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.841565 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:12.848440 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.853073 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m19:03:12.856838 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.862978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:12.863790 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.866374 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m19:03:12.870587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m19:03:12.876633 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.878548 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m19:03:12.887089 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:12.888759 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m19:03:12.889330 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-07-18 19:03:12.739451 => 2024-07-18 19:03:12.889246
[0m19:03:12.889554 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m19:03:12.889695 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-07-18 19:03:12.889651 => 2024-07-18 19:03:12.889662
[0m19:03:12.890237 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m19:03:12.890540 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m19:03:12.891762 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m19:03:12.892196 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m19:03:12.892467 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m19:03:12.904830 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:12.906451 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m19:03:12.907702 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m19:03:12.909471 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-07-18 19:03:12.818711 => 2024-07-18 19:03:12.909355
[0m19:03:12.909883 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m19:03:12.910129 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-07-18 19:03:12.910052 => 2024-07-18 19:03:12.910066
[0m19:03:12.910729 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m19:03:12.911134 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m19:03:12.912039 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m19:03:12.912346 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m19:03:12.912528 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m19:03:12.924865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_')        
...
[0m19:03:12.925561 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:12.931123 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.932754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.938048 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:12.939125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.944023 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_registry_[^_]+_ad_plans$')        
...
[0m19:03:12.944775 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:12.949277 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m19:03:12.951657 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.022108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m19:03:13.024255 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.026069 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m19:03:13.032810 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.036103 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m19:03:13.042233 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.044077 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m19:03:13.045850 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:13.047437 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m19:03:13.047978 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-07-18 19:03:12.912624 => 2024-07-18 19:03:13.047886
[0m19:03:13.048235 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m19:03:13.048403 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-07-18 19:03:13.048350 => 2024-07-18 19:03:13.048362
[0m19:03:13.049028 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m19:03:13.049625 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m19:03:13.050387 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m19:03:13.050944 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m19:03:13.051510 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m19:03:13.062590 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:13.064184 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m19:03:13.066253 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m19:03:13.068859 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-07-18 19:03:12.892559 => 2024-07-18 19:03:13.068703
[0m19:03:13.069228 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m19:03:13.069433 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-07-18 19:03:13.069347 => 2024-07-18 19:03:13.069359
[0m19:03:13.070386 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m19:03:13.070922 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m19:03:13.071985 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m19:03:13.072395 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m19:03:13.072922 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m19:03:13.076746 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m19:03:13.079014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.093997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.096755 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:13.100262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.102773 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.104761 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m19:03:13.105926 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-07-18 19:03:13.051770 => 2024-07-18 19:03:13.105797
[0m19:03:13.106315 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m19:03:13.106551 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-07-18 19:03:13.106478 => 2024-07-18 19:03:13.106492
[0m19:03:13.107217 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m19:03:13.107651 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m19:03:13.108332 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.109314 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m19:03:13.111787 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m19:03:13.112261 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m19:03:13.112950 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m19:03:13.117029 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m19:03:13.118319 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-07-18 19:03:13.073207 => 2024-07-18 19:03:13.118163
[0m19:03:13.119205 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m19:03:13.119682 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-07-18 19:03:13.119568 => 2024-07-18 19:03:13.119587
[0m19:03:13.120841 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m19:03:13.121303 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m19:03:13.122498 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m19:03:13.123351 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m19:03:13.124468 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.125026 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m19:03:13.128223 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.132850 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m19:03:13.139403 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.141645 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m19:03:13.142494 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.146069 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.147577 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-07-18 19:03:13.113372 => 2024-07-18 19:03:13.147348
[0m19:03:13.148231 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m19:03:13.148738 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-07-18 19:03:13.148584 => 2024-07-18 19:03:13.148605
[0m19:03:13.149842 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m19:03:13.150313 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m19:03:13.150935 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m19:03:13.152042 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.152805 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m19:03:13.156939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appsflyer_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.157516 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m19:03:13.164666 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m19:03:13.165546 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.171356 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.173707 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.177015 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.178595 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.185110 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m19:03:13.185944 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.189841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.191063 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-07-18 19:03:13.128699 => 2024-07-18 19:03:13.190959
[0m19:03:13.191443 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m19:03:13.192020 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-07-18 19:03:13.191909 => 2024-07-18 19:03:13.191932
[0m19:03:13.193132 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m19:03:13.193953 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m19:03:13.194697 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m19:03:13.195089 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m19:03:13.195943 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m19:03:13.196759 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.228152 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.253060 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m19:03:13.254165 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:13.258229 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m19:03:13.258859 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-07-18 19:03:13.158768 => 2024-07-18 19:03:13.258768
[0m19:03:13.259217 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-07-18 19:03:13.197033 => 2024-07-18 19:03:13.259095
[0m19:03:13.259595 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m19:03:13.260202 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m19:03:13.261067 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-07-18 19:03:13.260903 => 2024-07-18 19:03:13.260933
[0m19:03:13.261497 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-07-18 19:03:13.261397 => 2024-07-18 19:03:13.261413
[0m19:03:13.262632 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m19:03:13.263791 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m19:03:13.264354 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m19:03:13.264717 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m19:03:13.265863 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m19:03:13.266827 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m19:03:13.267338 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m19:03:13.267782 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m19:03:13.268242 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m19:03:13.268495 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m19:03:13.274869 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m19:03:13.282005 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m19:03:13.282978 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-07-18 19:03:13.275232 => 2024-07-18 19:03:13.282886
[0m19:03:13.283330 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m19:03:13.283518 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-07-18 19:03:13.268687 => 2024-07-18 19:03:13.283445
[0m19:03:13.284263 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-07-18 19:03:13.284061 => 2024-07-18 19:03:13.284152
[0m19:03:13.284632 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m19:03:13.285348 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m19:03:13.285870 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-07-18 19:03:13.285736 => 2024-07-18 19:03:13.285761
[0m19:03:13.286388 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m19:03:13.287239 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m19:03:13.288341 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m19:03:13.289165 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m19:03:13.289499 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m19:03:13.291123 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m19:03:13.291602 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m19:03:13.291983 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m19:03:13.300710 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m19:03:13.301281 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m19:03:13.308906 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m19:03:13.309579 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-07-18 19:03:13.292257 => 2024-07-18 19:03:13.309440
[0m19:03:13.310263 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m19:03:13.310531 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-07-18 19:03:13.310464 => 2024-07-18 19:03:13.310477
[0m19:03:13.311183 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m19:03:13.311497 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-07-18 19:03:13.302164 => 2024-07-18 19:03:13.311394
[0m19:03:13.311928 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m19:03:13.312311 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m19:03:13.313090 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_appprofilematching'
[0m19:03:13.313739 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-07-18 19:03:13.313648 => 2024-07-18 19:03:13.313665
[0m19:03:13.314110 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_appprofilematching)
[0m19:03:13.315166 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m19:03:13.315494 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m19:03:13.315866 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m19:03:13.332079 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.333068 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m19:03:13.334130 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m19:03:13.334469 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m19:03:13.339873 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.341296 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.343208 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m19:03:13.343869 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (compile): 2024-07-18 19:03:13.316297 => 2024-07-18 19:03:13.343753
[0m19:03:13.344424 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m19:03:13.344720 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (execute): 2024-07-18 19:03:13.344646 => 2024-07-18 19:03:13.344659
[0m19:03:13.345339 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m19:03:13.345764 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m19:03:13.346404 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m19:03:13.347964 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.348509 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m19:03:13.351181 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m19:03:13.351608 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m19:03:13.356703 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.359685 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-07-18 19:03:13.334843 => 2024-07-18 19:03:13.359489
[0m19:03:13.360234 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m19:03:13.360460 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-07-18 19:03:13.360396 => 2024-07-18 19:03:13.360409
[0m19:03:13.360990 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m19:03:13.361491 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_events
[0m19:03:13.362716 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m19:03:13.363608 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.364030 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m19:03:13.366234 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m19:03:13.366741 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m19:03:13.372045 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.373522 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-07-18 19:03:13.351932 => 2024-07-18 19:03:13.373396
[0m19:03:13.373921 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m19:03:13.374130 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-07-18 19:03:13.374069 => 2024-07-18 19:03:13.374082
[0m19:03:13.374745 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m19:03:13.375188 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m19:03:13.376300 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m19:03:13.376638 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m19:03:13.377160 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m19:03:13.381817 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.383643 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.387582 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m19:03:13.388813 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.391046 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m19:03:13.391808 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-07-18 19:03:13.367227 => 2024-07-18 19:03:13.391644
[0m19:03:13.392345 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m19:03:13.392681 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-07-18 19:03:13.392602 => 2024-07-18 19:03:13.392622
[0m19:03:13.393346 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m19:03:13.393854 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m19:03:13.394422 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_periodstat'
[0m19:03:13.395006 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_periodstat)
[0m19:03:13.395344 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-07-18 19:03:13.377347 => 2024-07-18 19:03:13.395217
[0m19:03:13.396078 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_periodstat
[0m19:03:13.396494 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m19:03:13.418216 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-07-18 19:03:13.418032 => 2024-07-18 19:03:13.418070
[0m19:03:13.424872 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m19:03:13.430198 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m19:03:13.430982 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m19:03:13.433705 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m19:03:13.434102 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m19:03:13.434390 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m19:03:13.446591 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:13.445804 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m19:03:13.448023 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m19:03:13.450416 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-07-18 19:03:13.434492 => 2024-07-18 19:03:13.450293
[0m19:03:13.451398 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m19:03:13.451688 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-07-18 19:03:13.451623 => 2024-07-18 19:03:13.451635
[0m19:03:13.452226 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m19:03:13.452515 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m19:03:13.452968 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m19:03:13.453195 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m19:03:13.453412 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m19:03:13.459857 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m19:03:13.460832 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.464970 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m19:03:13.468271 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.469709 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m19:03:13.470386 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.473237 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m19:03:13.475966 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.477519 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m19:03:13.478276 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.480990 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m19:03:13.483096 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.484608 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m19:03:13.486223 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.487783 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m19:03:13.489292 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.490896 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m19:03:13.493075 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.494996 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m19:03:13.497084 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.498483 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m19:03:13.500252 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.501661 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m19:03:13.505614 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.507086 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m19:03:13.507863 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.510149 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m19:03:13.512306 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.514286 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m19:03:13.515058 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.517475 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m19:03:13.519113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.520488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m19:03:13.521993 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.525859 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.527429 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.529395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m19:03:13.531167 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.532988 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_periodstat"
[0m19:03:13.533549 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (compile): 2024-07-18 19:03:13.396727 => 2024-07-18 19:03:13.533449
[0m19:03:13.533847 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_periodstat
[0m19:03:13.534627 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.535204 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (execute): 2024-07-18 19:03:13.535078 => 2024-07-18 19:03:13.535100
[0m19:03:13.536995 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m19:03:13.537870 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m19:03:13.538651 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m19:03:13.539306 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m19:03:13.539883 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m19:03:13.540148 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m19:03:13.545137 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m19:03:13.545654 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-07-18 19:03:13.453552 => 2024-07-18 19:03:13.545524
[0m19:03:13.546330 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m19:03:13.546788 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-07-18 19:03:13.546674 => 2024-07-18 19:03:13.546693
[0m19:03:13.547259 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-07-18 19:03:13.540321 => 2024-07-18 19:03:13.547160
[0m19:03:13.548045 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m19:03:13.548485 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m19:03:13.549104 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-07-18 19:03:13.549035 => 2024-07-18 19:03:13.549047
[0m19:03:13.549657 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m19:03:13.550816 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m19:03:13.551897 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m19:03:13.552478 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m19:03:13.552718 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m19:03:13.557372 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m19:03:13.557993 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-07-18 19:03:13.552809 => 2024-07-18 19:03:13.557910
[0m19:03:13.558239 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m19:03:13.558418 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-07-18 19:03:13.558358 => 2024-07-18 19:03:13.558372
[0m19:03:13.558912 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m19:03:13.560776 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m19:03:13.561338 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m19:03:13.561542 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m19:03:13.561698 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m19:03:13.568067 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m19:03:13.568622 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-07-18 19:03:13.561789 => 2024-07-18 19:03:13.568549
[0m19:03:13.568836 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m19:03:13.568974 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-07-18 19:03:13.568933 => 2024-07-18 19:03:13.568944
[0m19:03:13.569483 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m19:03:13.570484 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m19:03:13.571068 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m19:03:13.571226 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m19:03:13.571363 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m19:03:13.576212 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m19:03:13.576680 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-07-18 19:03:13.571455 => 2024-07-18 19:03:13.576615
[0m19:03:13.576888 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m19:03:13.577053 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-07-18 19:03:13.577001 => 2024-07-18 19:03:13.577012
[0m19:03:13.577569 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m19:03:13.578328 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m19:03:13.579387 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m19:03:13.579581 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m19:03:13.579723 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m19:03:13.584704 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m19:03:13.585217 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-07-18 19:03:13.579818 => 2024-07-18 19:03:13.585148
[0m19:03:13.585396 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m19:03:13.585524 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-07-18 19:03:13.585485 => 2024-07-18 19:03:13.585495
[0m19:03:13.585965 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m19:03:13.587707 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_events
[0m19:03:13.588298 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m19:03:13.588492 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m19:03:13.588641 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m19:03:13.594313 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m19:03:13.598862 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.600113 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m19:03:13.604453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.606067 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m19:03:13.609967 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.611238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m19:03:13.615410 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.616749 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m19:03:13.621416 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.622716 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m19:03:13.626734 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.627967 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m19:03:13.632112 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.633684 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m19:03:13.638189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.639979 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m19:03:13.644386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.646378 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m19:03:13.650525 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.652849 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m19:03:13.653382 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-07-18 19:03:13.588740 => 2024-07-18 19:03:13.653303
[0m19:03:13.653594 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m19:03:13.653741 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-07-18 19:03:13.653698 => 2024-07-18 19:03:13.653709
[0m19:03:13.654281 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m19:03:13.655314 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m19:03:13.656061 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m19:03:13.656532 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m19:03:13.656953 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m19:03:13.657494 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m19:03:13.657812 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m19:03:13.658098 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m19:03:13.666919 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m19:03:13.667554 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m19:03:13.671601 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m19:03:13.672203 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-07-18 19:03:13.668105 => 2024-07-18 19:03:13.672107
[0m19:03:13.672539 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m19:03:13.672756 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-07-18 19:03:13.672692 => 2024-07-18 19:03:13.672705
[0m19:03:13.673333 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m19:03:13.674391 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-07-18 19:03:13.658370 => 2024-07-18 19:03:13.674264
[0m19:03:13.674956 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m19:03:13.675239 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m19:03:13.675525 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-07-18 19:03:13.675460 => 2024-07-18 19:03:13.675473
[0m19:03:13.676041 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m19:03:13.676971 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m19:03:13.677333 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m19:03:13.678396 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m19:03:13.678750 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m19:03:13.679390 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m19:03:13.689543 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m19:03:13.690068 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m19:03:13.690814 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m19:03:13.696970 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m19:03:13.697704 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-07-18 19:03:13.679692 => 2024-07-18 19:03:13.697526
[0m19:03:13.698229 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m19:03:13.698538 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-07-18 19:03:13.698454 => 2024-07-18 19:03:13.698468
[0m19:03:13.699168 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m19:03:13.699912 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-07-18 19:03:13.691096 => 2024-07-18 19:03:13.699786
[0m19:03:13.700682 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m19:03:13.701327 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m19:03:13.702141 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m19:03:13.702595 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-07-18 19:03:13.702475 => 2024-07-18 19:03:13.702497
[0m19:03:13.702906 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m19:03:13.703592 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m19:03:13.704072 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m19:03:13.710062 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m19:03:13.711081 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m19:03:13.711436 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-07-18 19:03:13.705023 => 2024-07-18 19:03:13.711355
[0m19:03:13.711997 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m19:03:13.712317 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m19:03:13.712534 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m19:03:13.712796 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-07-18 19:03:13.712727 => 2024-07-18 19:03:13.712741
[0m19:03:13.713045 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m19:03:13.713780 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m19:03:13.718198 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m19:03:13.719855 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m19:03:13.720210 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-07-18 19:03:13.714304 => 2024-07-18 19:03:13.720126
[0m19:03:13.721044 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m19:03:13.721381 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m19:03:13.721615 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m19:03:13.721921 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-07-18 19:03:13.721832 => 2024-07-18 19:03:13.721849
[0m19:03:13.722247 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m19:03:13.722887 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m19:03:13.732844 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m19:03:13.734386 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m19:03:13.735678 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m19:03:13.736313 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m19:03:13.736803 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-07-18 19:03:13.723134 => 2024-07-18 19:03:13.736677
[0m19:03:13.737207 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m19:03:13.737641 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m19:03:13.804733 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-07-18 19:03:13.804540 => 2024-07-18 19:03:13.804572
[0m19:03:13.807542 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m19:03:13.808916 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m19:03:13.810530 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-07-18 19:03:13.737942 => 2024-07-18 19:03:13.810411
[0m19:03:13.810997 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m19:03:13.811285 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m19:03:13.811837 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m19:03:13.812137 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-07-18 19:03:13.812066 => 2024-07-18 19:03:13.812080
[0m19:03:13.812352 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m19:03:13.812917 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m19:03:13.813228 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m19:03:13.818749 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m19:03:13.819295 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m19:03:13.820304 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m19:03:13.820549 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m19:03:13.820787 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m19:03:13.824166 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m19:03:13.824609 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-07-18 19:03:13.814007 => 2024-07-18 19:03:13.824520
[0m19:03:13.825047 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m19:03:13.825324 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-07-18 19:03:13.825243 => 2024-07-18 19:03:13.825257
[0m19:03:13.825539 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-07-18 19:03:13.820944 => 2024-07-18 19:03:13.825475
[0m19:03:13.826287 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m19:03:13.827070 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m19:03:13.828606 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-07-18 19:03:13.828492 => 2024-07-18 19:03:13.828509
[0m19:03:13.829306 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m19:03:13.829884 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m19:03:13.831072 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m19:03:13.831387 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m19:03:13.831612 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m19:03:13.837487 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m19:03:13.838039 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m19:03:13.839556 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m19:03:13.839934 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m19:03:13.840224 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m19:03:13.843695 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m19:03:13.844188 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-07-18 19:03:13.831756 => 2024-07-18 19:03:13.844093
[0m19:03:13.844644 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m19:03:13.844940 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-07-18 19:03:13.844856 => 2024-07-18 19:03:13.844871
[0m19:03:13.845189 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-07-18 19:03:13.840494 => 2024-07-18 19:03:13.845119
[0m19:03:13.846408 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m19:03:13.847070 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m19:03:13.847793 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-07-18 19:03:13.847695 => 2024-07-18 19:03:13.847710
[0m19:03:13.848468 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m19:03:13.849063 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m19:03:13.850178 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m19:03:13.850718 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m19:03:13.851028 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m19:03:13.856574 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m19:03:13.865917 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m19:03:13.866876 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m19:03:13.867512 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m19:03:13.867865 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m19:03:13.874125 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m19:03:13.874607 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-18 19:03:13.851194 => 2024-07-18 19:03:13.874523
[0m19:03:13.875350 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m19:03:13.876020 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-18 19:03:13.875848 => 2024-07-18 19:03:13.875869
[0m19:03:13.876491 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-18 19:03:13.868048 => 2024-07-18 19:03:13.876349
[0m19:03:13.877458 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m19:03:13.877876 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m19:03:13.878686 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-18 19:03:13.878540 => 2024-07-18 19:03:13.878566
[0m19:03:13.879772 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m19:03:13.880303 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m19:03:13.881405 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m19:03:13.882064 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m19:03:13.882712 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m19:03:13.883188 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m19:03:13.883673 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m19:03:13.884224 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m19:03:13.884551 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m19:03:13.904330 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m19:03:13.913991 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m19:03:13.914810 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-07-18 19:03:13.895980 => 2024-07-18 19:03:13.914696
[0m19:03:13.915171 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-07-18 19:03:13.884783 => 2024-07-18 19:03:13.915082
[0m19:03:13.915490 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m19:03:13.915759 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m19:03:13.916171 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-07-18 19:03:13.916053 => 2024-07-18 19:03:13.916075
[0m19:03:13.916777 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-07-18 19:03:13.916674 => 2024-07-18 19:03:13.916690
[0m19:03:13.917680 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m19:03:13.918528 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m19:03:13.920041 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m19:03:13.921593 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m19:03:13.921955 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m19:03:13.922214 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m19:03:13.922539 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m19:03:13.923205 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m19:03:13.928638 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m19:03:13.929140 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m19:03:13.929618 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m19:03:13.932916 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m19:03:13.933666 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-07-18 19:03:13.923468 => 2024-07-18 19:03:13.933516
[0m19:03:13.934260 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-07-18 19:03:13.929786 => 2024-07-18 19:03:13.934183
[0m19:03:13.934607 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m19:03:13.934896 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m19:03:13.935348 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-07-18 19:03:13.935237 => 2024-07-18 19:03:13.935259
[0m19:03:13.935787 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-07-18 19:03:13.935678 => 2024-07-18 19:03:13.935695
[0m19:03:13.936657 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m19:03:13.937322 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m19:03:13.938437 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m19:03:13.938952 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m19:03:13.939718 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m19:03:13.940315 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table2'
[0m19:03:13.940588 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m19:03:13.940849 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table2)
[0m19:03:13.941117 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m19:03:13.941346 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table2
[0m19:03:13.971831 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.972803 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.977695 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:13.981925 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.982819 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.988142 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:13.989721 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:13.998176 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m19:03:13.998993 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (compile): 2024-07-18 19:03:13.946764 => 2024-07-18 19:03:13.998857
[0m19:03:13.999373 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table2
[0m19:03:13.999539 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (execute): 2024-07-18 19:03:13.999483 => 2024-07-18 19:03:13.999496
[0m19:03:14.000183 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m19:03:14.002889 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:14.012226 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m19:03:14.012927 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-07-18 19:03:13.941535 => 2024-07-18 19:03:14.012834
[0m19:03:14.013225 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m19:03:14.013455 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-07-18 19:03:14.013384 => 2024-07-18 19:03:14.013395
[0m19:03:14.013968 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m19:03:14.015800 [debug] [MainThread]: Connection 'master' was properly closed.
[0m19:03:14.016052 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m19:03:14.016257 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m19:03:14.016361 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table2' was left open.
[0m19:03:14.016468 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table2: Close
[0m19:03:14.021022 [debug] [MainThread]: Command end result
[0m19:03:14.039985 [info ] [MainThread]: Done.
[0m19:03:14.040799 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f399005eb00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f397beafd90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f397beafcd0>]}
[0m19:03:14.041147 [debug] [MainThread]: Flushing usage events


============================== 2024-07-18 19:03:29.086417 | 8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9 ==============================
[0m19:03:29.086417 [info ] [MainThread]: Running with dbt=1.4.7
[0m19:03:29.087942 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m19:03:29.088112 [debug] [MainThread]: Tracking: tracking
[0m19:03:29.090924 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57ab7e9c60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57ab877940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57ab877f40>]}
[0m19:03:29.118254 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m19:03:29.174696 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m19:03:29.174987 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m19:03:29.184115 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57aabc1c00>]}
[0m19:03:29.208157 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57aab893c0>]}
[0m19:03:29.208568 [info ] [MainThread]: Found 95 models, 6 tests, 0 snapshots, 0 analyses, 546 macros, 0 operations, 26 seed files, 0 sources, 0 exposures, 0 metrics
[0m19:03:29.208918 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57aab89570>]}
[0m19:03:29.215675 [info ] [MainThread]: 
[0m19:03:29.217691 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m19:03:29.222282 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m19:03:29.232623 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:03:29.569516 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m19:03:29.573060 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:29.580261 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m19:03:29.580593 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m19:03:29.585150 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m19:03:29.593709 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.605445 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57aabc80a0>]}
[0m19:03:29.606163 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m19:03:29.606461 [info ] [MainThread]: 
[0m19:03:29.610945 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m19:03:29.611327 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m19:03:29.611826 [info ] [Thread-1 (]: 1 of 95 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m19:03:29.612616 [info ] [Thread-2 (]: 2 of 95 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m19:03:29.613853 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m19:03:29.614686 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m19:03:29.615133 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m19:03:29.615565 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m19:03:29.616014 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m19:03:29.674965 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m19:03:29.676438 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$')        
...
[0m19:03:29.685173 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.710668 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_cohorts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:29.717792 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.751838 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m19:03:29.752651 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-07-18 19:03:29.632507 => 2024-07-18 19:03:29.752491
[0m19:03:29.753050 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m19:03:29.789328 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m19:03:29.791299 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'period') AS period, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_cohorts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
)

)
  )...
[0m19:03:29.800406 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$')        
...
[0m19:03:29.806353 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.812562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m19:03:29.814080 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.817633 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:29.819544 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.821658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m19:03:29.823120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:29.832149 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m19:03:29.832968 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.833756 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-07-18 19:03:29.616354 => 2024-07-18 19:03:29.833630
[0m19:03:29.837742 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m19:03:29.838538 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m19:03:29.844689 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m19:03:29.845687 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.847182 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m19:03:29.848248 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
)

)
  )...
[0m19:03:29.851450 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:29.864171 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:29.872745 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m19:03:29.882832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m19:03:29.886280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.888688 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m19:03:29.889679 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.892440 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-07-18 19:03:29.753201 => 2024-07-18 19:03:29.892353
[0m19:03:29.893593 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579707bd60>]}
[0m19:03:29.894229 [info ] [Thread-1 (]: 1 of 95 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.28s]
[0m19:03:29.895115 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.896708 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m19:03:29.900060 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m19:03:29.900994 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m19:03:29.903389 [info ] [Thread-1 (]: 3 of 95 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m19:03:29.904903 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m19:03:29.905920 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:29.906220 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m19:03:29.907528 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m19:03:29.908077 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m19:03:29.915335 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$')        
...
[0m19:03:29.917263 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.922104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m19:03:29.923946 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.927830 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_network'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:29.929181 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.930786 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-07-18 19:03:29.840191 => 2024-07-18 19:03:29.930713
[0m19:03:29.931712 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579709c0d0>]}
[0m19:03:29.932791 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:29.932220 [info ] [Thread-2 (]: 2 of 95 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.32s]
[0m19:03:29.945295 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m19:03:29.945975 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m19:03:29.946776 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m19:03:29.947646 [info ] [Thread-2 (]: 4 of 95 START sql view model test.normalize_adjust_registry_default_events ..... [RUN]
[0m19:03:29.948698 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-07-18 19:03:29.909616 => 2024-07-18 19:03:29.948533
[0m19:03:29.949649 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_registry_default_events'
[0m19:03:29.950293 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m19:03:29.950789 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_registry_default_events)
[0m19:03:29.956329 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m19:03:29.957229 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m19:03:29.963221 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$')        
...
[0m19:03:29.964531 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'installs') AS installs, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
        JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_network') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_adjust_default_accountid_network
)

)
  )...
[0m19:03:29.969877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.974430 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:29.976542 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.980478 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m19:03:29.981246 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.988902 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:29.993978 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m19:03:29.995555 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m19:03:29.997265 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (compile): 2024-07-18 19:03:29.958177 => 2024-07-18 19:03:29.997120
[0m19:03:29.997824 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m19:03:30.002599 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m19:03:30.003418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.006659 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m19:03:30.007688 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


  create view test.normalize_adjust_registry_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
        JSONExtractString(_airbyte_data, 'description') AS description, 
        JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'section') AS section, 
        JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
        JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_adjust_default_accountid_events
)

)
  )...
[0m19:03:30.010923 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.012168 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m19:03:30.015707 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.019639 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m19:03:30.020541 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.025946 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m19:03:30.027123 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.028545 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-07-18 19:03:29.951277 => 2024-07-18 19:03:30.028485
[0m19:03:30.029248 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.030159 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794fbd0f0>]}
[0m19:03:30.031303 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events to test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m19:03:30.032150 [info ] [Thread-1 (]: 3 of 95 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.13s]
[0m19:03:30.034394 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m19:03:30.035020 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m19:03:30.035520 [info ] [Thread-1 (]: 5 of 95 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m19:03:30.036643 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m19:03:30.037108 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m19:03:30.037462 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m19:03:30.038045 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.043242 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$')        
...
[0m19:03:30.047731 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events 
  
  ...
[0m19:03:30.054270 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.055604 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events__dbt_tmp to test.normalize_adjust_registry_default_events 
  
  ...
[0m19:03:30.056818 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.062875 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.065180 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.069115 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */
drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  ...
[0m19:03:30.069798 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.077275 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.084569 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (execute): 2024-07-18 19:03:29.997986 => 2024-07-18 19:03:30.084504
[0m19:03:30.087482 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m19:03:30.088886 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794f8b790>]}
[0m19:03:30.090354 [info ] [Thread-2 (]: 4 of 95 OK created sql view model test.normalize_adjust_registry_default_events  [[32mOK[0m in 0.14s]
[0m19:03:30.091079 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m19:03:30.092609 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m19:03:30.094138 [info ] [Thread-2 (]: 6 of 95 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m19:03:30.094768 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-07-18 19:03:30.038571 => 2024-07-18 19:03:30.094583
[0m19:03:30.096105 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m19:03:30.096889 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m19:03:30.097289 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m19:03:30.102166 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m19:03:30.102760 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m19:03:30.107467 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m19:03:30.109052 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
)

)
  )...
[0m19:03:30.116081 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.120837 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.122424 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.126403 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m19:03:30.130498 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.131130 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.132137 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m19:03:30.148023 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m19:03:30.149106 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.152383 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m19:03:30.153737 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-07-18 19:03:30.103153 => 2024-07-18 19:03:30.153509
[0m19:03:30.154369 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m19:03:30.159792 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m19:03:30.160614 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.161946 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m19:03:30.162931 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name != 'screen_view'
  )...
[0m19:03:30.166591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.171002 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m19:03:30.174625 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.175341 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.178870 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m19:03:30.181048 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-07-18 19:03:30.097586 => 2024-07-18 19:03:30.180977
[0m19:03:30.182888 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579707a5f0>]}
[0m19:03:30.183606 [info ] [Thread-1 (]: 5 of 95 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.15s]
[0m19:03:30.184119 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m19:03:30.185015 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m19:03:30.186342 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.187178 [info ] [Thread-1 (]: 7 of 95 START sql view model test.normalize_appmetrica_events_default_installations  [RUN]
[0m19:03:30.188823 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m19:03:30.189512 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations'
[0m19:03:30.190332 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations)
[0m19:03:30.190996 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m19:03:30.258564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m19:03:30.262936 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$')        
...
[0m19:03:30.266856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m19:03:30.272636 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.273880 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m19:03:30.275068 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.278681 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_installations'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.279579 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.284926 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m19:03:30.286648 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.299378 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.301801 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m19:03:30.303677 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-07-18 19:03:30.154702 => 2024-07-18 19:03:30.303604
[0m19:03:30.304583 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e7e4d0>]}
[0m19:03:30.305317 [info ] [Thread-2 (]: 6 of 95 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.21s]
[0m19:03:30.305982 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m19:03:30.306449 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (compile): 2024-07-18 19:03:30.191349 => 2024-07-18 19:03:30.306339
[0m19:03:30.306925 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m19:03:30.307978 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m19:03:30.308880 [info ] [Thread-2 (]: 8 of 95 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m19:03:30.313815 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m19:03:30.314578 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m19:03:30.315132 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m19:03:30.315360 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m19:03:30.320582 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m19:03:30.322269 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


  create view test.normalize_appmetrica_events_default_installations__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
        JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS install_receive_datetime, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_installations') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
)

)
  )...
[0m19:03:30.328209 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.333489 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.335591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.338619 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m19:03:30.340220 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.348314 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.355153 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations to test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m19:03:30.359994 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m19:03:30.361850 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-07-18 19:03:30.315516 => 2024-07-18 19:03:30.361721
[0m19:03:30.362189 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m19:03:30.366573 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m19:03:30.367436 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.370694 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations 
  
  ...
[0m19:03:30.372300 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_receive_datetime) AS event_receive_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_receive_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m19:03:30.374189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.375932 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations__dbt_tmp to test.normalize_appmetrica_events_default_installations 
  
  ...
[0m19:03:30.379632 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.385079 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */
drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  ...
[0m19:03:30.388920 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.389663 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:30.391177 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (execute): 2024-07-18 19:03:30.309417 => 2024-07-18 19:03:30.391118
[0m19:03:30.394583 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m19:03:30.395689 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794dbd7b0>]}
[0m19:03:30.396852 [info ] [Thread-1 (]: 7 of 95 OK created sql view model test.normalize_appmetrica_events_default_installations  [[32mOK[0m in 0.21s]
[0m19:03:30.397462 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m19:03:30.398091 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m19:03:30.398783 [info ] [Thread-1 (]: 9 of 95 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m19:03:30.399627 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.400830 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m19:03:30.401963 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m19:03:30.402397 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m19:03:30.404060 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m19:03:30.408995 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m19:03:30.410060 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.414937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m19:03:30.417345 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.421354 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.423217 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.425183 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m19:03:30.426908 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.438282 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m19:03:30.439248 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.444275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m19:03:30.446155 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-07-18 19:03:30.404502 => 2024-07-18 19:03:30.445979
[0m19:03:30.446756 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m19:03:30.452718 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m19:03:30.453623 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.455480 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-07-18 19:03:30.362313 => 2024-07-18 19:03:30.455416
[0m19:03:30.456424 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d9f7f0>]}
[0m19:03:30.457150 [info ] [Thread-2 (]: 8 of 95 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.14s]
[0m19:03:30.458136 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS session_start_receive_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
)

)
  )...
[0m19:03:30.458809 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m19:03:30.460547 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m19:03:30.461267 [info ] [Thread-2 (]: 10 of 95 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m19:03:30.462453 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m19:03:30.463857 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m19:03:30.464209 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m19:03:30.468517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m19:03:30.471940 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.476376 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m19:03:30.477558 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.482256 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.485285 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.486569 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m19:03:30.487980 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.494989 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m19:03:30.495880 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.498909 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m19:03:30.501002 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-07-18 19:03:30.464333 => 2024-07-18 19:03:30.500834
[0m19:03:30.501523 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m19:03:30.508003 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m19:03:30.509077 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.510443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m19:03:30.512016 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
)

)
  )...
[0m19:03:30.514133 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.518537 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m19:03:30.521814 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.523068 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.526640 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m19:03:30.528442 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-07-18 19:03:30.447055 => 2024-07-18 19:03:30.528376
[0m19:03:30.529966 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579709f8e0>]}
[0m19:03:30.530998 [info ] [Thread-1 (]: 9 of 95 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.13s]
[0m19:03:30.532038 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.532584 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m19:03:30.534985 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m19:03:30.535798 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m19:03:30.538669 [info ] [Thread-1 (]: 11 of 95 START sql view model test.normalize_appsflyer_events_default_in_app_events  [RUN]
[0m19:03:30.539972 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events'
[0m19:03:30.540900 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.541212 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events)
[0m19:03:30.544821 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m19:03:30.545525 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m19:03:30.553735 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appsflyer_default_[^_]+_in_app_events$')        
...
[0m19:03:30.554387 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.557400 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m19:03:30.561194 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.565508 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m19:03:30.566457 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.572831 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appsflyer_default_accountid_in_app_events'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.573986 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.577602 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-07-18 19:03:30.501780 => 2024-07-18 19:03:30.577485
[0m19:03:30.579192 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d9f400>]}
[0m19:03:30.580007 [info ] [Thread-2 (]: 10 of 95 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.12s]
[0m19:03:30.580398 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m19:03:30.580770 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m19:03:30.581557 [info ] [Thread-2 (]: 12 of 95 START sql view model test.normalize_calltouch_events_default_calls .... [RUN]
[0m19:03:30.582679 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.583401 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m19:03:30.599788 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m19:03:30.605486 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m19:03:30.624864 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m19:03:30.670297 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:30.701515 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.706034 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"
[0m19:03:30.708141 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events (compile): 2024-07-18 19:03:30.546445 => 2024-07-18 19:03:30.707951
[0m19:03:30.708688 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m19:03:30.714170 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"
[0m19:03:30.715114 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.731417 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */


  create view test.normalize_appsflyer_events_default_in_app_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_time') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_unit') AS ad_unit, 
        JSONExtractString(_airbyte_data, 'advertising_id') AS advertising_id, 
        JSONExtractString(_airbyte_data, 'af_ad') AS af_ad, 
        JSONExtractString(_airbyte_data, 'af_ad_id') AS af_ad_id, 
        JSONExtractString(_airbyte_data, 'af_ad_type') AS af_ad_type, 
        JSONExtractString(_airbyte_data, 'af_adset') AS af_adset, 
        JSONExtractString(_airbyte_data, 'af_adset_id') AS af_adset_id, 
        JSONExtractString(_airbyte_data, 'af_attribution_lookback') AS af_attribution_lookback, 
        JSONExtractString(_airbyte_data, 'af_c_id') AS af_c_id, 
        JSONExtractString(_airbyte_data, 'af_channel') AS af_channel, 
        JSONExtractString(_airbyte_data, 'af_cost_currency') AS af_cost_currency, 
        JSONExtractString(_airbyte_data, 'af_cost_model') AS af_cost_model, 
        JSONExtractString(_airbyte_data, 'af_cost_value') AS af_cost_value, 
        JSONExtractString(_airbyte_data, 'af_keywords') AS af_keywords, 
        JSONExtractString(_airbyte_data, 'af_prt') AS af_prt, 
        JSONExtractString(_airbyte_data, 'af_reengagement_window') AS af_reengagement_window, 
        JSONExtractString(_airbyte_data, 'af_siteid') AS af_siteid, 
        JSONExtractString(_airbyte_data, 'af_sub1') AS af_sub1, 
        JSONExtractString(_airbyte_data, 'af_sub2') AS af_sub2, 
        JSONExtractString(_airbyte_data, 'af_sub3') AS af_sub3, 
        JSONExtractString(_airbyte_data, 'af_sub4') AS af_sub4, 
        JSONExtractString(_airbyte_data, 'af_sub5') AS af_sub5, 
        JSONExtractString(_airbyte_data, 'af_sub_siteid') AS af_sub_siteid, 
        JSONExtractString(_airbyte_data, 'amazon_aid') AS amazon_aid, 
        JSONExtractString(_airbyte_data, 'android_id') AS android_id, 
        JSONExtractString(_airbyte_data, 'app_id') AS app_id, 
        JSONExtractString(_airbyte_data, 'app_name') AS app_name, 
        JSONExtractString(_airbyte_data, 'app_type') AS app_type, 
        JSONExtractString(_airbyte_data, 'app_version') AS app_version, 
        JSONExtractString(_airbyte_data, 'appsflyer_id') AS appsflyer_id, 
        JSONExtractString(_airbyte_data, 'att') AS att, 
        JSONExtractString(_airbyte_data, 'attributed_touch_time') AS attributed_touch_time, 
        JSONExtractString(_airbyte_data, 'attributed_touch_type') AS attributed_touch_type, 
        JSONExtractString(_airbyte_data, 'blocked_reason') AS blocked_reason, 
        JSONExtractString(_airbyte_data, 'blocked_reason_rule') AS blocked_reason_rule, 
        JSONExtractString(_airbyte_data, 'blocked_reason_value') AS blocked_reason_value, 
        JSONExtractString(_airbyte_data, 'blocked_sub_reason') AS blocked_sub_reason, 
        JSONExtractString(_airbyte_data, 'bundle_id') AS bundle_id, 
        JSONExtractString(_airbyte_data, 'campaign') AS campaign, 
        JSONExtractString(_airbyte_data, 'campaign_type') AS campaign_type, 
        JSONExtractString(_airbyte_data, 'carrier') AS carrier, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'contributor1_af_prt') AS contributor1_af_prt, 
        JSONExtractString(_airbyte_data, 'contributor1_campaign') AS contributor1_campaign, 
        JSONExtractString(_airbyte_data, 'contributor1_match_type') AS contributor1_match_type, 
        JSONExtractString(_airbyte_data, 'contributor1_media_source') AS contributor1_media_source, 
        JSONExtractString(_airbyte_data, 'contributor1_touch_time') AS contributor1_touch_time, 
        JSONExtractString(_airbyte_data, 'contributor1_touch_type') AS contributor1_touch_type, 
        JSONExtractString(_airbyte_data, 'contributor2_af_prt') AS contributor2_af_prt, 
        JSONExtractString(_airbyte_data, 'contributor2_campaign') AS contributor2_campaign, 
        JSONExtractString(_airbyte_data, 'contributor2_match_type') AS contributor2_match_type, 
        JSONExtractString(_airbyte_data, 'contributor2_media_source') AS contributor2_media_source, 
        JSONExtractString(_airbyte_data, 'contributor2_touch_time') AS contributor2_touch_time, 
        JSONExtractString(_airbyte_data, 'contributor2_touch_type') AS contributor2_touch_type, 
        JSONExtractString(_airbyte_data, 'contributor3_af_prt') AS contributor3_af_prt, 
        JSONExtractString(_airbyte_data, 'contributor3_campaign') AS contributor3_campaign, 
        JSONExtractString(_airbyte_data, 'contributor3_match_type') AS contributor3_match_type, 
        JSONExtractString(_airbyte_data, 'contributor3_media_source') AS contributor3_media_source, 
        JSONExtractString(_airbyte_data, 'contributor3_touch_time') AS contributor3_touch_time, 
        JSONExtractString(_airbyte_data, 'contributor3_touch_type') AS contributor3_touch_type, 
        JSONExtractString(_airbyte_data, 'conversion_type') AS conversion_type, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'custom_data') AS custom_data, 
        JSONExtractString(_airbyte_data, 'customer_user_id') AS customer_user_id, 
        JSONExtractString(_airbyte_data, 'deeplink_url') AS deeplink_url, 
        JSONExtractString(_airbyte_data, 'device_category') AS device_category, 
        JSONExtractString(_airbyte_data, 'device_download_time') AS device_download_time, 
        JSONExtractString(_airbyte_data, 'device_model') AS device_model, 
        JSONExtractString(_airbyte_data, 'device_type') AS device_type, 
        JSONExtractString(_airbyte_data, 'dma') AS dma, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_revenue') AS event_revenue, 
        JSONExtractString(_airbyte_data, 'event_revenue_currency') AS event_revenue_currency, 
        JSONExtractString(_airbyte_data, 'event_revenue_usd') AS event_revenue_usd, 
        JSONExtractString(_airbyte_data, 'event_source') AS event_source, 
        JSONExtractString(_airbyte_data, 'event_time') AS event_time, 
        JSONExtractString(_airbyte_data, 'event_value') AS event_value, 
        JSONExtractString(_airbyte_data, 'gp_broadcast_referrer') AS gp_broadcast_referrer, 
        JSONExtractString(_airbyte_data, 'gp_click_time') AS gp_click_time, 
        JSONExtractString(_airbyte_data, 'gp_install_begin') AS gp_install_begin, 
        JSONExtractString(_airbyte_data, 'gp_referrer') AS gp_referrer, 
        JSONExtractString(_airbyte_data, 'http_referrer') AS http_referrer, 
        JSONExtractString(_airbyte_data, 'idfa') AS idfa, 
        JSONExtractString(_airbyte_data, 'idfv') AS idfv, 
        JSONExtractString(_airbyte_data, 'imei') AS imei, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'install_app_store') AS install_app_store, 
        JSONExtractString(_airbyte_data, 'install_time') AS install_time, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'is_lat') AS is_lat, 
        JSONExtractString(_airbyte_data, 'is_primary_attribution') AS is_primary_attribution, 
        JSONExtractString(_airbyte_data, 'is_receipt_validated') AS is_receipt_validated, 
        JSONExtractString(_airbyte_data, 'is_retargeting') AS is_retargeting, 
        JSONExtractString(_airbyte_data, 'keyword_id') AS keyword_id, 
        JSONExtractString(_airbyte_data, 'keyword_match_type') AS keyword_match_type, 
        JSONExtractString(_airbyte_data, 'language') AS language, 
        JSONExtractString(_airbyte_data, 'match_type') AS match_type, 
        JSONExtractString(_airbyte_data, 'media_source') AS media_source, 
        JSONExtractString(_airbyte_data, 'mediation_network') AS mediation_network, 
        JSONExtractString(_airbyte_data, 'monetization_network') AS monetization_network, 
        JSONExtractString(_airbyte_data, 'network_account_id') AS network_account_id, 
        JSONExtractString(_airbyte_data, 'oaid') AS oaid, 
        JSONExtractString(_airbyte_data, 'operator') AS operator, 
        JSONExtractString(_airbyte_data, 'original_url') AS original_url, 
        JSONExtractString(_airbyte_data, 'os_version') AS os_version, 
        JSONExtractString(_airbyte_data, 'placement') AS placement, 
        JSONExtractString(_airbyte_data, 'platform') AS platform, 
        JSONExtractString(_airbyte_data, 'postal_code') AS postal_code, 
        JSONExtractString(_airbyte_data, 'region') AS region, 
        JSONExtractString(_airbyte_data, 'rejected_reason') AS rejected_reason, 
        JSONExtractString(_airbyte_data, 'rejected_reason_value') AS rejected_reason_value, 
        JSONExtractString(_airbyte_data, 'retargeting_conversion_type') AS retargeting_conversion_type, 
        JSONExtractString(_airbyte_data, 'sdk_version') AS sdk_version, 
        JSONExtractString(_airbyte_data, 'segment') AS segment, 
        JSONExtractString(_airbyte_data, 'state') AS state, 
        JSONExtractString(_airbyte_data, 'store_reinstall') AS store_reinstall, 
        JSONExtractString(_airbyte_data, 'user_agent') AS user_agent, 
        JSONExtractString(_airbyte_data, 'wifi') AS wifi,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_emitted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appsflyer_default_accountid_in_app_events') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_appsflyer_default_accountid_in_app_events
)

)
  )...
[0m19:03:30.772481 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m19:03:30.773164 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:30.776444 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    drop table if exists test.normalize_appsflyer_events_default_in_app_events__dbt_backup 
  
  ...
[0m19:03:30.777665 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-07-18 19:03:30.611051 => 2024-07-18 19:03:30.777526
[0m19:03:30.778196 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m19:03:30.782866 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m19:03:30.783905 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.785860 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    rename table test.normalize_appsflyer_events_default_in_app_events to test.normalize_appsflyer_events_default_in_app_events__dbt_backup 
  
  ...
[0m19:03:30.786975 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


  create view test.normalize_calltouch_events_default_calls__dbt_tmp 
  
  as (
    SELECT
        replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1') AS __date, 
        JSONExtractString(_airbyte_data, 'additionalTags') AS additionalTags, 
        JSONExtractString(_airbyte_data, 'attribution') AS attribution, 
        JSONExtractString(_airbyte_data, 'attrs') AS attrs, 
        JSONExtractString(_airbyte_data, 'browser') AS browser, 
        JSONExtractString(_airbyte_data, 'callbackCall') AS callbackCall, 
        JSONExtractString(_airbyte_data, 'callbackInfo') AS callbackInfo, 
        JSONExtractString(_airbyte_data, 'callClientUniqueId') AS callClientUniqueId, 
        JSONExtractString(_airbyte_data, 'callerNumber') AS callerNumber, 
        JSONExtractString(_airbyte_data, 'callId') AS callId, 
        JSONExtractString(_airbyte_data, 'callphase') AS callphase, 
        JSONExtractString(_airbyte_data, 'callReferenceId') AS callReferenceId, 
        JSONExtractString(_airbyte_data, 'callUrl') AS callUrl, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'clientId') AS clientId, 
        JSONExtractString(_airbyte_data, 'ctCallerId') AS ctCallerId, 
        JSONExtractString(_airbyte_data, 'ctClientId') AS ctClientId, 
        JSONExtractString(_airbyte_data, 'ctGlobalId') AS ctGlobalId, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'dcm') AS dcm, 
        JSONExtractString(_airbyte_data, 'device') AS device, 
        JSONExtractString(_airbyte_data, 'duration') AS duration, 
        JSONExtractString(_airbyte_data, 'googleAdWords') AS googleAdWords, 
        JSONExtractString(_airbyte_data, 'hostname') AS hostname, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'keyword') AS keyword, 
        JSONExtractString(_airbyte_data, 'manager') AS manager, 
        JSONExtractString(_airbyte_data, 'mapVisits') AS mapVisits, 
        JSONExtractString(_airbyte_data, 'medium') AS medium, 
        JSONExtractString(_airbyte_data, 'order') AS order, 
        JSONExtractString(_airbyte_data, 'orders') AS orders, 
        JSONExtractString(_airbyte_data, 'os') AS os, 
        JSONExtractString(_airbyte_data, 'phoneNumber') AS phoneNumber, 
        JSONExtractString(_airbyte_data, 'phonesInText') AS phonesInText, 
        JSONExtractString(_airbyte_data, 'phrases') AS phrases, 
        JSONExtractString(_airbyte_data, 'redirectNumber') AS redirectNumber, 
        JSONExtractString(_airbyte_data, 'ref') AS ref, 
        JSONExtractString(_airbyte_data, 'sessionDate') AS sessionDate, 
        JSONExtractString(_airbyte_data, 'sessionId') AS sessionId, 
        JSONExtractString(_airbyte_data, 'sipCallId') AS sipCallId, 
        JSONExtractString(_airbyte_data, 'siteId') AS siteId, 
        JSONExtractString(_airbyte_data, 'siteName') AS siteName, 
        JSONExtractString(_airbyte_data, 'source') AS source, 
        JSONExtractString(_airbyte_data, 'statusDetails') AS statusDetails, 
        JSONExtractString(_airbyte_data, 'subPoolName') AS subPoolName, 
        JSONExtractString(_airbyte_data, 'successful') AS successful, 
        JSONExtractString(_airbyte_data, 'targetCall') AS targetCall, 
        JSONExtractString(_airbyte_data, 'timestamp') AS timestamp, 
        JSONExtractString(_airbyte_data, 'uniqTargetCall') AS uniqTargetCall, 
        JSONExtractString(_airbyte_data, 'uniqueCall') AS uniqueCall, 
        JSONExtractString(_airbyte_data, 'url') AS url, 
        JSONExtractString(_airbyte_data, 'userAgent') AS userAgent, 
        JSONExtractString(_airbyte_data, 'utmCampaign') AS utmCampaign, 
        JSONExtractString(_airbyte_data, 'utmContent') AS utmContent, 
        JSONExtractString(_airbyte_data, 'utmMedium') AS utmMedium, 
        JSONExtractString(_airbyte_data, 'utmSource') AS utmSource, 
        JSONExtractString(_airbyte_data, 'utmTerm') AS utmTerm, 
        JSONExtractString(_airbyte_data, 'waitingConnect') AS waitingConnect, 
        JSONExtractString(_airbyte_data, 'yaClientId') AS yaClientId, 
        JSONExtractString(_airbyte_data, 'yandexDirect') AS yandexDirect,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at,
        toInt32("_airbyte_loaded_at") AS _airbyte_loaded_at
FROM airbyte_internal.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
)

)
  )...
[0m19:03:30.789278 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.792425 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    drop table if exists test.normalize_appsflyer_events_default_in_app_events 
  
  ...
[0m19:03:30.795712 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.796997 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */

    rename table test.normalize_appsflyer_events_default_in_app_events__dbt_tmp to test.normalize_appsflyer_events_default_in_app_events 
  
  ...
[0m19:03:30.800180 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.804762 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events"} */
drop table if exists test.normalize_appsflyer_events_default_in_app_events__dbt_backup 
  ...
[0m19:03:30.805517 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:30.809586 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m19:03:30.810315 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.813093 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events (execute): 2024-07-18 19:03:30.708962 => 2024-07-18 19:03:30.813011
[0m19:03:30.813953 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.815127 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579707a740>]}
[0m19:03:30.816754 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls to test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m19:03:30.817585 [info ] [Thread-1 (]: 11 of 95 OK created sql view model test.normalize_appsflyer_events_default_in_app_events  [[32mOK[0m in 0.28s]
[0m19:03:30.818860 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appsflyer_events_default_in_app_events
[0m19:03:30.819364 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m19:03:30.819964 [info ] [Thread-1 (]: 13 of 95 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m19:03:30.821205 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m19:03:30.822387 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m19:03:30.822895 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.823330 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m19:03:30.826998 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls 
  
  ...
[0m19:03:30.831562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m19:03:30.835548 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.836771 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls__dbt_tmp to test.normalize_calltouch_events_default_calls 
  
  ...
[0m19:03:30.840330 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.845104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */
drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  ...
[0m19:03:30.846164 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.851524 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.852452 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.855425 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-07-18 19:03:30.778533 => 2024-07-18 19:03:30.855316
[0m19:03:30.856162 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d9f6d0>]}
[0m19:03:30.856843 [info ] [Thread-2 (]: 12 of 95 OK created sql view model test.normalize_calltouch_events_default_calls  [[32mOK[0m in 0.27s]
[0m19:03:30.857468 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m19:03:30.857843 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m19:03:30.859101 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.860135 [info ] [Thread-2 (]: 14 of 95 START sql view model test.normalize_mt_registry_default_banners ....... [RUN]
[0m19:03:30.870194 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m19:03:30.871087 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m19:03:30.871779 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m19:03:30.872095 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m19:03:30.876879 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m19:03:30.878268 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-07-18 19:03:30.827511 => 2024-07-18 19:03:30.878133
[0m19:03:30.878958 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m19:03:30.883875 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m19:03:30.884400 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
)

)
  )...
[0m19:03:30.886813 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.891332 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.895745 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.898601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m19:03:30.899436 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.906632 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.908687 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m19:03:30.910094 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m19:03:30.912014 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-07-18 19:03:30.872339 => 2024-07-18 19:03:30.911844
[0m19:03:30.912510 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m19:03:30.917260 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m19:03:30.918163 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.923171 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m19:03:30.924784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


  create view test.normalize_mt_registry_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
        JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_mt_default_accountid_banners
)

)
  )...
[0m19:03:30.926641 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.928277 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m19:03:30.931440 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.935505 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m19:03:30.936147 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.941261 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m19:03:30.942605 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.944530 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-07-18 19:03:30.879246 => 2024-07-18 19:03:30.944446
[0m19:03:30.945214 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.945849 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579707a500>]}
[0m19:03:30.947170 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners to test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m19:03:30.947725 [info ] [Thread-1 (]: 13 of 95 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.13s]
[0m19:03:30.949668 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m19:03:30.950442 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m19:03:30.951777 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.955895 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners 
  
  ...
[0m19:03:30.952183 [info ] [Thread-1 (]: 15 of 95 START sql view model test.normalize_mt_registry_default_campaigns ..... [RUN]
[0m19:03:30.957907 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m19:03:30.958304 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m19:03:30.958625 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m19:03:30.962834 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m19:03:30.964528 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.966039 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners__dbt_tmp to test.normalize_mt_registry_default_banners 
  
  ...
[0m19:03:30.969559 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:30.974229 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */
drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  ...
[0m19:03:30.975252 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.981872 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:30.982612 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.985167 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (execute): 2024-07-18 19:03:30.912709 => 2024-07-18 19:03:30.985097
[0m19:03:30.986548 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d9f040>]}
[0m19:03:30.987021 [info ] [Thread-2 (]: 14 of 95 OK created sql view model test.normalize_mt_registry_default_banners .. [[32mOK[0m in 0.12s]
[0m19:03:30.987385 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m19:03:30.987699 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m19:03:30.988213 [info ] [Thread-2 (]: 16 of 95 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m19:03:30.990008 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:30.990839 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m19:03:30.996122 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m19:03:30.996658 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m19:03:30.997363 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m19:03:31.001743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m19:03:31.003245 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-07-18 19:03:30.958834 => 2024-07-18 19:03:31.003038
[0m19:03:31.003916 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m19:03:31.009643 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m19:03:31.010423 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


  create view test.normalize_mt_registry_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_campaigns') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
)

)
  )...
[0m19:03:31.013225 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.016818 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:31.020783 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.021560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.024779 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m19:03:31.031749 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m19:03:31.034035 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-07-18 19:03:30.997764 => 2024-07-18 19:03:31.033868
[0m19:03:31.034654 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m19:03:31.040084 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m19:03:31.041343 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.044136 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns to test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m19:03:31.044541 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
        JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_sheets_default_accountid_planCosts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
)

)
  )...
[0m19:03:31.048328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.117306 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m19:03:31.120197 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns 
  
  ...
[0m19:03:31.123171 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m19:03:31.126645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.127787 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns__dbt_tmp to test.normalize_mt_registry_default_campaigns 
  
  ...
[0m19:03:31.128518 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.130695 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m19:03:31.133564 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.137488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */
drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  ...
[0m19:03:31.138995 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.142408 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m19:03:31.143478 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.146883 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (execute): 2024-07-18 19:03:31.004239 => 2024-07-18 19:03:31.146774
[0m19:03:31.147657 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794daa4d0>]}
[0m19:03:31.148288 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.150776 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m19:03:31.149389 [info ] [Thread-1 (]: 15 of 95 OK created sql view model test.normalize_mt_registry_default_campaigns  [[32mOK[0m in 0.19s]
[0m19:03:31.152427 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m19:03:31.152944 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m19:03:31.154877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.153723 [info ] [Thread-1 (]: 17 of 95 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m19:03:31.159019 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m19:03:31.160145 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m19:03:31.161133 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m19:03:31.161451 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m19:03:31.167147 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m19:03:31.169190 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.171477 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-07-18 19:03:31.034882 => 2024-07-18 19:03:31.171373
[0m19:03:31.172617 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ec4cd0>]}
[0m19:03:31.173422 [info ] [Thread-2 (]: 16 of 95 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.18s]
[0m19:03:31.174066 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m19:03:31.174422 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m19:03:31.174841 [info ] [Thread-2 (]: 18 of 95 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m19:03:31.176368 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m19:03:31.177731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.178090 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m19:03:31.181514 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:31.182038 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m19:03:31.188305 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m19:03:31.192462 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.201612 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m19:03:31.202564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.206205 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:31.208593 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-07-18 19:03:31.161699 => 2024-07-18 19:03:31.208348
[0m19:03:31.209262 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m19:03:31.214077 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m19:03:31.215052 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.227167 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
        JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
        JSONExtractString(_airbyte_data, 'data') AS data, 
        JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
        JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
        JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
)

)
  )...
[0m19:03:31.231102 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m19:03:31.232731 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-18 19:03:31.183392 => 2024-07-18 19:03:31.232610
[0m19:03:31.233107 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m19:03:31.239215 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m19:03:31.239827 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
        JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'moat') AS moat, 
        JSONExtractString(_airbyte_data, 'playable') AS playable, 
        JSONExtractString(_airbyte_data, 'romi') AS romi, 
        JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
        JSONExtractString(_airbyte_data, 'tps') AS tps, 
        JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
        JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
        JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
)

)
  )...
[0m19:03:31.243718 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.247097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m19:03:31.249254 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.252383 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m19:03:31.253020 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.255711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m19:03:31.257031 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.258470 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m19:03:31.259207 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.263851 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m19:03:31.265015 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.268555 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m19:03:31.270023 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.271339 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m19:03:31.274375 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.274947 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.276054 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m19:03:31.279752 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m19:03:31.284253 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.289226 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m19:03:31.290510 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.292267 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-07-18 19:03:31.209431 => 2024-07-18 19:03:31.292166
[0m19:03:31.293061 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.293794 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5795014ee0>]}
[0m19:03:31.295137 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-18 19:03:31.233316 => 2024-07-18 19:03:31.295079
[0m19:03:31.296177 [info ] [Thread-1 (]: 17 of 95 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.13s]
[0m19:03:31.297644 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57950159f0>]}
[0m19:03:31.298282 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m19:03:31.299395 [info ] [Thread-2 (]: 18 of 95 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.12s]
[0m19:03:31.300167 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m19:03:31.301172 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m19:03:31.301670 [info ] [Thread-1 (]: 19 of 95 START sql view model test.normalize_vkads_registry_default_ad_plans ... [RUN]
[0m19:03:31.302358 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m19:03:31.303461 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m19:03:31.304374 [info ] [Thread-2 (]: 20 of 95 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m19:03:31.304936 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m19:03:31.305851 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m19:03:31.306262 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m19:03:31.306528 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m19:03:31.311087 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m19:03:31.311644 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m19:03:31.316552 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m19:03:31.322157 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.326800 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:31.327601 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.331556 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:31.336096 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.337370 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.353858 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m19:03:31.365583 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m19:03:31.366508 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-07-18 19:03:31.312609 => 2024-07-18 19:03:31.366403
[0m19:03:31.366901 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-07-18 19:03:31.306742 => 2024-07-18 19:03:31.366806
[0m19:03:31.367238 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m19:03:31.367696 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m19:03:31.374639 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m19:03:31.379197 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m19:03:31.380250 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


  create view test.normalize_vkads_registry_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
        JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
        JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
        JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
        JSONExtractString(_airbyte_data, 'created') AS created, 
        JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
        JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'objective') AS objective, 
        JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
        JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
        JSONExtractString(_airbyte_data, 'status') AS status, 
        JSONExtractString(_airbyte_data, 'updated') AS updated, 
        JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
)

)
  )...
[0m19:03:31.380725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
        JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
        JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
        JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
        JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Date') AS Date, 
        JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_yd_default_accountid_custom_report') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
)

)
  )...
[0m19:03:31.392413 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.395636 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m19:03:31.396425 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.400671 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m19:03:31.401418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.404294 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans to test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m19:03:31.406307 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.407474 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m19:03:31.408128 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.412189 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m19:03:31.415510 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.416087 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.417211 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans__dbt_tmp to test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m19:03:31.420942 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m19:03:31.425555 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.430086 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */
drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m19:03:31.431170 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.433160 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m19:03:31.435074 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.436504 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (execute): 2024-07-18 19:03:31.375031 => 2024-07-18 19:03:31.436440
[0m19:03:31.437108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.437742 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5795014ee0>]}
[0m19:03:31.441809 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m19:03:31.442760 [info ] [Thread-1 (]: 19 of 95 OK created sql view model test.normalize_vkads_registry_default_ad_plans  [[32mOK[0m in 0.13s]
[0m19:03:31.444528 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m19:03:31.445013 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m19:03:31.445786 [info ] [Thread-1 (]: 21 of 95 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m19:03:31.447227 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m19:03:31.447885 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.448526 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m19:03:31.449949 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-07-18 19:03:31.368006 => 2024-07-18 19:03:31.449888
[0m19:03:31.450634 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m19:03:31.452057 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5795017d90>]}
[0m19:03:31.457392 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m19:03:31.458365 [info ] [Thread-2 (]: 20 of 95 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.15s]
[0m19:03:31.460097 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m19:03:31.461409 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m19:03:31.462397 [info ] [Thread-2 (]: 22 of 95 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m19:03:31.463579 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m19:03:31.464580 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m19:03:31.465208 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m19:03:31.477074 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.478954 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m19:03:31.483830 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
    
      and database = 'airbyte_internal'
    
    order by position
  ...
[0m19:03:31.485183 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-07-18 19:03:31.465483 => 2024-07-18 19:03:31.485071
[0m19:03:31.485588 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m19:03:31.500465 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.533887 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.549063 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m19:03:31.550283 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-07-18 19:03:31.452693 => 2024-07-18 19:03:31.550085
[0m19:03:31.550821 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m19:03:31.556043 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m19:03:31.557223 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.561816 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.562963 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
        JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
        JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
        JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
        JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
        JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at,
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM airbyte_internal.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
)

)
  )...
[0m19:03:31.566848 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.575932 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:31.583033 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.586197 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:31.591223 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m19:03:31.595573 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.596767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m19:03:31.597343 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.611727 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.620234 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m19:03:31.627488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
    )
        ...
[0m19:03:31.630720 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.631927 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m19:03:31.635353 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.639657 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m19:03:31.643185 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.647585 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.648979 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.650660 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-07-18 19:03:31.551076 => 2024-07-18 19:03:31.650577
[0m19:03:31.651694 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ddb970>]}
[0m19:03:31.652322 [info ] [Thread-1 (]: 21 of 95 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.20s]
[0m19:03:31.653284 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.653745 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m19:03:31.655926 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m19:03:31.656992 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m19:03:31.658949 [info ] [Thread-1 (]: 23 of 95 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m19:03:31.659506 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
  
      ...
[0m19:03:31.660725 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m19:03:31.661971 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m19:03:31.662391 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m19:03:31.667748 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m19:03:31.668424 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-07-18 19:03:31.662566 => 2024-07-18 19:03:31.668306
[0m19:03:31.668733 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m19:03:31.677604 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.678426 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.681199 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:31.684493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.688033 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.693947 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.696361 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:31.699855 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:31.703402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.706984 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
    )
        ...
[0m19:03:31.717434 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:31.720345 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.723309 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.726210 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.727168 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.730212 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:31.734895 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.736470 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m19:03:31.737216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.741944 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:31.743147 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
  
      ...
[0m19:03:31.745598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.748743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m19:03:31.752073 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.754099 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-07-18 19:03:31.485770 => 2024-07-18 19:03:31.754030
[0m19:03:31.754817 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5795017850>]}
[0m19:03:31.755681 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.756324 [info ] [Thread-2 (]: 22 of 95 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.29s]
[0m19:03:31.757870 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:31.758365 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m19:03:31.759604 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m19:03:31.760413 [info ] [Thread-2 (]: 24 of 95 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m19:03:31.762304 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m19:03:31.762650 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m19:03:31.762840 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m19:03:31.768212 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m19:03:31.768815 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-07-18 19:03:31.762956 => 2024-07-18 19:03:31.768723
[0m19:03:31.769075 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m19:03:31.777450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.783176 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.786725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.787432 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:31.792116 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.796764 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.797386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.799714 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:31.801505 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:31.804321 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:31.809049 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.811721 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
    )
        ...
[0m19:03:31.814973 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.818036 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:31.822533 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.826818 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m19:03:31.828307 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.831326 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.832146 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.836602 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-07-18 19:03:31.668844 => 2024-07-18 19:03:31.836488
[0m19:03:31.837760 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e67e20>]}
[0m19:03:31.839271 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.838595 [info ] [Thread-1 (]: 23 of 95 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.18s]
[0m19:03:31.841417 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m19:03:31.841981 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m19:03:31.842658 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m19:03:31.843023 [info ] [Thread-1 (]: 25 of 95 START sql table model test.incremental_adjust_registry_default_events . [RUN]
[0m19:03:31.844821 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
  
      ...
[0m19:03:31.845436 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_registry_default_events'
[0m19:03:31.846492 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_registry_default_events)
[0m19:03:31.847113 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m19:03:31.850857 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m19:03:31.851430 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (compile): 2024-07-18 19:03:31.847306 => 2024-07-18 19:03:31.851304
[0m19:03:31.851747 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m19:03:31.865006 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.867672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

            

    
        create table test.incremental_adjust_registry_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
    )
        ...
[0m19:03:31.869297 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:31.884857 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:31.888939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_registry_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.895900 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.897751 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m19:03:31.898310 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_registry_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
  ...
[0m19:03:31.906629 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:31.909923 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.911459 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.915789 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
EXCHANGE TABLES test.incremental_adjust_registry_default_events__dbt_backup AND test.incremental_adjust_registry_default_events 
  
  ...
[0m19:03:31.917202 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.920566 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:31.921365 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.927262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
drop table if exists test.incremental_adjust_registry_default_events__dbt_backup 
  ...
[0m19:03:31.930687 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.931212 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.932964 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (execute): 2024-07-18 19:03:31.851892 => 2024-07-18 19:03:31.932896
[0m19:03:31.935894 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:31.936840 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ecb280>]}
[0m19:03:31.938629 [info ] [Thread-1 (]: 25 of 95 OK created sql table model test.incremental_adjust_registry_default_events  [[32mOK[0m in 0.09s]
[0m19:03:31.939175 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m19:03:31.939592 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m19:03:31.941104 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.944407 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m19:03:31.940527 [info ] [Thread-1 (]: 26 of 95 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m19:03:31.947751 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m19:03:31.948150 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m19:03:31.948520 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m19:03:31.949311 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.953671 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m19:03:31.956437 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-07-18 19:03:31.769193 => 2024-07-18 19:03:31.956344
[0m19:03:31.957680 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5795017d90>]}
[0m19:03:31.960173 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-07-18 19:03:31.949695 => 2024-07-18 19:03:31.960060
[0m19:03:31.960564 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m19:03:31.967005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.973200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.977246 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:31.982831 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:31.985367 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:31.987768 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:31.991605 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:31.994442 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
    )
        ...
[0m19:03:32.012702 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:32.016436 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:32.085914 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m19:03:32.087831 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m19:03:32.088403 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
  
      ...
[0m19:03:32.105200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:32.106502 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:32.140221 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:32.142828 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:32.148481 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.150594 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:32.157639 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.160416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:32.163900 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:32.167076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m19:03:32.170083 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:32.172107 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-07-18 19:03:31.960714 => 2024-07-18 19:03:32.172042
[0m19:03:32.172651 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5797104c70>]}
[0m19:03:32.814120 [info ] [Thread-2 (]: 24 of 95 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.20s]
[0m19:03:32.814664 [info ] [Thread-1 (]: 26 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.23s]
[0m19:03:32.815892 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m19:03:32.816671 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m19:03:32.817478 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m19:03:32.818522 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m19:03:32.819530 [info ] [Thread-2 (]: 27 of 95 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m19:03:32.820281 [info ] [Thread-1 (]: 28 of 95 START sql incremental model test.incremental_appmetrica_events_default_installations  [RUN]
[0m19:03:32.821672 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m19:03:32.822624 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations'
[0m19:03:32.823187 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m19:03:32.823732 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations)
[0m19:03:32.824263 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m19:03:32.824891 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m19:03:32.829831 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m19:03:32.835063 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m19:03:32.836843 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-07-18 19:03:32.825453 => 2024-07-18 19:03:32.836536
[0m19:03:32.837509 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (compile): 2024-07-18 19:03:32.830385 => 2024-07-18 19:03:32.837390
[0m19:03:32.838190 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m19:03:32.838928 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m19:03:32.852861 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:32.861394 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:32.867706 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.871142 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:32.872334 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.878789 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:32.883342 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.884155 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:32.887642 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:32.891947 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_installations:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:32.896882 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:32.900756 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:32.903929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:32.906767 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
    )
        ...
[0m19:03:32.907638 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.911892 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

            

    
        create table test.incremental_appmetrica_events_default_installations__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
    )
        ...
[0m19:03:32.924795 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:32.928308 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:32.931375 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:32.934791 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:32.935691 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.938866 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m19:03:32.940077 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
  
      ...
[0m19:03:32.941631 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.943527 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m19:03:32.944547 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_installations__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
  
      ...
[0m19:03:32.958322 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:32.959653 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

      delete from test.incremental_appmetrica_events_default_installations where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_installations__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:32.961790 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:32.962915 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:32.991674 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:32.995378 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.001050 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.003569 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        insert into test.incremental_appmetrica_events_default_installations select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_installations__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:33.008146 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:33.011115 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.011808 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.018727 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.019506 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.022764 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:33.026763 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.030496 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_distributed_new_data 
  ...
[0m19:03:33.031558 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.036541 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.039288 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.041700 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (execute): 2024-07-18 19:03:32.853222 => 2024-07-18 19:03:33.041624
[0m19:03:33.042350 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.043657 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794f0bca0>]}
[0m19:03:33.047786 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m19:03:33.048527 [info ] [Thread-1 (]: 28 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_installations  [[32mOK[0m in 0.22s]
[0m19:03:33.050708 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m19:03:33.051700 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m19:03:33.053101 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.052366 [info ] [Thread-1 (]: 29 of 95 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m19:03:33.055805 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-07-18 19:03:32.839537 => 2024-07-18 19:03:33.055716
[0m19:03:33.056664 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m19:03:33.057456 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5797107310>]}
[0m19:03:33.057981 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m19:03:33.058680 [info ] [Thread-2 (]: 27 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.24s]
[0m19:03:33.059528 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m19:03:33.060426 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m19:03:33.066427 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m19:03:33.066999 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m19:03:33.068383 [info ] [Thread-2 (]: 30 of 95 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m19:03:33.069983 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m19:03:33.070436 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-07-18 19:03:33.060887 => 2024-07-18 19:03:33.070279
[0m19:03:33.070996 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m19:03:33.071888 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m19:03:33.072801 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m19:03:33.081978 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.088548 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m19:03:33.091439 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-07-18 19:03:33.082303 => 2024-07-18 19:03:33.091255
[0m19:03:33.092129 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m19:03:33.099603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.100854 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.105530 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.111321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.112108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.115207 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:33.119601 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.126688 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.131631 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.133954 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
    )
        ...
[0m19:03:33.135515 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.138449 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:33.142175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.145437 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.148456 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
    )
        ...
[0m19:03:33.161432 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:33.164571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.168065 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.171776 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.173323 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.175400 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m19:03:33.176499 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
  
      ...
[0m19:03:33.178057 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.180183 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m19:03:33.181088 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
  
      ...
[0m19:03:33.190995 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.192312 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:33.196212 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.197521 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:33.224973 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:33.228154 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.230230 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:33.232744 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.233658 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.238466 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:33.242593 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.244608 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:33.246106 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.250014 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.253761 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.254622 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.258406 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m19:03:33.262634 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.266774 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.267592 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.269637 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-07-18 19:03:33.073738 => 2024-07-18 19:03:33.269567
[0m19:03:33.273660 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m19:03:33.274534 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5797104430>]}
[0m19:03:33.276010 [info ] [Thread-1 (]: 29 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.22s]
[0m19:03:33.276670 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m19:03:33.277421 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m19:03:33.279536 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.278695 [info ] [Thread-1 (]: 31 of 95 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m19:03:33.282555 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-07-18 19:03:33.092583 => 2024-07-18 19:03:33.282478
[0m19:03:33.283412 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m19:03:33.284595 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57aabc2260>]}
[0m19:03:33.284938 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m19:03:33.285551 [info ] [Thread-2 (]: 30 of 95 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.22s]
[0m19:03:33.286259 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m19:03:33.286932 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m19:03:33.291997 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m19:03:33.293089 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m19:03:33.294838 [info ] [Thread-2 (]: 32 of 95 START sql incremental model test.incremental_appsflyer_events_default_in_app_events  [RUN]
[0m19:03:33.296236 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-07-18 19:03:33.287406 => 2024-07-18 19:03:33.296078
[0m19:03:33.297120 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events'
[0m19:03:33.297636 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m19:03:33.297868 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events)
[0m19:03:33.305157 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
    )
        ...
[0m19:03:33.305931 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m19:03:33.312747 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"
[0m19:03:33.313604 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events (compile): 2024-07-18 19:03:33.307184 => 2024-07-18 19:03:33.313455
[0m19:03:33.314038 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m19:03:33.323215 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.324139 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.330759 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.331922 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.339807 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.342161 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.344407 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m19:03:33.345177 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
  ...
[0m19:03:33.346642 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.367964 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.375747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m19:03:33.394151 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.402571 [debug] [Thread-2 (]: 
    In test.incremental_appsflyer_events_default_in_app_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:33.407170 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m19:03:33.410308 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */
drop table if exists test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.414587 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.415918 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-07-18 19:03:33.298050 => 2024-07-18 19:03:33.415858
[0m19:03:33.416579 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5797105cc0>]}
[0m19:03:33.417319 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.418087 [info ] [Thread-1 (]: 31 of 95 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.13s]
[0m19:03:33.421446 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

            

    
        create table test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appsflyer_events_default_in_app_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appsflyer_events_default_in_app_events
    )
        ...
[0m19:03:33.421913 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m19:03:33.423647 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m19:03:33.424838 [info ] [Thread-1 (]: 33 of 95 START sql incremental model test.incremental_calltouch_events_default_calls  [RUN]
[0m19:03:33.426606 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m19:03:33.426971 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m19:03:33.427163 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m19:03:33.432545 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m19:03:33.433196 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-07-18 19:03:33.427266 => 2024-07-18 19:03:33.433088
[0m19:03:33.433580 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m19:03:33.441214 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.442800 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.448545 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.449464 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.455444 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.456505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.460922 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"
[0m19:03:33.461587 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

        
  
    
    
        
        insert into test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "ad_unit", "advertising_id", "af_ad", "af_ad_id", "af_ad_type", "af_adset", "af_adset_id", "af_attribution_lookback", "af_c_id", "af_channel", "af_cost_currency", "af_cost_model", "af_cost_value", "af_keywords", "af_prt", "af_reengagement_window", "af_siteid", "af_sub1", "af_sub2", "af_sub3", "af_sub4", "af_sub5", "af_sub_siteid", "amazon_aid", "android_id", "app_id", "app_name", "app_type", "app_version", "appsflyer_id", "att", "attributed_touch_time", "attributed_touch_type", "blocked_reason", "blocked_reason_rule", "blocked_reason_value", "blocked_sub_reason", "bundle_id", "campaign", "campaign_type", "carrier", "city", "contributor1_af_prt", "contributor1_campaign", "contributor1_match_type", "contributor1_media_source", "contributor1_touch_time", "contributor1_touch_type", "contributor2_af_prt", "contributor2_campaign", "contributor2_match_type", "contributor2_media_source", "contributor2_touch_time", "contributor2_touch_type", "contributor3_af_prt", "contributor3_campaign", "contributor3_match_type", "contributor3_media_source", "contributor3_touch_time", "contributor3_touch_type", "conversion_type", "country_code", "custom_data", "customer_user_id", "deeplink_url", "device_category", "device_download_time", "device_model", "device_type", "dma", "event_name", "event_revenue", "event_revenue_currency", "event_revenue_usd", "event_source", "event_time", "event_value", "gp_broadcast_referrer", "gp_click_time", "gp_install_begin", "gp_referrer", "http_referrer", "idfa", "idfv", "imei", "impressions", "install_app_store", "install_time", "ip", "is_lat", "is_primary_attribution", "is_receipt_validated", "is_retargeting", "keyword_id", "keyword_match_type", "language", "match_type", "media_source", "mediation_network", "monetization_network", "network_account_id", "oaid", "operator", "original_url", "os_version", "placement", "platform", "postal_code", "region", "rejected_reason", "rejected_reason_value", "retargeting_conversion_type", "sdk_version", "segment", "state", "store_reinstall", "user_agent", "wifi", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appsflyer_events_default_in_app_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appsflyer_events_default_in_app_events
  
      ...
[0m19:03:33.463187 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.476159 [debug] [Thread-1 (]: 
    In test.incremental_calltouch_events_default_calls:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:33.479711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.483340 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.486246 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

            

    
        create table test.incremental_calltouch_events_default_calls__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
    )
        ...
[0m19:03:33.503978 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.507078 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.512812 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.515041 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m19:03:33.515732 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        
  
    
    
        
        insert into test.incremental_calltouch_events_default_calls__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
  
      ...
[0m19:03:33.533311 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.534412 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

      delete from test.incremental_calltouch_events_default_calls where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_calltouch_events_default_calls__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:33.562271 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:33.565046 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.570175 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.572596 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        insert into test.incremental_calltouch_events_default_calls select "__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_calltouch_events_default_calls__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:33.589344 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.593753 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.597492 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.601000 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_distributed_new_data 
  ...
[0m19:03:33.603977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.606216 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-07-18 19:03:33.433721 => 2024-07-18 19:03:33.606152
[0m19:03:33.606804 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e66c50>]}
[0m19:03:33.607137 [info ] [Thread-1 (]: 33 of 95 OK created sql incremental model test.incremental_calltouch_events_default_calls  [[32mOK[0m in 0.18s]
[0m19:03:33.607483 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m19:03:33.607762 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m19:03:33.608602 [info ] [Thread-1 (]: 34 of 95 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m19:03:33.609795 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m19:03:33.610060 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m19:03:33.610227 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m19:03:33.614268 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m19:03:33.615245 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.15 seconds
[0m19:03:33.616486 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

      delete from test.incremental_appsflyer_events_default_in_app_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:33.618354 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-07-18 19:03:33.610329 => 2024-07-18 19:03:33.618055
[0m19:03:33.618882 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m19:03:33.625686 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.632105 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.636304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.642596 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.645146 [debug] [Thread-1 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:33.650255 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.654759 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.657370 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
    )
        ...
[0m19:03:33.673244 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.676820 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.682452 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.684980 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m19:03:33.685810 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
  
      ...
[0m19:03:33.687424 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m19:03:33.691571 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.696655 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.697813 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:33.701164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.705438 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */

        insert into test.incremental_appsflyer_events_default_in_app_events select "__date", "ad_unit", "advertising_id", "af_ad", "af_ad_id", "af_ad_type", "af_adset", "af_adset_id", "af_attribution_lookback", "af_c_id", "af_channel", "af_cost_currency", "af_cost_model", "af_cost_value", "af_keywords", "af_prt", "af_reengagement_window", "af_siteid", "af_sub1", "af_sub2", "af_sub3", "af_sub4", "af_sub5", "af_sub_siteid", "amazon_aid", "android_id", "app_id", "app_name", "app_type", "app_version", "appsflyer_id", "att", "attributed_touch_time", "attributed_touch_type", "blocked_reason", "blocked_reason_rule", "blocked_reason_value", "blocked_sub_reason", "bundle_id", "campaign", "campaign_type", "carrier", "city", "contributor1_af_prt", "contributor1_campaign", "contributor1_match_type", "contributor1_media_source", "contributor1_touch_time", "contributor1_touch_type", "contributor2_af_prt", "contributor2_campaign", "contributor2_match_type", "contributor2_media_source", "contributor2_touch_time", "contributor2_touch_type", "contributor3_af_prt", "contributor3_campaign", "contributor3_match_type", "contributor3_media_source", "contributor3_touch_time", "contributor3_touch_type", "conversion_type", "country_code", "custom_data", "customer_user_id", "deeplink_url", "device_category", "device_download_time", "device_model", "device_type", "dma", "event_name", "event_revenue", "event_revenue_currency", "event_revenue_usd", "event_source", "event_time", "event_value", "gp_broadcast_referrer", "gp_click_time", "gp_install_begin", "gp_referrer", "http_referrer", "idfa", "idfv", "imei", "impressions", "install_app_store", "install_time", "ip", "is_lat", "is_primary_attribution", "is_receipt_validated", "is_retargeting", "keyword_id", "keyword_match_type", "language", "match_type", "media_source", "mediation_network", "monetization_network", "network_account_id", "oaid", "operator", "original_url", "os_version", "placement", "platform", "postal_code", "region", "rejected_reason", "rejected_reason_value", "retargeting_conversion_type", "sdk_version", "segment", "state", "store_reinstall", "user_agent", "wifi", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:33.731822 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:33.736241 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.742224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:33.743552 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.749493 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */
drop table if exists test.incremental_appsflyer_events_default_in_app_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.751920 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:33.756542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.761093 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events"} */
drop table if exists test.incremental_appsflyer_events_default_in_app_events__dbt_distributed_new_data 
  ...
[0m19:03:33.762885 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.768222 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:33.771177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.773600 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events (execute): 2024-07-18 19:03:33.314206 => 2024-07-18 19:03:33.773522
[0m19:03:33.774384 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e4f700>]}
[0m19:03:33.775371 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.776427 [info ] [Thread-2 (]: 32 of 95 OK created sql incremental model test.incremental_appsflyer_events_default_in_app_events  [[32mOK[0m in 0.48s]
[0m19:03:33.780536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m19:03:33.781152 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appsflyer_events_default_in_app_events
[0m19:03:33.783324 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m19:03:33.784782 [info ] [Thread-2 (]: 35 of 95 START sql table model test.incremental_mt_registry_default_banners .... [RUN]
[0m19:03:33.786246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.787054 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_banners'
[0m19:03:33.790046 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-07-18 19:03:33.619022 => 2024-07-18 19:03:33.789958
[0m19:03:33.790604 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_banners)
[0m19:03:33.791451 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ec9e40>]}
[0m19:03:33.791829 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m19:03:33.792325 [info ] [Thread-1 (]: 34 of 95 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.18s]
[0m19:03:33.797527 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m19:03:33.798424 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m19:03:33.799496 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m19:03:33.800123 [info ] [Thread-1 (]: 36 of 95 START sql table model test.incremental_mt_registry_default_campaigns .. [RUN]
[0m19:03:33.801796 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns'
[0m19:03:33.802312 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (compile): 2024-07-18 19:03:33.792742 => 2024-07-18 19:03:33.802217
[0m19:03:33.802715 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns)
[0m19:03:33.803245 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m19:03:33.803797 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m19:03:33.811103 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

            

    
        create table test.incremental_mt_registry_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
    )
        ...
[0m19:03:33.815741 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m19:03:33.818434 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (compile): 2024-07-18 19:03:33.811582 => 2024-07-18 19:03:33.818187
[0m19:03:33.819090 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m19:03:33.826645 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

            

    
        create table test.incremental_mt_registry_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
    )
        ...
[0m19:03:33.833908 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:33.840011 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.914313 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m19:03:33.917280 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:33.918667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.920644 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m19:03:33.921231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
  ...
[0m19:03:33.922559 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.924625 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m19:03:33.925171 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
  ...
[0m19:03:33.933147 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.933848 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.935583 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
EXCHANGE TABLES test.incremental_mt_registry_default_banners__dbt_backup AND test.incremental_mt_registry_default_banners 
  
  ...
[0m19:03:33.937007 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_registry_default_campaigns__dbt_backup AND test.incremental_mt_registry_default_campaigns 
  
  ...
[0m19:03:33.941677 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.946364 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
drop table if exists test.incremental_mt_registry_default_campaigns__dbt_backup 
  ...
[0m19:03:33.947306 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.952093 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
drop table if exists test.incremental_mt_registry_default_banners__dbt_backup 
  ...
[0m19:03:33.952734 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:33.955180 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (execute): 2024-07-18 19:03:33.819238 => 2024-07-18 19:03:33.955107
[0m19:03:33.955864 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ceac50>]}
[0m19:03:33.956933 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:33.956382 [info ] [Thread-1 (]: 36 of 95 OK created sql table model test.incremental_mt_registry_default_campaigns  [[32mOK[0m in 0.15s]
[0m19:03:33.958896 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (execute): 2024-07-18 19:03:33.804346 => 2024-07-18 19:03:33.958836
[0m19:03:33.959322 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m19:03:33.960030 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794c6e710>]}
[0m19:03:33.960537 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m19:03:33.961466 [info ] [Thread-2 (]: 35 of 95 OK created sql table model test.incremental_mt_registry_default_banners  [[32mOK[0m in 0.17s]
[0m19:03:33.962181 [info ] [Thread-1 (]: 37 of 95 START sql table model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m19:03:33.963170 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m19:03:33.964479 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m19:03:33.965058 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m19:03:33.965786 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m19:03:33.966841 [info ] [Thread-2 (]: 38 of 95 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m19:03:33.967489 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m19:03:33.968341 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m19:03:33.972812 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m19:03:33.973436 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m19:03:33.974325 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m19:03:33.974952 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-07-18 19:03:33.968949 => 2024-07-18 19:03:33.974822
[0m19:03:33.979853 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m19:03:33.980570 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m19:03:33.986892 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
    )
        ...
[0m19:03:33.988132 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-07-18 19:03:33.975316 => 2024-07-18 19:03:33.987937
[0m19:03:33.988638 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m19:03:33.994547 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
    )
        ...
[0m19:03:34.007030 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:34.010786 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.016307 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:34.017059 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.020399 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.022982 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m19:03:34.025689 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_backup ("Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
  ...
[0m19:03:34.029412 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.031103 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m19:03:34.031688 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
  ...
[0m19:03:34.036727 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.038037 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m19:03:34.042125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.042948 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.047530 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m19:03:34.049232 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m19:03:34.054355 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.055384 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.058960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m19:03:34.061565 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-07-18 19:03:33.981134 => 2024-07-18 19:03:34.061442
[0m19:03:34.063371 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ceab90>]}
[0m19:03:34.063988 [info ] [Thread-1 (]: 37 of 95 OK created sql table model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.10s]
[0m19:03:34.064568 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m19:03:34.064945 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m19:03:34.066224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.066744 [info ] [Thread-1 (]: 39 of 95 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m19:03:34.068251 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-07-18 19:03:33.988760 => 2024-07-18 19:03:34.068183
[0m19:03:34.068934 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m19:03:34.070094 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794c4e800>]}
[0m19:03:34.070808 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m19:03:34.071449 [info ] [Thread-2 (]: 38 of 95 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.10s]
[0m19:03:34.071915 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m19:03:34.072347 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m19:03:34.078856 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m19:03:34.079346 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m19:03:34.080766 [info ] [Thread-2 (]: 40 of 95 START sql table model test.incremental_vkads_registry_default_ad_plans  [RUN]
[0m19:03:34.081484 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans'
[0m19:03:34.081832 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans)
[0m19:03:34.082155 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m19:03:34.086023 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m19:03:34.086505 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-18 19:03:34.072693 => 2024-07-18 19:03:34.086373
[0m19:03:34.087498 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m19:03:34.097195 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.098363 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (compile): 2024-07-18 19:03:34.082382 => 2024-07-18 19:03:34.098248
[0m19:03:34.098956 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m19:03:34.104202 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

            

    
        create table test.incremental_vkads_registry_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
    )
        ...
[0m19:03:34.104933 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.110629 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.116868 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.121687 [debug] [Thread-1 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:34.125052 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:34.126620 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:34.129636 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.132267 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.134749 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    )
        ...
[0m19:03:34.136088 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.138131 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m19:03:34.139124 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_registry_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
  ...
[0m19:03:34.150182 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:34.150791 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.153671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.155034 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_registry_default_ad_plans__dbt_backup AND test.incremental_vkads_registry_default_ad_plans 
  
  ...
[0m19:03:34.160607 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.165096 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
drop table if exists test.incremental_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m19:03:34.166731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.169014 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m19:03:34.169924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.171807 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (execute): 2024-07-18 19:03:34.099219 => 2024-07-18 19:03:34.171733
[0m19:03:34.172737 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794fb72e0>]}
[0m19:03:34.173493 [info ] [Thread-2 (]: 40 of 95 OK created sql table model test.incremental_vkads_registry_default_ad_plans  [[32mOK[0m in 0.09s]
[0m19:03:34.174636 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
  
      ...
[0m19:03:34.175188 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m19:03:34.176934 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m19:03:34.177758 [info ] [Thread-2 (]: 41 of 95 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m19:03:34.178657 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m19:03:34.178960 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m19:03:34.179146 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m19:03:34.183247 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m19:03:34.183869 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-07-18 19:03:34.179250 => 2024-07-18 19:03:34.183789
[0m19:03:34.184071 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m19:03:34.191588 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:34.192040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.193679 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:34.201069 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.205054 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.211362 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.213772 [debug] [Thread-2 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:34.216342 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:34.219672 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.222299 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
    )
        ...
[0m19:03:34.231524 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:34.234756 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.237758 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.241271 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.242044 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.246003 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:34.247884 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.250146 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m19:03:34.250669 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
  
      ...
[0m19:03:34.257544 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.262038 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:34.263367 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.264714 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:34.266531 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.269536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m19:03:34.273118 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.275372 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-18 19:03:34.088433 => 2024-07-18 19:03:34.275292
[0m19:03:34.276046 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ceb8e0>]}
[0m19:03:34.276524 [info ] [Thread-1 (]: 39 of 95 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.21s]
[0m19:03:34.276938 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m19:03:34.277327 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m19:03:34.278228 [info ] [Thread-1 (]: 42 of 95 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m19:03:34.279069 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m19:03:34.279406 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m19:03:34.279610 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m19:03:34.284340 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m19:03:34.284989 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-07-18 19:03:34.279803 => 2024-07-18 19:03:34.284869
[0m19:03:34.285382 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m19:03:34.295268 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.298164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:34.300895 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.302249 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.308691 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.309416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.311156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:34.316832 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.321335 [debug] [Thread-1 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:34.324645 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:34.325524 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.329988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:34.331452 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.334096 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
    )
        ...
[0m19:03:34.337033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.340715 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m19:03:34.344116 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.346418 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-07-18 19:03:34.184166 => 2024-07-18 19:03:34.346335
[0m19:03:34.347103 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794fb6fe0>]}
[0m19:03:34.347592 [info ] [Thread-2 (]: 41 of 95 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.17s]
[0m19:03:34.348076 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m19:03:34.348566 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m19:03:34.349542 [info ] [Thread-2 (]: 43 of 95 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m19:03:34.350967 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m19:03:34.351314 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m19:03:34.351508 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m19:03:34.367362 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:34.377193 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.381655 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m19:03:34.387147 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.389278 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m19:03:34.390186 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.407179 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
  
      ...
[0m19:03:34.415231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.420780 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.429310 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m19:03:34.430024 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:34.431976 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:34.438579 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.442295 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.447246 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.451501 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_installations$')        
...
[0m19:03:34.458360 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.462474 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.465391 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:34.467837 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.469327 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.473105 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m19:03:34.474644 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.476663 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:34.479932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.485458 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.486675 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.489573 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:34.493633 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.496574 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m19:03:34.497405 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.501960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m19:03:34.502758 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.506287 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-07-18 19:03:34.285905 => 2024-07-18 19:03:34.506204
[0m19:03:34.507088 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794f89030>]}
[0m19:03:34.507562 [info ] [Thread-1 (]: 42 of 95 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.23s]
[0m19:03:34.507923 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m19:03:34.508244 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m19:03:34.509257 [info ] [Thread-1 (]: 44 of 95 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m19:03:34.510402 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.511485 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m19:03:34.515757 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.516220 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m19:03:34.517595 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m19:03:34.526932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.526060 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m19:03:34.534050 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m19:03:34.536275 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-07-18 19:03:34.351615 => 2024-07-18 19:03:34.536149
[0m19:03:34.536654 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m19:03:34.545584 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.547038 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.551040 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.555936 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.556883 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.562182 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.565167 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m19:03:34.567520 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-07-18 19:03:34.517818 => 2024-07-18 19:03:34.567350
[0m19:03:34.568053 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m19:03:34.573368 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



    )
        ...
[0m19:03:34.574296 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.583078 [debug] [Thread-2 (]: 
    In test.join_appmetrica_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:34.586671 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:34.590433 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.592703 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[8] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



    )
        ...
[0m19:03:34.599776 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:34.604407 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.609722 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.611634 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m19:03:34.612104 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



  ...
[0m19:03:34.621222 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.622713 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m19:03:34.627245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.631900 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m19:03:34.635547 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.636907 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-07-18 19:03:34.568316 => 2024-07-18 19:03:34.636833
[0m19:03:34.637636 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57970db160>]}
[0m19:03:34.638122 [info ] [Thread-1 (]: 44 of 95 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.13s]
[0m19:03:34.638483 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m19:03:34.638815 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appsflyer_events
[0m19:03:34.639853 [info ] [Thread-1 (]: 45 of 95 START sql table model test.join_appsflyer_events ...................... [RUN]
[0m19:03:34.641383 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appsflyer_events'
[0m19:03:34.641873 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appsflyer_events)
[0m19:03:34.642211 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appsflyer_events
[0m19:03:34.650618 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appsflyer_events_[^_]+_in_app_events$')        
...
[0m19:03:34.660715 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.664763 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

    select name, type from system.columns where table = 'incremental_appsflyer_events_default_in_app_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.669901 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.677969 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appsflyer_events"
[0m19:03:34.678781 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appsflyer_events (compile): 2024-07-18 19:03:34.642335 => 2024-07-18 19:03:34.678646
[0m19:03:34.679102 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appsflyer_events
[0m19:03:34.683233 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

            

    
        create table test.join_appsflyer_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appsflyer_events_default_in_app_events
SELECT
    toLowCardinality(attributed_touch_type) AS touch_type,
    toDateTime32(attributed_touch_time) AS touch_time,
    toDateTime32(install_time) AS install_time,
    toDateTime32(event_time) AS event_time,
    toLowCardinality(event_name) AS event_name,
    toLowCardinality(event_source) AS event_source,
    toLowCardinality(af_prt) AS partner,
    toLowCardinality(media_source) AS media_source,
    toLowCardinality(campaign) AS campaign,
    af_siteid AS site_id,
    af_ad AS ad,                                            
    toLowCardinality(country_code) AS country_code,
    toLowCardinality(city) AS city,   
    appsflyer_id,
    customer_user_id AS custom_uid,
    toLowCardinality(platform) AS platform,
    toLowCardinality(is_retargeting) AS is_retargeting,                  
    toLowCardinality(is_primary_attribution) AS is_primary_attribution,  
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('&&&') AS __link                                    
FROM (
    

        (
            select
                cast('test.incremental_appsflyer_events_default_in_app_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_unit" as String) as "ad_unit" ,
                    cast("advertising_id" as String) as "advertising_id" ,
                    cast("af_ad" as String) as "af_ad" ,
                    cast("af_ad_id" as String) as "af_ad_id" ,
                    cast("af_ad_type" as String) as "af_ad_type" ,
                    cast("af_adset" as String) as "af_adset" ,
                    cast("af_adset_id" as String) as "af_adset_id" ,
                    cast("af_attribution_lookback" as String) as "af_attribution_lookback" ,
                    cast("af_c_id" as String) as "af_c_id" ,
                    cast("af_channel" as String) as "af_channel" ,
                    cast("af_cost_currency" as String) as "af_cost_currency" ,
                    cast("af_cost_model" as String) as "af_cost_model" ,
                    cast("af_cost_value" as String) as "af_cost_value" ,
                    cast("af_keywords" as String) as "af_keywords" ,
                    cast("af_prt" as String) as "af_prt" ,
                    cast("af_reengagement_window" as String) as "af_reengagement_window" ,
                    cast("af_siteid" as String) as "af_siteid" ,
                    cast("af_sub1" as String) as "af_sub1" ,
                    cast("af_sub2" as String) as "af_sub2" ,
                    cast("af_sub3" as String) as "af_sub3" ,
                    cast("af_sub4" as String) as "af_sub4" ,
                    cast("af_sub5" as String) as "af_sub5" ,
                    cast("af_sub_siteid" as String) as "af_sub_siteid" ,
                    cast("amazon_aid" as String) as "amazon_aid" ,
                    cast("android_id" as String) as "android_id" ,
                    cast("app_id" as String) as "app_id" ,
                    cast("app_name" as String) as "app_name" ,
                    cast("app_type" as String) as "app_type" ,
                    cast("app_version" as String) as "app_version" ,
                    cast("appsflyer_id" as String) as "appsflyer_id" ,
                    cast("att" as String) as "att" ,
                    cast("attributed_touch_time" as String) as "attributed_touch_time" ,
                    cast("attributed_touch_type" as String) as "attributed_touch_type" ,
                    cast("blocked_reason" as String) as "blocked_reason" ,
                    cast("blocked_reason_rule" as String) as "blocked_reason_rule" ,
                    cast("blocked_reason_value" as String) as "blocked_reason_value" ,
                    cast("blocked_sub_reason" as String) as "blocked_sub_reason" ,
                    cast("bundle_id" as String) as "bundle_id" ,
                    cast("campaign" as String) as "campaign" ,
                    cast("campaign_type" as String) as "campaign_type" ,
                    cast("carrier" as String) as "carrier" ,
                    cast("city" as String) as "city" ,
                    cast("contributor1_af_prt" as String) as "contributor1_af_prt" ,
                    cast("contributor1_campaign" as String) as "contributor1_campaign" ,
                    cast("contributor1_match_type" as String) as "contributor1_match_type" ,
                    cast("contributor1_media_source" as String) as "contributor1_media_source" ,
                    cast("contributor1_touch_time" as String) as "contributor1_touch_time" ,
                    cast("contributor1_touch_type" as String) as "contributor1_touch_type" ,
                    cast("contributor2_af_prt" as String) as "contributor2_af_prt" ,
                    cast("contributor2_campaign" as String) as "contributor2_campaign" ,
                    cast("contributor2_match_type" as String) as "contributor2_match_type" ,
                    cast("contributor2_media_source" as String) as "contributor2_media_source" ,
                    cast("contributor2_touch_time" as String) as "contributor2_touch_time" ,
                    cast("contributor2_touch_type" as String) as "contributor2_touch_type" ,
                    cast("contributor3_af_prt" as String) as "contributor3_af_prt" ,
                    cast("contributor3_campaign" as String) as "contributor3_campaign" ,
                    cast("contributor3_match_type" as String) as "contributor3_match_type" ,
                    cast("contributor3_media_source" as String) as "contributor3_media_source" ,
                    cast("contributor3_touch_time" as String) as "contributor3_touch_time" ,
                    cast("contributor3_touch_type" as String) as "contributor3_touch_type" ,
                    cast("conversion_type" as String) as "conversion_type" ,
                    cast("country_code" as String) as "country_code" ,
                    cast("custom_data" as String) as "custom_data" ,
                    cast("customer_user_id" as String) as "customer_user_id" ,
                    cast("deeplink_url" as String) as "deeplink_url" ,
                    cast("device_category" as String) as "device_category" ,
                    cast("device_download_time" as String) as "device_download_time" ,
                    cast("device_model" as String) as "device_model" ,
                    cast("device_type" as String) as "device_type" ,
                    cast("dma" as String) as "dma" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_revenue" as String) as "event_revenue" ,
                    cast("event_revenue_currency" as String) as "event_revenue_currency" ,
                    cast("event_revenue_usd" as String) as "event_revenue_usd" ,
                    cast("event_source" as String) as "event_source" ,
                    cast("event_time" as String) as "event_time" ,
                    cast("event_value" as String) as "event_value" ,
                    cast("gp_broadcast_referrer" as String) as "gp_broadcast_referrer" ,
                    cast("gp_click_time" as String) as "gp_click_time" ,
                    cast("gp_install_begin" as String) as "gp_install_begin" ,
                    cast("gp_referrer" as String) as "gp_referrer" ,
                    cast("http_referrer" as String) as "http_referrer" ,
                    cast("idfa" as String) as "idfa" ,
                    cast("idfv" as String) as "idfv" ,
                    cast("imei" as String) as "imei" ,
                    cast("impressions" as String) as "impressions" ,
                    cast("install_app_store" as String) as "install_app_store" ,
                    cast("install_time" as String) as "install_time" ,
                    cast("ip" as String) as "ip" ,
                    cast("is_lat" as String) as "is_lat" ,
                    cast("is_primary_attribution" as String) as "is_primary_attribution" ,
                    cast("is_receipt_validated" as String) as "is_receipt_validated" ,
                    cast("is_retargeting" as String) as "is_retargeting" ,
                    cast("keyword_id" as String) as "keyword_id" ,
                    cast("keyword_match_type" as String) as "keyword_match_type" ,
                    cast("language" as String) as "language" ,
                    cast("match_type" as String) as "match_type" ,
                    cast("media_source" as String) as "media_source" ,
                    cast("mediation_network" as String) as "mediation_network" ,
                    cast("monetization_network" as String) as "monetization_network" ,
                    cast("network_account_id" as String) as "network_account_id" ,
                    cast("oaid" as String) as "oaid" ,
                    cast("operator" as String) as "operator" ,
                    cast("original_url" as String) as "original_url" ,
                    cast("os_version" as String) as "os_version" ,
                    cast("placement" as String) as "placement" ,
                    cast("platform" as String) as "platform" ,
                    cast("postal_code" as String) as "postal_code" ,
                    cast("region" as String) as "region" ,
                    cast("rejected_reason" as String) as "rejected_reason" ,
                    cast("rejected_reason_value" as String) as "rejected_reason_value" ,
                    cast("retargeting_conversion_type" as String) as "retargeting_conversion_type" ,
                    cast("sdk_version" as String) as "sdk_version" ,
                    cast("segment" as String) as "segment" ,
                    cast("state" as String) as "state" ,
                    cast("store_reinstall" as String) as "store_reinstall" ,
                    cast("user_agent" as String) as "user_agent" ,
                    cast("wifi" as String) as "wifi" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appsflyer_events_default_in_app_events

            
        )

        )



    )
        ...
[0m19:03:34.710827 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m19:03:34.713870 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.714535 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:34.720053 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

    select name, type from system.columns where table = 'join_appsflyer_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.720995 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.724249 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m19:03:34.725255 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[8] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



  
      ...
[0m19:03:34.728329 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.729965 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appsflyer_events"
[0m19:03:34.730607 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */

  
    
    
        
        insert into test.join_appsflyer_events__dbt_backup ("touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appsflyer_events_default_in_app_events
SELECT
    toLowCardinality(attributed_touch_type) AS touch_type,
    toDateTime32(attributed_touch_time) AS touch_time,
    toDateTime32(install_time) AS install_time,
    toDateTime32(event_time) AS event_time,
    toLowCardinality(event_name) AS event_name,
    toLowCardinality(event_source) AS event_source,
    toLowCardinality(af_prt) AS partner,
    toLowCardinality(media_source) AS media_source,
    toLowCardinality(campaign) AS campaign,
    af_siteid AS site_id,
    af_ad AS ad,                                            
    toLowCardinality(country_code) AS country_code,
    toLowCardinality(city) AS city,   
    appsflyer_id,
    customer_user_id AS custom_uid,
    toLowCardinality(platform) AS platform,
    toLowCardinality(is_retargeting) AS is_retargeting,                  
    toLowCardinality(is_primary_attribution) AS is_primary_attribution,  
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('&&&') AS __link                                    
FROM (
    

        (
            select
                cast('test.incremental_appsflyer_events_default_in_app_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_unit" as String) as "ad_unit" ,
                    cast("advertising_id" as String) as "advertising_id" ,
                    cast("af_ad" as String) as "af_ad" ,
                    cast("af_ad_id" as String) as "af_ad_id" ,
                    cast("af_ad_type" as String) as "af_ad_type" ,
                    cast("af_adset" as String) as "af_adset" ,
                    cast("af_adset_id" as String) as "af_adset_id" ,
                    cast("af_attribution_lookback" as String) as "af_attribution_lookback" ,
                    cast("af_c_id" as String) as "af_c_id" ,
                    cast("af_channel" as String) as "af_channel" ,
                    cast("af_cost_currency" as String) as "af_cost_currency" ,
                    cast("af_cost_model" as String) as "af_cost_model" ,
                    cast("af_cost_value" as String) as "af_cost_value" ,
                    cast("af_keywords" as String) as "af_keywords" ,
                    cast("af_prt" as String) as "af_prt" ,
                    cast("af_reengagement_window" as String) as "af_reengagement_window" ,
                    cast("af_siteid" as String) as "af_siteid" ,
                    cast("af_sub1" as String) as "af_sub1" ,
                    cast("af_sub2" as String) as "af_sub2" ,
                    cast("af_sub3" as String) as "af_sub3" ,
                    cast("af_sub4" as String) as "af_sub4" ,
                    cast("af_sub5" as String) as "af_sub5" ,
                    cast("af_sub_siteid" as String) as "af_sub_siteid" ,
                    cast("amazon_aid" as String) as "amazon_aid" ,
                    cast("android_id" as String) as "android_id" ,
                    cast("app_id" as String) as "app_id" ,
                    cast("app_name" as String) as "app_name" ,
                    cast("app_type" as String) as "app_type" ,
                    cast("app_version" as String) as "app_version" ,
                    cast("appsflyer_id" as String) as "appsflyer_id" ,
                    cast("att" as String) as "att" ,
                    cast("attributed_touch_time" as String) as "attributed_touch_time" ,
                    cast("attributed_touch_type" as String) as "attributed_touch_type" ,
                    cast("blocked_reason" as String) as "blocked_reason" ,
                    cast("blocked_reason_rule" as String) as "blocked_reason_rule" ,
                    cast("blocked_reason_value" as String) as "blocked_reason_value" ,
                    cast("blocked_sub_reason" as String) as "blocked_sub_reason" ,
                    cast("bundle_id" as String) as "bundle_id" ,
                    cast("campaign" as String) as "campaign" ,
                    cast("campaign_type" as String) as "campaign_type" ,
                    cast("carrier" as String) as "carrier" ,
                    cast("city" as String) as "city" ,
                    cast("contributor1_af_prt" as String) as "contributor1_af_prt" ,
                    cast("contributor1_campaign" as String) as "contributor1_campaign" ,
                    cast("contributor1_match_type" as String) as "contributor1_match_type" ,
                    cast("contributor1_media_source" as String) as "contributor1_media_source" ,
                    cast("contributor1_touch_time" as String) as "contributor1_touch_time" ,
                    cast("contributor1_touch_type" as String) as "contributor1_touch_type" ,
                    cast("contributor2_af_prt" as String) as "contributor2_af_prt" ,
                    cast("contributor2_campaign" as String) as "contributor2_campaign" ,
                    cast("contributor2_match_type" as String) as "contributor2_match_type" ,
                    cast("contributor2_media_source" as String) as "contributor2_media_source" ,
                    cast("contributor2_touch_time" as String) as "contributor2_touch_time" ,
                    cast("contributor2_touch_type" as String) as "contributor2_touch_type" ,
                    cast("contributor3_af_prt" as String) as "contributor3_af_prt" ,
                    cast("contributor3_campaign" as String) as "contributor3_campaign" ,
                    cast("contributor3_match_type" as String) as "contributor3_match_type" ,
                    cast("contributor3_media_source" as String) as "contributor3_media_source" ,
                    cast("contributor3_touch_time" as String) as "contributor3_touch_time" ,
                    cast("contributor3_touch_type" as String) as "contributor3_touch_type" ,
                    cast("conversion_type" as String) as "conversion_type" ,
                    cast("country_code" as String) as "country_code" ,
                    cast("custom_data" as String) as "custom_data" ,
                    cast("customer_user_id" as String) as "customer_user_id" ,
                    cast("deeplink_url" as String) as "deeplink_url" ,
                    cast("device_category" as String) as "device_category" ,
                    cast("device_download_time" as String) as "device_download_time" ,
                    cast("device_model" as String) as "device_model" ,
                    cast("device_type" as String) as "device_type" ,
                    cast("dma" as String) as "dma" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_revenue" as String) as "event_revenue" ,
                    cast("event_revenue_currency" as String) as "event_revenue_currency" ,
                    cast("event_revenue_usd" as String) as "event_revenue_usd" ,
                    cast("event_source" as String) as "event_source" ,
                    cast("event_time" as String) as "event_time" ,
                    cast("event_value" as String) as "event_value" ,
                    cast("gp_broadcast_referrer" as String) as "gp_broadcast_referrer" ,
                    cast("gp_click_time" as String) as "gp_click_time" ,
                    cast("gp_install_begin" as String) as "gp_install_begin" ,
                    cast("gp_referrer" as String) as "gp_referrer" ,
                    cast("http_referrer" as String) as "http_referrer" ,
                    cast("idfa" as String) as "idfa" ,
                    cast("idfv" as String) as "idfv" ,
                    cast("imei" as String) as "imei" ,
                    cast("impressions" as String) as "impressions" ,
                    cast("install_app_store" as String) as "install_app_store" ,
                    cast("install_time" as String) as "install_time" ,
                    cast("ip" as String) as "ip" ,
                    cast("is_lat" as String) as "is_lat" ,
                    cast("is_primary_attribution" as String) as "is_primary_attribution" ,
                    cast("is_receipt_validated" as String) as "is_receipt_validated" ,
                    cast("is_retargeting" as String) as "is_retargeting" ,
                    cast("keyword_id" as String) as "keyword_id" ,
                    cast("keyword_match_type" as String) as "keyword_match_type" ,
                    cast("language" as String) as "language" ,
                    cast("match_type" as String) as "match_type" ,
                    cast("media_source" as String) as "media_source" ,
                    cast("mediation_network" as String) as "mediation_network" ,
                    cast("monetization_network" as String) as "monetization_network" ,
                    cast("network_account_id" as String) as "network_account_id" ,
                    cast("oaid" as String) as "oaid" ,
                    cast("operator" as String) as "operator" ,
                    cast("original_url" as String) as "original_url" ,
                    cast("os_version" as String) as "os_version" ,
                    cast("placement" as String) as "placement" ,
                    cast("platform" as String) as "platform" ,
                    cast("postal_code" as String) as "postal_code" ,
                    cast("region" as String) as "region" ,
                    cast("rejected_reason" as String) as "rejected_reason" ,
                    cast("rejected_reason_value" as String) as "rejected_reason_value" ,
                    cast("retargeting_conversion_type" as String) as "retargeting_conversion_type" ,
                    cast("sdk_version" as String) as "sdk_version" ,
                    cast("segment" as String) as "segment" ,
                    cast("state" as String) as "state" ,
                    cast("store_reinstall" as String) as "store_reinstall" ,
                    cast("user_agent" as String) as "user_agent" ,
                    cast("wifi" as String) as "wifi" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appsflyer_events_default_in_app_events

            
        )

        )



  ...
[0m19:03:34.764135 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:34.765389 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */
EXCHANGE TABLES test.join_appsflyer_events__dbt_backup AND test.join_appsflyer_events 
  
  ...
[0m19:03:34.769385 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.773962 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appsflyer_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appsflyer_events"} */
drop table if exists test.join_appsflyer_events__dbt_backup 
  ...
[0m19:03:34.778090 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.779481 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appsflyer_events (execute): 2024-07-18 19:03:34.679220 => 2024-07-18 19:03:34.779406
[0m19:03:34.780191 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ebd2d0>]}
[0m19:03:34.780645 [info ] [Thread-1 (]: 45 of 95 OK created sql table model test.join_appsflyer_events ................. [[32mOK[0m in 0.14s]
[0m19:03:34.781090 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appsflyer_events
[0m19:03:34.781544 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m19:03:34.782075 [info ] [Thread-1 (]: 46 of 95 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m19:03:34.783379 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m19:03:34.783690 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m19:03:34.783872 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m19:03:34.800474 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m19:03:34.810223 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.814196 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.819731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.824342 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_banners$')        
...
[0m19:03:34.832644 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.836050 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.841571 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.845100 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_campaigns$')        
...
[0m19:03:34.851088 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.856183 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.861243 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.871939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m19:03:34.877215 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.883242 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m19:03:34.893500 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.895205 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m19:03:34.895868 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-07-18 19:03:34.783973 => 2024-07-18 19:03:34.895765
[0m19:03:34.896177 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m19:03:34.902286 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.907637 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.911524 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.916430 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.919409 [debug] [Thread-1 (]: 
    In test.join_mt_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:34.922323 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:34.925132 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:34.928411 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[8]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



    )
        ...
[0m19:03:34.961460 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:34.964770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:34.970356 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.24 seconds
[0m19:03:34.971184 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:34.972716 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

      delete from test.join_appmetrica_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_appmetrica_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:34.974449 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m19:03:34.976019 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[8]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



  
      ...
[0m19:03:35.010924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:35.081313 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m19:03:35.083403 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.084962 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

      delete from test.join_mt_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_mt_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:35.090527 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.092603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        insert into test.join_appmetrica_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link" from test.join_appmetrica_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:35.101279 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.105104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:35.108747 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.112524 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_distributed_new_data 
  ...
[0m19:03:35.115698 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.118130 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-07-18 19:03:34.536888 => 2024-07-18 19:03:35.118054
[0m19:03:35.118878 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d86ce0>]}
[0m19:03:35.119359 [info ] [Thread-2 (]: 43 of 95 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 0.77s]
[0m19:03:35.119767 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m19:03:35.120153 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m19:03:35.121342 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:35.122299 [info ] [Thread-2 (]: 47 of 95 START sql table model test.join_sheets_periodstat ..................... [RUN]
[0m19:03:35.125660 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.126608 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m19:03:35.127772 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m19:03:35.128068 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m19:03:35.136924 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m19:03:35.137763 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.141344 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        insert into test.join_mt_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_mt_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:35.147517 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.151231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.152471 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.158720 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.157880 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:35.161594 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m19:03:35.163877 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-07-18 19:03:35.128436 => 2024-07-18 19:03:35.163720
[0m19:03:35.164309 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m19:03:35.168833 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



    )
        ...
[0m19:03:35.169698 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.177052 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_distributed_new_data 
  ...
[0m19:03:35.181078 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.183366 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-07-18 19:03:34.896299 => 2024-07-18 19:03:35.183245
[0m19:03:35.184054 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d87a90>]}
[0m19:03:35.184548 [info ] [Thread-1 (]: 46 of 95 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.40s]
[0m19:03:35.184977 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m19:03:35.185374 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m19:03:35.185908 [info ] [Thread-1 (]: 48 of 95 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m19:03:35.187271 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m19:03:35.188139 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.188701 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m19:03:35.191827 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.192410 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m19:03:35.202454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m19:03:35.203391 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.206390 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m19:03:35.207168 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

  
    
    
        
        insert into test.join_sheets_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



  ...
[0m19:03:35.210600 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.215757 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.216616 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.219030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m19:03:35.223139 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.224255 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.228848 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m19:03:35.231901 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m19:03:35.233853 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-07-18 19:03:35.194176 => 2024-07-18 19:03:35.233727
[0m19:03:35.234218 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m19:03:35.238737 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



    )
        ...
[0m19:03:35.240631 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.243406 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-07-18 19:03:35.164479 => 2024-07-18 19:03:35.243245
[0m19:03:35.244297 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d5bee0>]}
[0m19:03:35.244940 [info ] [Thread-2 (]: 47 of 95 OK created sql table model test.join_sheets_periodstat ................ [[32mOK[0m in 0.12s]
[0m19:03:35.245440 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m19:03:35.245899 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m19:03:35.247084 [info ] [Thread-2 (]: 49 of 95 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m19:03:35.248277 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m19:03:35.248669 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m19:03:35.248971 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m19:03:35.262750 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m19:03:35.264248 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.267379 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.269471 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.274286 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.276487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.278695 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m19:03:35.280044 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



  ...
[0m19:03:35.282527 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.286061 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_registry_[^_]+_ad_plans$')        
...
[0m19:03:35.293135 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.298089 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.299438 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.300851 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m19:03:35.305541 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.306385 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.310491 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m19:03:35.314241 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m19:03:35.318699 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.320306 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-07-18 19:03:35.234355 => 2024-07-18 19:03:35.320237
[0m19:03:35.321156 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.321972 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d5a590>]}
[0m19:03:35.324159 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m19:03:35.324791 [info ] [Thread-1 (]: 48 of 95 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.13s]
[0m19:03:35.326826 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m19:03:35.327995 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m19:03:35.328881 [info ] [Thread-1 (]: 50 of 95 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m19:03:35.330870 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m19:03:35.331208 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m19:03:35.331370 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m19:03:35.343229 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m19:03:35.344193 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.346878 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m19:03:35.347485 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-07-18 19:03:35.249073 => 2024-07-18 19:03:35.347374
[0m19:03:35.347880 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m19:03:35.354278 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.356036 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.362537 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.364193 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.368124 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.370032 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.374675 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m19:03:35.376254 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.380325 [debug] [Thread-2 (]: 
    In test.join_vkads_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:35.381138 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.384246 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:35.386160 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m19:03:35.389882 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.392154 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[8]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



    )
        ...
[0m19:03:35.396832 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.398068 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m19:03:35.398479 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-07-18 19:03:35.331465 => 2024-07-18 19:03:35.398419
[0m19:03:35.398655 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m19:03:35.404305 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.410258 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.415268 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.416773 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.419782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.420548 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.424923 [debug] [Thread-1 (]: 
    In test.join_yd_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:35.425848 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.429273 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:35.431666 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m19:03:35.434005 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[8]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



  
      ...
[0m19:03:35.436087 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.438496 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



    )
        ...
[0m19:03:35.456364 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.459618 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.464094 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.465862 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m19:03:35.466520 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:35.467786 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

      delete from test.join_vkads_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_vkads_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:35.468307 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[8]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



  
      ...
[0m19:03:35.493119 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.494447 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

      delete from test.join_yd_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_yd_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:35.498177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:35.501052 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.506906 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.508999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        insert into test.join_vkads_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link" from test.join_vkads_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:35.519394 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.522762 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:35.523427 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:35.528843 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.530383 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.534349 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_distributed_new_data 
  ...
[0m19:03:35.535402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.537977 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        insert into test.join_yd_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_yd_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:35.538797 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.541460 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-07-18 19:03:35.348056 => 2024-07-18 19:03:35.541387
[0m19:03:35.542359 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d87430>]}
[0m19:03:35.543159 [info ] [Thread-2 (]: 49 of 95 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.29s]
[0m19:03:35.543781 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m19:03:35.544255 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m19:03:35.545272 [info ] [Thread-2 (]: 51 of 95 START sql incremental model test.join_ym_events ....................... [RUN]
[0m19:03:35.546170 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m19:03:35.546538 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m19:03:35.546793 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m19:03:35.558950 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.560211 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_')        
...
[0m19:03:35.563573 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:35.568891 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.572402 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_distributed_new_data 
  ...
[0m19:03:35.574978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.575744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.579025 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.581736 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-07-18 19:03:35.398749 => 2024-07-18 19:03:35.581640
[0m19:03:35.584428 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d84df0>]}
[0m19:03:35.585104 [info ] [Thread-1 (]: 50 of 95 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.25s]
[0m19:03:35.585867 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m19:03:35.586391 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m19:03:35.587450 [info ] [Thread-1 (]: 52 of 95 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m19:03:35.588465 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m19:03:35.588766 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m19:03:35.588965 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m19:03:35.595225 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.605622 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m19:03:35.609011 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m19:03:35.615642 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.617356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m19:03:35.618084 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.633888 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.636035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.637628 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m19:03:35.638301 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-07-18 19:03:35.546952 => 2024-07-18 19:03:35.638163
[0m19:03:35.638639 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m19:03:35.644493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.646389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.649021 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m19:03:35.650977 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-07-18 19:03:35.589132 => 2024-07-18 19:03:35.650851
[0m19:03:35.651362 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m19:03:35.656260 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

    )
        ...
[0m19:03:35.657160 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.662869 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.668281 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.673057 [debug] [Thread-2 (]: 
    In test.join_ym_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:35.676063 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:35.677214 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.680863 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.681667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.685663 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



    )
        ...
[0m19:03:35.687217 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.688789 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m19:03:35.689348 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

  ...
[0m19:03:35.696602 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.698044 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m19:03:35.701893 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.706674 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m19:03:35.710104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.711598 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-07-18 19:03:35.651513 => 2024-07-18 19:03:35.711524
[0m19:03:35.712417 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:35.713547 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794fd0790>]}
[0m19:03:35.717015 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.717952 [info ] [Thread-1 (]: 52 of 95 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.13s]
[0m19:03:35.719780 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m19:03:35.720983 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m19:03:35.721861 [info ] [Thread-1 (]: 53 of 95 START sql table model test.combine_periodstat ......................... [RUN]
[0m19:03:35.723679 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m19:03:35.724446 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.724836 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m19:03:35.727384 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m19:03:35.727911 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m19:03:35.731668 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m19:03:35.732873 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



  
      ...
[0m19:03:35.739382 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.744955 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.750204 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.752248 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m19:03:35.752789 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-07-18 19:03:35.728272 => 2024-07-18 19:03:35.752694
[0m19:03:35.753023 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m19:03:35.758342 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

    )
        ...
[0m19:03:35.759362 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:35.761827 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

      delete from test.join_ym_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_ym_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:35.779232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:35.783383 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.788935 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.790454 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m19:03:35.790982 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

  
    
    
        
        insert into test.combine_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

  ...
[0m19:03:35.793009 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:35.796183 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.798097 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.799389 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m19:03:35.801182 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.803214 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        insert into test.join_ym_events select "__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link" from test.join_ym_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:35.804629 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.809257 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m19:03:35.813228 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.813984 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.815251 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-07-18 19:03:35.753126 => 2024-07-18 19:03:35.815192
[0m19:03:35.818634 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:35.819835 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579500fb50>]}
[0m19:03:35.821197 [info ] [Thread-1 (]: 53 of 95 OK created sql table model test.combine_periodstat .................... [[32mOK[0m in 0.10s]
[0m19:03:35.822471 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m19:03:35.823245 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m19:03:35.824111 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.824776 [info ] [Thread-1 (]: 54 of 95 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m19:03:35.829604 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_distributed_new_data 
  ...
[0m19:03:35.830611 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m19:03:35.831853 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m19:03:35.832679 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m19:03:35.837466 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m19:03:35.838748 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.843140 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-07-18 19:03:35.638853 => 2024-07-18 19:03:35.843060
[0m19:03:35.843980 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d85120>]}
[0m19:03:35.844500 [info ] [Thread-2 (]: 51 of 95 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.30s]
[0m19:03:35.845051 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m19:03:35.845563 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m19:03:35.846684 [info ] [Thread-2 (]: 55 of 95 START sql incremental model test.combine_datestat ..................... [RUN]
[0m19:03:35.847610 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m19:03:35.847967 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m19:03:35.848201 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m19:03:35.852214 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m19:03:35.853817 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.858159 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.862866 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.864013 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.867576 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.869851 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m19:03:35.872235 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-07-18 19:03:35.833146 => 2024-07-18 19:03:35.872025
[0m19:03:35.872854 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m19:03:35.880094 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

    )
        ...
[0m19:03:35.881151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.963896 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.965530 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m19:03:35.968751 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.969511 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.974939 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.976449 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.978376 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m19:03:35.978985 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

  ...
[0m19:03:35.980232 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:35.984315 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m19:03:35.985083 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-07-18 19:03:35.848302 => 2024-07-18 19:03:35.984989
[0m19:03:35.985360 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m19:03:35.991347 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:35.992136 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:35.994631 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m19:03:35.997509 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:36.000838 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:36.002448 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:36.007477 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m19:03:36.011864 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:36.012507 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:36.013805 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-07-18 19:03:35.873086 => 2024-07-18 19:03:36.013742
[0m19:03:36.017913 [debug] [Thread-2 (]: 
    In test.combine_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:36.018746 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57971281f0>]}
[0m19:03:36.021806 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:36.022619 [info ] [Thread-1 (]: 54 of 95 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.19s]
[0m19:03:36.024159 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m19:03:36.024719 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m19:03:36.025233 [info ] [Thread-1 (]: 56 of 95 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m19:03:36.027150 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m19:03:36.027924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:36.028211 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m19:03:36.030467 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

    )
        ...
[0m19:03:36.031056 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m19:03:36.054598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:36.063998 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:36.087027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:36.091791 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m19:03:36.094381 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m19:03:36.095621 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-07-18 19:03:36.032162 => 2024-07-18 19:03:36.095434
[0m19:03:36.096433 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m19:03:36.101453 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_registry_appprofilematching 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m19:03:36.102004 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

  
      ...
[0m19:03:36.126591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:36.129460 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:36.130916 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:36.132216 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

      delete from test.combine_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:36.134805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:36.136717 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m19:03:36.137194 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

  
    
    
        
        insert into test.hash_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_registry_appprofilematching 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m19:03:36.155501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:36.156968 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
EXCHANGE TABLES test.hash_registry_appprofilematching__dbt_backup AND test.hash_registry_appprofilematching 
  
  ...
[0m19:03:36.160755 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:36.161341 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:36.165482 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
drop table if exists test.hash_registry_appprofilematching__dbt_backup 
  ...
[0m19:03:36.168140 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:36.172286 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:36.173878 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-07-18 19:03:36.096690 => 2024-07-18 19:03:36.173802
[0m19:03:36.174557 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:36.175217 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794da4d60>]}
[0m19:03:36.176954 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        insert into test.combine_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId" from test.combine_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:36.185695 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:36.188850 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:36.192053 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:36.196469 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_distributed_new_data 
  ...
[0m19:03:36.199481 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:36.201542 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-07-18 19:03:35.985527 => 2024-07-18 19:03:36.201475
[0m19:03:36.202143 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794cd3d90>]}
[0m19:03:37.295334 [info ] [Thread-1 (]: 56 of 95 OK created sql table model test.hash_registry_appprofilematching ...... [[32mOK[0m in 0.15s]
[0m19:03:37.297155 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m19:03:37.296623 [info ] [Thread-2 (]: 55 of 95 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.35s]
[0m19:03:37.298003 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m19:03:37.298934 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m19:03:37.299863 [info ] [Thread-1 (]: 57 of 95 START sql table model test.hash_periodstat ............................ [RUN]
[0m19:03:37.300660 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m19:03:37.302333 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m19:03:37.303187 [info ] [Thread-2 (]: 58 of 95 START sql incremental model test.combine_events ....................... [RUN]
[0m19:03:37.303967 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m19:03:37.304908 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m19:03:37.305940 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m19:03:37.306517 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m19:03:37.316814 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m19:03:37.317508 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m19:03:37.324282 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m19:03:37.326087 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-07-18 19:03:37.306848 => 2024-07-18 19:03:37.325839
[0m19:03:37.326828 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m19:03:37.334935 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m19:03:37.341620 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.350090 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.357190 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.364392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appsflyer_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.365162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:37.369879 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.371172 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.376777 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.378039 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.380287 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m19:03:37.381231 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

  
    
    
        
        insert into test.hash_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m19:03:37.383814 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.390282 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m19:03:37.390808 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-07-18 19:03:37.318115 => 2024-07-18 19:03:37.390729
[0m19:03:37.391087 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m19:03:37.396939 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.397601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.399962 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m19:03:37.402567 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.407759 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.408802 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.414066 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m19:03:37.417366 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.418093 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.419324 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-07-18 19:03:37.327184 => 2024-07-18 19:03:37.419266
[0m19:03:37.432829 [debug] [Thread-2 (]: 
    In test.combine_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:37.434117 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794cc4b50>]}
[0m19:03:37.436729 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:37.437872 [info ] [Thread-1 (]: 57 of 95 OK created sql table model test.hash_periodstat ....................... [[32mOK[0m in 0.13s]
[0m19:03:37.439978 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m19:03:37.440650 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m19:03:37.441163 [info ] [Thread-1 (]: 59 of 95 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m19:03:37.442214 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.443030 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m19:03:37.445352 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime(0) as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as adSourceDirty ,
        toString('') as utmSource ,
        toString('') as utmMedium ,
        toString('') as utmCampaign ,
        toString('') as utmTerm ,
        toString('') as utmContent ,
        toString('') as transactionId ,
        toString('') as utmHash ,
        toUInt8(0) as sessions ,
        toUInt8(0) as addToCartSessions ,
        toUInt8(0) as cartViewSessions ,
        toUInt8(0) as checkoutSessions ,
        toUInt8(0) as webSalesSessions ,
        toUInt8(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt8(0) as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8(0) as linkingCardToPhoneNumberSessions ,
        toUInt8(0) as registrationLendingPromotionsSessions ,
        toUInt8(0) as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8(0) as couponActivationSessions ,
        toUInt8(0) as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appsflyer_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

    )
        ...
[0m19:03:37.445884 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m19:03:37.446909 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m19:03:37.456621 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m19:03:37.457449 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-07-18 19:03:37.447680 => 2024-07-18 19:03:37.457306
[0m19:03:37.457882 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m19:03:37.462631 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m19:03:37.479879 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.483015 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.487844 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:37.491389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.492335 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.495582 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m19:03:37.496135 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m19:03:37.497474 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.499787 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m19:03:37.500339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime(0) as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as adSourceDirty ,
        toString('') as utmSource ,
        toString('') as utmMedium ,
        toString('') as utmCampaign ,
        toString('') as utmTerm ,
        toString('') as utmContent ,
        toString('') as transactionId ,
        toString('') as utmHash ,
        toUInt8(0) as sessions ,
        toUInt8(0) as addToCartSessions ,
        toUInt8(0) as cartViewSessions ,
        toUInt8(0) as checkoutSessions ,
        toUInt8(0) as webSalesSessions ,
        toUInt8(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt8(0) as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8(0) as linkingCardToPhoneNumberSessions ,
        toUInt8(0) as registrationLendingPromotionsSessions ,
        toUInt8(0) as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8(0) as couponActivationSessions ,
        toUInt8(0) as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appsflyer_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

  
      ...
[0m19:03:37.512833 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.514822 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m19:03:37.519471 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.523859 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m19:03:37.527090 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.528544 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-07-18 19:03:37.458040 => 2024-07-18 19:03:37.528464
[0m19:03:37.529288 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ce9d80>]}
[0m19:03:37.529852 [info ] [Thread-1 (]: 59 of 95 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.09s]
[0m19:03:37.530258 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m19:03:37.530628 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m19:03:37.531563 [info ] [Thread-1 (]: 60 of 95 START sql table model test.link_registry_appprofilematching ........... [RUN]
[0m19:03:37.533358 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_appprofilematching'
[0m19:03:37.533880 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_appprofilematching)
[0m19:03:37.534171 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m19:03:37.549027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m19:03:37.551284 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.552977 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

      delete from test.combine_events where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:37.561134 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.563008 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m19:03:37.563671 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (compile): 2024-07-18 19:03:37.534288 => 2024-07-18 19:03:37.563543
[0m19:03:37.564126 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m19:03:37.569422 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

            

    
        create table test.link_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

    )
        ...
[0m19:03:37.587209 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.591245 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.596255 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.597953 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m19:03:37.598812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:37.601475 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.602805 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

  
    
    
        
        insert into test.link_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

  ...
[0m19:03:37.607251 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.610148 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        insert into test.combine_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews" from test.combine_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:37.620657 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.622303 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
EXCHANGE TABLES test.link_registry_appprofilematching__dbt_backup AND test.link_registry_appprofilematching 
  
  ...
[0m19:03:37.623658 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.626784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:37.630907 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.634749 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
drop table if exists test.link_registry_appprofilematching__dbt_backup 
  ...
[0m19:03:37.635589 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.641578 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_distributed_new_data 
  ...
[0m19:03:37.643438 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.644776 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (execute): 2024-07-18 19:03:37.564380 => 2024-07-18 19:03:37.644717
[0m19:03:37.645462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.646553 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794f08be0>]}
[0m19:03:37.649075 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-07-18 19:03:37.391286 => 2024-07-18 19:03:37.649013
[0m19:03:37.649702 [info ] [Thread-1 (]: 60 of 95 OK created sql table model test.link_registry_appprofilematching ...... [[32mOK[0m in 0.11s]
[0m19:03:37.650927 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794c99060>]}
[0m19:03:37.651454 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m19:03:37.652286 [info ] [Thread-2 (]: 58 of 95 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.35s]
[0m19:03:37.653484 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m19:03:37.654480 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m19:03:37.655005 [info ] [Thread-1 (]: 61 of 95 START sql incremental model test.hash_datestat ........................ [RUN]
[0m19:03:37.655553 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m19:03:37.657213 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m19:03:37.658085 [info ] [Thread-2 (]: 62 of 95 START sql table model test.link_periodstat ............................ [RUN]
[0m19:03:37.658749 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m19:03:37.659815 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m19:03:37.660458 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m19:03:37.660780 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m19:03:37.668491 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m19:03:37.668929 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m19:03:37.675018 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.676731 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-07-18 19:03:37.660998 => 2024-07-18 19:03:37.676557
[0m19:03:37.677505 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m19:03:37.684983 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.686842 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.689447 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m19:03:37.690252 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-07-18 19:03:37.669253 => 2024-07-18 19:03:37.690122
[0m19:03:37.690653 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m19:03:37.695492 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

    )
        ...
[0m19:03:37.696417 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.701048 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.707875 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.712555 [debug] [Thread-1 (]: 
    In test.hash_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:37.715741 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:37.718023 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.718923 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.722043 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.725313 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m19:03:37.730762 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.732322 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m19:03:37.732869 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

  ...
[0m19:03:37.740743 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.742124 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m19:03:37.746010 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.751733 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m19:03:37.755067 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.756461 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-07-18 19:03:37.690915 => 2024-07-18 19:03:37.756394
[0m19:03:37.757177 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:37.758255 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e54130>]}
[0m19:03:37.761116 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.762074 [info ] [Thread-2 (]: 62 of 95 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.10s]
[0m19:03:37.764118 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m19:03:37.764850 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m19:03:37.765537 [info ] [Thread-2 (]: 63 of 95 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m19:03:37.766456 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m19:03:37.766793 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m19:03:37.767152 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m19:03:37.767948 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.773217 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.776276 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m19:03:37.778758 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m19:03:37.783243 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.785494 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m19:03:37.786110 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-07-18 19:03:37.768223 => 2024-07-18 19:03:37.785964
[0m19:03:37.786461 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m19:03:37.791923 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

    )
        ...
[0m19:03:37.809633 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.812953 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.818355 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.820080 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m19:03:37.820756 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:37.823254 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

      delete from test.hash_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:37.825255 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

  ...
[0m19:03:37.839910 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.841645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m19:03:37.846035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.917289 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m19:03:37.918976 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m19:03:37.921598 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.926398 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.927962 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-07-18 19:03:37.786625 => 2024-07-18 19:03:37.927877
[0m19:03:37.929159 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794f8bca0>]}
[0m19:03:37.930377 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.929804 [info ] [Thread-2 (]: 63 of 95 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.16s]
[0m19:03:37.932602 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        insert into test.hash_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime" from test.hash_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:37.933120 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m19:03:37.934259 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m19:03:37.935902 [info ] [Thread-2 (]: 64 of 95 START sql incremental model test.hash_events .......................... [RUN]
[0m19:03:37.936785 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m19:03:37.937082 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m19:03:37.937343 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m19:03:37.946657 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m19:03:37.947217 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-07-18 19:03:37.937491 => 2024-07-18 19:03:37.947137
[0m19:03:37.947541 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m19:03:37.954699 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:37.955285 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.958873 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:37.964536 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.965399 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.968461 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_distributed_new_data 
  ...
[0m19:03:37.973411 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:37.977567 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:37.979521 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-07-18 19:03:37.677833 => 2024-07-18 19:03:37.979454
[0m19:03:37.980091 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794c63a30>]}
[0m19:03:37.981099 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:37.980427 [info ] [Thread-1 (]: 61 of 95 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.32s]
[0m19:03:37.999392 [debug] [Thread-2 (]: 
    In test.hash_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:38.000703 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m19:03:38.006116 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:38.007033 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m19:03:38.009423 [info ] [Thread-1 (]: 65 of 95 START sql table model test.full_periodstat ............................ [RUN]
[0m19:03:38.010325 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_periodstat'
[0m19:03:38.010640 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_periodstat)
[0m19:03:38.010834 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_periodstat
[0m19:03:38.011624 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.030803 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 
  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(__date) 
    
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as VisitStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_events 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m19:03:38.050486 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m19:03:38.055552 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.057439 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m19:03:38.061787 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.063542 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m19:03:38.069563 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.071001 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m19:03:38.076221 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.077597 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m19:03:38.082042 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.084059 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m19:03:38.088288 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.089857 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m19:03:38.095120 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.097005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m19:03:38.101732 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.103864 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m19:03:38.108113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.109416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m19:03:38.114356 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.118587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.121806 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m19:03:38.124698 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.125779 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.129066 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_periodstat"
[0m19:03:38.129611 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (compile): 2024-07-18 19:03:38.011971 => 2024-07-18 19:03:38.129510
[0m19:03:38.129886 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_periodstat
[0m19:03:38.134297 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

            

    
        create table test.full_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m19:03:38.135265 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.138732 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m19:03:38.139620 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 
  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(__date) 
    
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as VisitStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_events 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m19:03:38.160584 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.164700 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'full_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.171189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.172894 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_periodstat"
[0m19:03:38.173619 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

  
    
    
        
        insert into test.full_periodstat__dbt_backup ("period_date", "campaign", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime", "cost_per_day")
  -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  ...
[0m19:03:38.189579 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.190900 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
EXCHANGE TABLES test.full_periodstat__dbt_backup AND test.full_periodstat 
  
  ...
[0m19:03:38.196049 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.200038 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
drop table if exists test.full_periodstat__dbt_backup 
  ...
[0m19:03:38.204028 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.205918 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (execute): 2024-07-18 19:03:38.130021 => 2024-07-18 19:03:38.205837
[0m19:03:38.206579 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57950186d0>]}
[0m19:03:38.206950 [info ] [Thread-1 (]: 65 of 95 OK created sql table model test.full_periodstat ....................... [[32mOK[0m in 0.20s]
[0m19:03:38.207302 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m19:03:38.207565 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m19:03:38.208381 [info ] [Thread-1 (]: 66 of 95 START sql table model test.link_datestat .............................. [RUN]
[0m19:03:38.209554 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m19:03:38.209756 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m19:03:38.209909 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m19:03:38.214891 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.217989 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m19:03:38.219543 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

      delete from test.hash_events where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:38.220434 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.224378 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m19:03:38.225269 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-07-18 19:03:38.210005 => 2024-07-18 19:03:38.225152
[0m19:03:38.225762 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m19:03:38.231115 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

    )
        ...
[0m19:03:38.249278 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.252747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.259960 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.261989 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m19:03:38.262668 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

  ...
[0m19:03:38.276065 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m19:03:38.279905 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.281921 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.283638 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m19:03:38.286519 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.289140 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        insert into test.hash_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime" from test.hash_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:38.290666 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.295263 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m19:03:38.298824 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.300741 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-07-18 19:03:38.225913 => 2024-07-18 19:03:38.300611
[0m19:03:38.301525 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579500fc10>]}
[0m19:03:38.302061 [info ] [Thread-1 (]: 66 of 95 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.09s]
[0m19:03:38.302483 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m19:03:38.303850 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m19:03:38.304452 [info ] [Thread-1 (]: 67 of 95 START sql incremental model test.full_datestat ........................ [RUN]
[0m19:03:38.305232 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m19:03:38.305460 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m19:03:38.305617 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m19:03:38.311515 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m19:03:38.313508 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.317030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:38.317811 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.319900 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m19:03:38.321846 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.327354 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_distributed_new_data 
  ...
[0m19:03:38.328815 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.330731 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m19:03:38.331465 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.334383 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-07-18 19:03:37.947754 => 2024-07-18 19:03:38.334314
[0m19:03:38.335113 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e6eef0>]}
[0m19:03:38.336105 [info ] [Thread-2 (]: 64 of 95 OK created sql incremental model test.hash_events ..................... [[32mOK[0m in 0.40s]
[0m19:03:38.336875 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m19:03:38.338220 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_events
[0m19:03:38.339004 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.339548 [info ] [Thread-2 (]: 68 of 95 START sql table model test.link_events ................................ [RUN]
[0m19:03:38.341448 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m19:03:38.342473 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m19:03:38.344071 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m19:03:38.344519 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m19:03:38.350287 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.351299 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.354459 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m19:03:38.358478 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.362188 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m19:03:38.363371 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.365244 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m19:03:38.366583 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-07-18 19:03:38.344665 => 2024-07-18 19:03:38.366368
[0m19:03:38.367604 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m19:03:38.373309 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,touch_type,touch_time,install_time,event_time,event_name,event_source,partner,media_source,campaign,site_id,ad,country_code,city,appsflyer_id,custom_uid,platform,is_retargeting,is_primary_attribution,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,VisitStatHash,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,YmClientHash,UtmHashHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, touch_type, touch_time, install_time, event_time, event_name, event_source, partner, media_source, campaign, site_id, ad, country_code, city, appsflyer_id, custom_uid, platform, is_retargeting, is_primary_attribution, visitId, clientId, cityCode, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

    )
        ...
[0m19:03:38.374429 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.377006 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m19:03:38.382272 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.383585 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m19:03:38.388493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.390711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m19:03:38.395636 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.397028 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m19:03:38.399838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:38.402823 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.404598 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.406943 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m19:03:38.407838 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-07-18 19:03:38.305710 => 2024-07-18 19:03:38.407690
[0m19:03:38.408237 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m19:03:38.415481 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.416527 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.420489 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m19:03:38.421323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,touch_type,touch_time,install_time,event_time,event_name,event_source,partner,media_source,campaign,site_id,ad,country_code,city,appsflyer_id,custom_uid,platform,is_retargeting,is_primary_attribution,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,VisitStatHash,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,YmClientHash,UtmHashHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, touch_type, touch_time, install_time, event_time, event_name, event_source, partner, media_source, campaign, site_id, ad, country_code, city, appsflyer_id, custom_uid, platform, is_retargeting, is_primary_attribution, visitId, clientId, cityCode, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

  ...
[0m19:03:38.425156 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.428778 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.433809 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.440532 [debug] [Thread-1 (]: 
    In test.full_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m19:03:38.443428 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:38.446752 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.449624 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m19:03:38.451954 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:38.453563 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m19:03:38.457324 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.461646 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m19:03:38.466635 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.468107 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-07-18 19:03:38.367930 => 2024-07-18 19:03:38.468033
[0m19:03:38.468819 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e6ea40>]}
[0m19:03:38.469368 [info ] [Thread-2 (]: 68 of 95 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.13s]
[0m19:03:38.469853 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m19:03:38.470761 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m19:03:38.471274 [info ] [Thread-2 (]: 69 of 95 START sql table model test.graph_tuples ............................... [RUN]
[0m19:03:38.472076 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m19:03:38.472359 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m19:03:38.472572 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m19:03:38.479751 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:38.488103 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m19:03:38.492426 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.494064 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-07-18 19:03:38.472682 => 2024-07-18 19:03:38.493930
[0m19:03:38.494827 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m19:03:38.500412 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppEventStatHash'), toDateTime(0),  AppEventStatHash) as node_left
            from test.hash_events
            where nullIf(AppEventStatHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
            
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null
            



    )
        ...
[0m19:03:38.501323 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.504578 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m19:03:38.505746 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        
  
    
    
        
        insert into test.full_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash")
  -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  
      ...
[0m19:03:38.524190 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.528040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.532731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.534200 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m19:03:38.534909 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:38.536059 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

      delete from test.full_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.full_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9);
    ...
[0m19:03:38.537202 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppEventStatHash'), toDateTime(0),  AppEventStatHash) as node_left
            from test.hash_events
            where nullIf(AppEventStatHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
            
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null
            



  ...
[0m19:03:38.559498 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.560684 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m19:03:38.562057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:38.565030 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.565867 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.571965 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m19:03:38.575699 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.576382 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.577701 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-07-18 19:03:38.495044 => 2024-07-18 19:03:38.577634
[0m19:03:38.579753 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        insert into test.full_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash" from test.full_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9
    ...
[0m19:03:38.580892 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d4e770>]}
[0m19:03:38.582590 [info ] [Thread-2 (]: 69 of 95 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 0.11s]
[0m19:03:38.583439 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m19:03:38.584579 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m19:03:38.585059 [info ] [Thread-2 (]: 70 of 95 START sql table model test.graph_lookup ............................... [RUN]
[0m19:03:38.585839 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m19:03:38.586140 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m19:03:38.586324 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m19:03:38.592337 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m19:03:38.593548 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.597475 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_new_data_8aceecf1_ba45_4ee2_b76b_17d0e32cc0e9 
  ...
[0m19:03:38.597908 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-07-18 19:03:38.586435 => 2024-07-18 19:03:38.597822
[0m19:03:38.598803 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m19:03:38.603307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys

LIMIT 0



    )
        ...
[0m19:03:38.605848 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.609493 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_distributed_new_data 
  ...
[0m19:03:38.612679 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.614977 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-07-18 19:03:38.408414 => 2024-07-18 19:03:38.614906
[0m19:03:38.615662 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579500dd20>]}
[0m19:03:38.616118 [info ] [Thread-1 (]: 67 of 95 OK created sql incremental model test.full_datestat ................... [[32mOK[0m in 0.31s]
[0m19:03:38.616565 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m19:03:38.628068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.631759 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.637376 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.639412 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m19:03:38.640173 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys

LIMIT 0



  ...
[0m19:03:38.648013 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.649141 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m19:03:38.653762 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.659655 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m19:03:38.663464 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.664751 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-07-18 19:03:38.599037 => 2024-07-18 19:03:38.664688
[0m19:03:38.665319 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57ab1fbbe0>]}
[0m19:03:38.665666 [info ] [Thread-2 (]: 70 of 95 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.08s]
[0m19:03:38.665995 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m19:03:38.667061 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m19:03:38.668194 [info ] [Thread-1 (]: 71 of 95 START sql table model test.graph_unique ............................... [RUN]
[0m19:03:38.668954 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m19:03:38.669204 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m19:03:38.669366 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m19:03:38.674462 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m19:03:38.674940 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-07-18 19:03:38.669462 => 2024-07-18 19:03:38.674874
[0m19:03:38.675231 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m19:03:38.679340 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup

LIMIT 0



    )
        ...
[0m19:03:38.695303 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.698033 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.703457 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.705858 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m19:03:38.706536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup

LIMIT 0



  ...
[0m19:03:38.711174 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.712458 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m19:03:38.716474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.720174 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m19:03:38.724419 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.725844 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-07-18 19:03:38.675355 => 2024-07-18 19:03:38.725766
[0m19:03:38.726572 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579710cbb0>]}
[0m19:03:38.726967 [info ] [Thread-1 (]: 71 of 95 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.06s]
[0m19:03:38.727423 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m19:03:38.729054 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m19:03:38.729511 [info ] [Thread-2 (]: 72 of 95 START sql table model test.graph_edge ................................. [RUN]
[0m19:03:38.730098 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m19:03:38.730263 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m19:03:38.730466 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m19:03:38.735813 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m19:03:38.736305 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-07-18 19:03:38.730623 => 2024-07-18 19:03:38.736235
[0m19:03:38.736482 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m19:03:38.742041 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash

LIMIT 0



    )
        ...
[0m19:03:38.760678 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.764172 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.769624 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.772216 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m19:03:38.772841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash

LIMIT 0



  ...
[0m19:03:38.780401 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.781687 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m19:03:38.785183 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.787810 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m19:03:38.793154 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.796625 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m19:03:38.799984 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.801276 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-07-18 19:03:38.736573 => 2024-07-18 19:03:38.801217
[0m19:03:38.801824 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794fb0d90>]}
[0m19:03:38.802161 [info ] [Thread-2 (]: 72 of 95 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.07s]
[0m19:03:38.802503 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m19:03:38.804166 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m19:03:38.805486 [info ] [Thread-1 (]: 73 of 95 START sql table model test.graph_glue ................................. [RUN]
[0m19:03:38.806301 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m19:03:38.806513 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m19:03:38.806707 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m19:03:38.811596 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m19:03:38.812074 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-07-18 19:03:38.806819 => 2024-07-18 19:03:38.811996
[0m19:03:38.812330 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m19:03:38.821165 [debug] [Thread-1 (]: Running iteration 0
[0m19:03:38.821770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m19:03:38.846980 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.848416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m19:03:38.877379 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:38.878439 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m19:03:38.883983 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.885208 [debug] [Thread-1 (]: VALUE: 0
[0m19:03:38.885437 [debug] [Thread-1 (]: Running iteration 1
[0m19:03:38.885555 [debug] [Thread-1 (]: Running iteration 2
[0m19:03:38.885659 [debug] [Thread-1 (]: Running iteration 3
[0m19:03:38.885759 [debug] [Thread-1 (]: Running iteration 4
[0m19:03:38.885860 [debug] [Thread-1 (]: Running iteration 5
[0m19:03:38.885966 [debug] [Thread-1 (]: Running iteration 6
[0m19:03:38.886066 [debug] [Thread-1 (]: Running iteration 7
[0m19:03:38.886172 [debug] [Thread-1 (]: Running iteration 8
[0m19:03:38.886279 [debug] [Thread-1 (]: Running iteration 9
[0m19:03:38.886378 [debug] [Thread-1 (]: Running iteration 10
[0m19:03:38.886478 [debug] [Thread-1 (]: Running iteration 11
[0m19:03:38.886577 [debug] [Thread-1 (]: Running iteration 12
[0m19:03:38.886677 [debug] [Thread-1 (]: Running iteration 13
[0m19:03:38.888305 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left

LIMIT 0



    )
        ...
[0m19:03:38.904022 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.908792 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:38.914173 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.916103 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m19:03:38.916675 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left

LIMIT 0



  ...
[0m19:03:38.922663 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:38.924283 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m19:03:38.928243 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.932418 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m19:03:38.936262 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:38.937621 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-07-18 19:03:38.812429 => 2024-07-18 19:03:38.937550
[0m19:03:38.938344 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57ab1fbdf0>]}
[0m19:03:38.938835 [info ] [Thread-1 (]: 73 of 95 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.13s]
[0m19:03:38.939183 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m19:03:38.940373 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m19:03:38.941490 [info ] [Thread-2 (]: 74 of 95 START sql table model test.graph_qid .................................. [RUN]
[0m19:03:38.942451 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m19:03:38.942719 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m19:03:38.942911 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m19:03:38.948447 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m19:03:38.948982 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-07-18 19:03:38.943024 => 2024-07-18 19:03:38.948904
[0m19:03:38.949282 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m19:03:38.955000 [debug] [Thread-2 (]: Running iteration 0
[0m19:03:38.955845 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m19:03:38.980199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:38.981414 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m19:03:39.003117 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.004312 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m19:03:39.011073 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.012209 [debug] [Thread-2 (]: VALUE: 0
[0m19:03:39.012437 [debug] [Thread-2 (]: Running iteration 1
[0m19:03:39.012552 [debug] [Thread-2 (]: Running iteration 2
[0m19:03:39.012656 [debug] [Thread-2 (]: Running iteration 3
[0m19:03:39.012765 [debug] [Thread-2 (]: Running iteration 4
[0m19:03:39.012866 [debug] [Thread-2 (]: Running iteration 5
[0m19:03:39.012966 [debug] [Thread-2 (]: Running iteration 6
[0m19:03:39.013069 [debug] [Thread-2 (]: Running iteration 7
[0m19:03:39.013169 [debug] [Thread-2 (]: Running iteration 8
[0m19:03:39.013354 [debug] [Thread-2 (]: Running iteration 9
[0m19:03:39.013502 [debug] [Thread-2 (]: Running iteration 10
[0m19:03:39.013618 [debug] [Thread-2 (]: Running iteration 11
[0m19:03:39.013725 [debug] [Thread-2 (]: Running iteration 12
[0m19:03:39.013824 [debug] [Thread-2 (]: Running iteration 13
[0m19:03:39.015090 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup

LIMIT 0



    )
        ...
[0m19:03:39.031598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.034403 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.039245 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.040609 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m19:03:39.041044 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup

LIMIT 0



  ...
[0m19:03:39.046243 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.047407 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m19:03:39.050922 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.054676 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m19:03:39.058516 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.060193 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-07-18 19:03:38.949434 => 2024-07-18 19:03:39.060132
[0m19:03:39.060751 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794cfc190>]}
[0m19:03:39.061089 [info ] [Thread-2 (]: 74 of 95 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.12s]
[0m19:03:39.061420 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m19:03:39.063093 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_events
[0m19:03:39.063637 [info ] [Thread-1 (]: 75 of 95 START sql table model test.full_events ................................ [RUN]
[0m19:03:39.064258 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m19:03:39.064477 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m19:03:39.064653 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m19:03:39.071856 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m19:03:39.076462 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.077977 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m19:03:39.082922 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.084674 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m19:03:39.089246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.091849 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m19:03:39.096238 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.097502 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m19:03:39.101750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.103939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m19:03:39.109308 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.111249 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m19:03:39.116762 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.119202 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m19:03:39.124492 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.126106 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m19:03:39.130622 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.131949 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m19:03:39.136244 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.138400 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m19:03:39.138901 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-07-18 19:03:39.064752 => 2024-07-18 19:03:39.138832
[0m19:03:39.139083 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m19:03:39.143466 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_events
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m19:03:39.196487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m19:03:39.199279 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.203782 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.206171 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m19:03:39.206691 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "qid", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.graph_qid
-- depends_on: test.link_events
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  ...
[0m19:03:39.276246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m19:03:39.277497 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m19:03:39.281125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.284934 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m19:03:39.288728 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.289965 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-07-18 19:03:39.139175 => 2024-07-18 19:03:39.289908
[0m19:03:39.290555 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d00be0>]}
[0m19:03:39.290923 [info ] [Thread-1 (]: 75 of 95 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.23s]
[0m19:03:39.291246 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m19:03:39.292750 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m19:03:39.293697 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m19:03:39.293335 [info ] [Thread-2 (]: 76 of 95 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m19:03:39.295326 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m19:03:39.294218 [info ] [Thread-1 (]: 77 of 95 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m19:03:39.295860 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m19:03:39.296425 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m19:03:39.296758 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m19:03:39.297044 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m19:03:39.307018 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m19:03:39.307682 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m19:03:39.311833 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m19:03:39.312382 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-07-18 19:03:39.297467 => 2024-07-18 19:03:39.312278
[0m19:03:39.312681 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m19:03:39.317379 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m19:03:39.318582 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-07-18 19:03:39.308151 => 2024-07-18 19:03:39.318437
[0m19:03:39.319268 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m19:03:39.325060 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m19:03:39.342817 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:39.346598 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.351564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.354441 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m19:03:39.355240 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m19:03:39.360966 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:39.365357 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.371493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.470449 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m19:03:39.471605 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m19:03:39.473749 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m19:03:39.475616 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m19:03:39.479462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.484296 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m19:03:39.488420 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.489962 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-07-18 19:03:39.312825 => 2024-07-18 19:03:39.489891
[0m19:03:39.490717 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794cd6350>]}
[0m19:03:39.491341 [info ] [Thread-2 (]: 76 of 95 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.20s]
[0m19:03:39.491988 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m19:03:39.493146 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m19:03:39.493850 [info ] [Thread-2 (]: 78 of 95 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m19:03:39.494770 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m19:03:39.495139 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m19:03:39.495338 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m19:03:39.508709 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m19:03:39.509933 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:39.511869 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m19:03:39.513371 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-07-18 19:03:39.495447 => 2024-07-18 19:03:39.513093
[0m19:03:39.514455 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m19:03:39.519638 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




    )
        ...
[0m19:03:39.520608 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.529039 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m19:03:39.533533 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.535326 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-07-18 19:03:39.319586 => 2024-07-18 19:03:39.535234
[0m19:03:39.536285 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794daa620>]}
[0m19:03:39.536969 [info ] [Thread-1 (]: 77 of 95 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.24s]
[0m19:03:39.537501 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m19:03:39.538722 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m19:03:39.540120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.539340 [info ] [Thread-1 (]: 79 of 95 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m19:03:39.544602 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.545884 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m19:03:39.547718 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m19:03:39.548174 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m19:03:39.554407 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m19:03:39.555724 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-07-18 19:03:39.548418 => 2024-07-18 19:03:39.555529
[0m19:03:39.556301 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m19:03:39.562410 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




    )
        ...
[0m19:03:39.563532 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.566348 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m19:03:39.567426 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




  ...
[0m19:03:39.579394 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.580932 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m19:03:39.582421 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.587705 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.588681 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.596133 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m19:03:39.597902 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.599513 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m19:03:39.600450 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.602356 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-07-18 19:03:39.514774 => 2024-07-18 19:03:39.602279
[0m19:03:39.603338 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579735c370>]}
[0m19:03:39.603947 [info ] [Thread-2 (]: 78 of 95 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.11s]
[0m19:03:39.604716 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m19:03:39.605708 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




  ...
[0m19:03:39.607424 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m19:03:39.608418 [info ] [Thread-2 (]: 80 of 95 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m19:03:39.610637 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m19:03:39.611069 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m19:03:39.611257 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m19:03:39.616658 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m19:03:39.617715 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.619124 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m19:03:39.620316 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-07-18 19:03:39.611363 => 2024-07-18 19:03:39.620122
[0m19:03:39.621233 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m19:03:39.627854 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




    )
        ...
[0m19:03:39.628834 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.634758 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m19:03:39.638867 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.641416 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-07-18 19:03:39.556534 => 2024-07-18 19:03:39.641309
[0m19:03:39.642658 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794da95d0>]}
[0m19:03:39.643512 [info ] [Thread-1 (]: 79 of 95 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.10s]
[0m19:03:39.644565 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m19:03:39.645861 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.646259 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m19:03:39.649749 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.650488 [info ] [Thread-1 (]: 81 of 95 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m19:03:39.653566 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m19:03:39.653854 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m19:03:39.654026 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m19:03:39.660740 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m19:03:39.662108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.664150 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m19:03:39.665024 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-07-18 19:03:39.654126 => 2024-07-18 19:03:39.664829
[0m19:03:39.665677 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m19:03:39.671362 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




  ...
[0m19:03:39.670906 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




    )
        ...
[0m19:03:39.681856 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.683336 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m19:03:39.687301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.692871 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m19:03:39.694851 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.698741 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.699751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.703119 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-07-18 19:03:39.622056 => 2024-07-18 19:03:39.703049
[0m19:03:39.703914 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794da6380>]}
[0m19:03:39.704634 [info ] [Thread-2 (]: 80 of 95 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.09s]
[0m19:03:39.705340 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m19:03:39.706082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.708467 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m19:03:39.709654 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m19:03:39.710360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




  ...
[0m19:03:39.711191 [info ] [Thread-2 (]: 82 of 95 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m19:03:39.713887 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m19:03:39.714518 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m19:03:39.714866 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m19:03:39.730874 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.730297 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m19:03:39.733471 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m19:03:39.735240 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-07-18 19:03:39.714983 => 2024-07-18 19:03:39.735021
[0m19:03:39.735760 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m19:03:39.740766 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m19:03:39.742907 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.748713 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m19:03:39.752719 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.754615 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-07-18 19:03:39.665924 => 2024-07-18 19:03:39.754506
[0m19:03:39.755604 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57972faaa0>]}
[0m19:03:39.756436 [info ] [Thread-1 (]: 81 of 95 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.10s]
[0m19:03:39.757118 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m19:03:39.758461 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m19:03:39.759143 [info ] [Thread-1 (]: 83 of 95 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m19:03:39.759960 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m19:03:39.760193 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m19:03:39.760381 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m19:03:39.767563 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m19:03:39.768311 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:39.771717 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.773629 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-07-18 19:03:39.760493 => 2024-07-18 19:03:39.773368
[0m19:03:39.776416 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m19:03:39.781767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m19:03:39.782529 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.785477 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m19:03:39.786276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m19:03:39.800439 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.803796 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.804660 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.807316 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m19:03:39.812503 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.816967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m19:03:39.818386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.820896 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m19:03:39.822107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.824187 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-07-18 19:03:39.735860 => 2024-07-18 19:03:39.824108
[0m19:03:39.825530 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ebe3b0>]}
[0m19:03:39.827485 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m19:03:39.826751 [info ] [Thread-2 (]: 82 of 95 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.11s]
[0m19:03:39.829493 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m19:03:39.834120 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m19:03:39.834794 [info ] [Thread-2 (]: 84 of 95 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m19:03:39.835759 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m19:03:39.836048 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m19:03:39.836251 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m19:03:39.843469 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m19:03:39.844405 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.846094 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m19:03:39.847411 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-07-18 19:03:39.836373 => 2024-07-18 19:03:39.847196
[0m19:03:39.847993 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m19:03:39.852878 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




    )
        ...
[0m19:03:39.854927 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.864781 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m19:03:39.868779 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:39.870683 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-07-18 19:03:39.776595 => 2024-07-18 19:03:39.870563
[0m19:03:39.871780 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794daa620>]}
[0m19:03:39.872497 [info ] [Thread-1 (]: 83 of 95 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.11s]
[0m19:03:39.873753 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m19:03:39.874974 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.876448 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m19:03:39.880243 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.880920 [info ] [Thread-1 (]: 85 of 95 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m19:03:39.883482 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m19:03:39.883895 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m19:03:39.884142 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m19:03:39.888379 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m19:03:39.890043 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-07-18 19:03:39.884300 => 2024-07-18 19:03:39.889827
[0m19:03:39.891507 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.892218 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m19:03:39.895088 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m19:03:39.902723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




    )
        ...
[0m19:03:39.905512 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




  ...
[0m19:03:39.914733 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.916234 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m19:03:39.920475 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.924569 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:39.926753 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.931516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m19:03:39.932269 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.935222 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m19:03:39.938063 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




  ...
[0m19:03:39.939933 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.942170 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-07-18 19:03:39.848220 => 2024-07-18 19:03:39.942084
[0m19:03:39.943225 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794cd5870>]}
[0m19:03:39.944567 [info ] [Thread-2 (]: 84 of 95 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.11s]
[0m19:03:39.945156 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m19:03:39.946285 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m19:03:39.946819 [info ] [Thread-2 (]: 86 of 95 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m19:03:39.947615 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m19:03:39.948389 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.948651 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m19:03:39.949832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m19:03:39.950282 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m19:03:39.959416 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m19:03:39.960295 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.964519 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m19:03:39.965705 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-07-18 19:03:39.951817 => 2024-07-18 19:03:39.965481
[0m19:03:39.966930 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m19:03:39.972407 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m19:03:39.974274 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:39.976295 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-07-18 19:03:39.895810 => 2024-07-18 19:03:39.976169
[0m19:03:39.977744 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e93400>]}
[0m19:03:39.996562 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:39.999657 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:40.004607 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:40.006533 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m19:03:40.007204 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m19:03:40.024826 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:40.026184 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m19:03:40.031313 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:40.035103 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m19:03:40.039388 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:40.040741 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-07-18 19:03:39.967442 => 2024-07-18 19:03:40.040674
[0m19:03:40.041334 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794e99480>]}
[0m19:03:40.971738 [info ] [Thread-1 (]: 85 of 95 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m19:03:40.973228 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m19:03:40.972645 [info ] [Thread-2 (]: 86 of 95 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.09s]
[0m19:03:40.974768 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m19:03:40.975436 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m19:03:40.975982 [info ] [Thread-1 (]: 87 of 95 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m19:03:40.977217 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m19:03:40.978045 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m19:03:40.978586 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m19:03:40.982518 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m19:03:40.983228 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m19:03:40.984866 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-07-18 19:03:40.978966 => 2024-07-18 19:03:40.984667
[0m19:03:40.985454 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m19:03:40.984378 [info ] [Thread-2 (]: 88 of 95 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m19:03:40.993907 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m19:03:40.994762 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m19:03:40.995978 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m19:03:40.996304 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m19:03:41.010629 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m19:03:41.011174 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-18 19:03:40.996650 => 2024-07-18 19:03:41.011094
[0m19:03:41.011387 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m19:03:41.016623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m19:03:41.019435 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:41.023990 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.029134 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.030861 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m19:03:41.031442 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m19:03:41.041598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:41.044787 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.048258 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:41.049631 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m19:03:41.051033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.053647 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m19:03:41.054276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m19:03:41.056977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.061161 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m19:03:41.064473 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.065899 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-07-18 19:03:40.985878 => 2024-07-18 19:03:41.065828
[0m19:03:41.066582 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d3ff70>]}
[0m19:03:41.067052 [info ] [Thread-1 (]: 87 of 95 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.09s]
[0m19:03:41.067529 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m19:03:41.068491 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m19:03:41.068905 [info ] [Thread-1 (]: 89 of 95 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m19:03:41.069638 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m19:03:41.069965 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m19:03:41.070158 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m19:03:41.076353 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m19:03:41.077373 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-18 19:03:41.070266 => 2024-07-18 19:03:41.077191
[0m19:03:41.077783 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m19:03:41.083051 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m19:03:41.084051 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:41.085984 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m19:03:41.090483 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.096388 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m19:03:41.101932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.103802 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-18 19:03:41.011500 => 2024-07-18 19:03:41.103695
[0m19:03:41.104896 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794fa6b90>]}
[0m19:03:41.105751 [info ] [Thread-2 (]: 88 of 95 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.11s]
[0m19:03:41.106577 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m19:03:41.108123 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m19:03:41.109140 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:41.113493 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.109855 [info ] [Thread-2 (]: 90 of 95 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m19:03:41.115542 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m19:03:41.115898 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m19:03:41.116110 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m19:03:41.129887 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:41.133086 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m19:03:41.136237 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m19:03:41.137169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m19:03:41.137802 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-07-18 19:03:41.116218 => 2024-07-18 19:03:41.137594
[0m19:03:41.139755 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m19:03:41.147508 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m19:03:41.160815 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:41.162571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m19:03:41.168186 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.174757 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m19:03:41.176848 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:41.182275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.184003 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.186713 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-18 19:03:41.077903 => 2024-07-18 19:03:41.186618
[0m19:03:41.187597 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794da8e50>]}
[0m19:03:41.188294 [info ] [Thread-1 (]: 89 of 95 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.12s]
[0m19:03:41.188879 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m19:03:41.189694 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.192712 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m19:03:41.193500 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m19:03:41.194420 [info ] [Thread-1 (]: 91 of 95 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m19:03:41.195869 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m19:03:41.196449 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




  ...
[0m19:03:41.196986 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m19:03:41.198331 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m19:03:41.205079 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m19:03:41.206001 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-07-18 19:03:41.198474 => 2024-07-18 19:03:41.205806
[0m19:03:41.206651 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m19:03:41.215112 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m19:03:41.226180 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:41.228011 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m19:03:41.234459 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.240824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m19:03:41.245385 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.247310 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-07-18 19:03:41.140679 => 2024-07-18 19:03:41.247220
[0m19:03:41.248181 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57aabc17b0>]}
[0m19:03:41.248824 [info ] [Thread-2 (]: 90 of 95 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.13s]
[0m19:03:41.249499 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m19:03:41.250734 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:41.254361 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.255295 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m19:03:41.257578 [info ] [Thread-2 (]: 92 of 95 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m19:03:41.258718 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m19:03:41.259273 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m19:03:41.259758 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m19:03:41.267093 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m19:03:41.268043 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.270601 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m19:03:41.271763 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




  ...
[0m19:03:41.273166 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-07-18 19:03:41.259988 => 2024-07-18 19:03:41.272954
[0m19:03:41.273835 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m19:03:41.280266 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model
-- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m19:03:41.295539 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m19:03:41.296749 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m19:03:41.301406 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.305498 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m19:03:41.310347 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.311735 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-07-18 19:03:41.206884 => 2024-07-18 19:03:41.311663
[0m19:03:41.312379 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794b7f250>]}
[0m19:03:41.312871 [info ] [Thread-1 (]: 91 of 95 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.12s]
[0m19:03:41.313341 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m19:03:41.314657 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:41.318757 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.319474 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m19:03:41.320716 [info ] [Thread-1 (]: 93 of 95 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m19:03:41.322012 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m19:03:41.322457 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m19:03:41.322724 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m19:03:41.326578 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m19:03:41.327514 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.330860 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m19:03:41.331369 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-07-18 19:03:41.322831 => 2024-07-18 19:03:41.331231
[0m19:03:41.331873 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m19:03:41.336249 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model
-- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m19:03:41.338020 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model
-- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m19:03:41.368857 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m19:03:41.372498 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.378700 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.379925 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m19:03:41.383247 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m19:03:41.384595 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m19:03:41.386219 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model
-- depends_on: test.attr_mysecondfunnel_join_to_attr_prepare_with_qid




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m19:03:41.390511 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.394544 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m19:03:41.398658 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.399917 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-07-18 19:03:41.274110 => 2024-07-18 19:03:41.399850
[0m19:03:41.400470 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794d23d90>]}
[0m19:03:41.400800 [info ] [Thread-2 (]: 92 of 95 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.14s]
[0m19:03:41.401125 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m19:03:41.402097 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m19:03:41.402621 [info ] [Thread-2 (]: 94 of 95 START sql table model test.dataset_event_table ........................ [RUN]
[0m19:03:41.403415 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m19:03:41.403687 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m19:03:41.403850 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m19:03:41.502185 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.503014 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m19:03:41.506423 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m19:03:41.510067 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.514174 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.515002 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.519953 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m19:03:41.521760 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.531799 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m19:03:41.532668 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.534817 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-07-18 19:03:41.332076 => 2024-07-18 19:03:41.534753
[0m19:03:41.535542 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794eed210>]}
[0m19:03:41.536031 [info ] [Thread-1 (]: 93 of 95 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.21s]
[0m19:03:41.536460 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m19:03:41.537026 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m19:03:41.538305 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-07-18 19:03:41.403943 => 2024-07-18 19:03:41.538208
[0m19:03:41.537977 [info ] [Thread-1 (]: 95 of 95 START sql table model test.dataset_event_table2 ....................... [RUN]
[0m19:03:41.538957 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m19:03:41.540033 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table2'
[0m19:03:41.545302 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m19:03:41.545816 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table2)
[0m19:03:41.547591 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table2
[0m19:03:41.555964 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.561532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.565794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_events'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.571027 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.580136 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m19:03:41.580750 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (compile): 2024-07-18 19:03:41.547830 => 2024-07-18 19:03:41.580656
[0m19:03:41.580997 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table2
[0m19:03:41.586075 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

            

    
        create table test.dataset_event_table2__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.full_events
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m19:03:41.650658 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m19:03:41.654218 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.658896 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.662170 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m19:03:41.662898 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m19:03:41.665555 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m19:03:41.668477 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'dataset_event_table2__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m19:03:41.674128 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m19:03:41.676742 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m19:03:41.677368 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

  
    
    
        
        insert into test.dataset_event_table2__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "touch_type", "touch_time", "install_time", "event_time", "event_name", "event_source", "partner", "media_source", "campaign", "site_id", "ad", "country_code", "city", "appsflyer_id", "custom_uid", "platform", "is_retargeting", "is_primary_attribution", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "qid", "AppProfileMatchingHash")
  -- depends_on: test.full_datestat
-- depends_on: test.full_events
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as touch_type ,
        toDateTime(0) as touch_time ,
        toDateTime(0) as install_time ,
        toDateTime(0) as event_time ,
        toString('') as event_name ,
        toString('') as event_source ,
        toString('') as partner ,
        toString('') as media_source ,
        toString('') as campaign ,
        toString('') as site_id ,
        toString('') as ad ,
        toString('') as country_code ,
        toString('') as city ,
        toString('') as appsflyer_id ,
        toString('') as custom_uid ,
        toString('') as platform ,
        toString('') as is_retargeting ,
        toString('') as is_primary_attribution ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("touch_type") as touch_type ,
        toDateTime("touch_time") as touch_time ,
        toDateTime("install_time") as install_time ,
        toDateTime("event_time") as event_time ,
        toString("event_name") as event_name ,
        toString("event_source") as event_source ,
        toString("partner") as partner ,
        toString("media_source") as media_source ,
        toString("campaign") as campaign ,
        toString("site_id") as site_id ,
        toString("ad") as ad ,
        toString("country_code") as country_code ,
        toString("city") as city ,
        toString("appsflyer_id") as appsflyer_id ,
        toString("custom_uid") as custom_uid ,
        toString("platform") as platform ,
        toString("is_retargeting") as is_retargeting ,
        toString("is_primary_attribution") as is_primary_attribution ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m19:03:41.863854 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.19 seconds
[0m19:03:41.865402 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
EXCHANGE TABLES test.dataset_event_table2__dbt_backup AND test.dataset_event_table2 
  
  ...
[0m19:03:41.869259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.873228 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
drop table if exists test.dataset_event_table2__dbt_backup 
  ...
[0m19:03:41.877588 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.878979 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (execute): 2024-07-18 19:03:41.581099 => 2024-07-18 19:03:41.878914
[0m19:03:41.879655 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794c829e0>]}
[0m19:03:41.880141 [info ] [Thread-1 (]: 95 of 95 OK created sql table model test.dataset_event_table2 .................. [[32mOK[0m in 0.34s]
[0m19:03:41.880633 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m19:03:41.891692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.23 seconds
[0m19:03:41.893334 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m19:03:41.897148 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.903483 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m19:03:41.907574 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m19:03:41.909063 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-07-18 19:03:41.540506 => 2024-07-18 19:03:41.909002
[0m19:03:41.909612 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aceecf1-ba45-4ee2-b76b-17d0e32cc0e9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794c44190>]}
[0m19:03:41.909945 [info ] [Thread-2 (]: 94 of 95 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.51s]
[0m19:03:41.910286 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m19:03:41.913099 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m19:03:41.913692 [debug] [MainThread]: Connection 'master' was properly closed.
[0m19:03:41.913855 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table2' was left open.
[0m19:03:41.914024 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table2: Close
[0m19:03:41.914134 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m19:03:41.914247 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m19:03:41.914888 [info ] [MainThread]: 
[0m19:03:41.915220 [info ] [MainThread]: Finished running 21 view models, 24 incremental models, 50 table models in 0 hours 0 minutes and 12.70 seconds (12.70s).
[0m19:03:41.917948 [debug] [MainThread]: Command end result
[0m19:03:41.954145 [info ] [MainThread]: 
[0m19:03:41.954771 [info ] [MainThread]: [32mCompleted successfully[0m
[0m19:03:41.955119 [info ] [MainThread]: 
[0m19:03:41.955429 [info ] [MainThread]: Done. PASS=95 WARN=0 ERROR=0 SKIP=0 TOTAL=95
[0m19:03:41.956118 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ceb8b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794cea200>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5794ceb460>]}
[0m19:03:41.956517 [debug] [MainThread]: Flushing usage events

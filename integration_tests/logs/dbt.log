[0m15:35:11.509645 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m15:35:11.521994 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m15:35:11.523333 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m15:35:11.530061 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.535254 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m15:35:11.538736 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m15:35:11.539408 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m15:35:11.540811 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-04-16 15:35:11.457438 => 2024-04-16 15:35:11.540734
[0m15:35:11.542169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m15:35:11.543236 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2da89cdb-4b4f-46df-98d7-1f5a7fa8c509', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb1e4feb90>]}
[0m15:35:11.545240 [info ] [Thread-2 (]: 77 of 80 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.11s]
[0m15:35:11.546218 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m15:35:11.547202 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m15:35:11.547650 [info ] [Thread-2 (]: 78 of 80 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m15:35:11.548217 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m15:35:11.548343 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m15:35:11.548476 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m15:35:11.551343 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m15:35:11.552184 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.557185 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m15:35:11.558800 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-04-16 15:35:11.548560 => 2024-04-16 15:35:11.558588
[0m15:35:11.559678 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m15:35:11.564296 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m15:35:11.565603 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.567939 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-04-16 15:35:11.451821 => 2024-04-16 15:35:11.567771
[0m15:35:11.568913 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2da89cdb-4b4f-46df-98d7-1f5a7fa8c509', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb1e4fc100>]}
[0m15:35:11.569778 [info ] [Thread-1 (]: 76 of 80 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.14s]
[0m15:35:11.570371 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m15:35:11.571622 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m15:35:11.572156 [info ] [Thread-1 (]: 79 of 80 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m15:35:11.573051 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m15:35:11.573403 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m15:35:11.573568 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m15:35:11.577278 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m15:35:11.578059 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-04-16 15:35:11.573663 => 2024-04-16 15:35:11.577915
[0m15:35:11.578442 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m15:35:11.583680 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m15:35:11.595626 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m15:35:11.600109 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m15:35:11.607368 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.610133 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m15:35:11.612198 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m15:35:11.614785 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m15:35:11.617562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m15:35:11.623455 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.626480 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m15:35:11.627395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m15:35:11.639160 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m15:35:11.640300 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m15:35:11.647692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.652380 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m15:35:11.656267 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m15:35:11.657119 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m15:35:11.658339 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-04-16 15:35:11.559974 => 2024-04-16 15:35:11.658271
[0m15:35:11.660502 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m15:35:11.661890 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2da89cdb-4b4f-46df-98d7-1f5a7fa8c509', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb1e6f1ed0>]}
[0m15:35:11.664251 [info ] [Thread-2 (]: 78 of 80 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.11s]
[0m15:35:11.664743 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m15:35:11.669318 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.674413 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m15:35:11.678589 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m15:35:11.680193 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-04-16 15:35:11.578560 => 2024-04-16 15:35:11.680132
[0m15:35:11.680743 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2da89cdb-4b4f-46df-98d7-1f5a7fa8c509', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb1e6f34f0>]}
[0m15:35:11.681109 [info ] [Thread-1 (]: 79 of 80 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.11s]
[0m15:35:11.681554 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m15:35:11.683560 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m15:35:11.684312 [info ] [Thread-2 (]: 80 of 80 START sql table model test.dataset_event_table ........................ [RUN]
[0m15:35:11.684892 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m15:35:11.685050 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m15:35:11.685201 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m15:35:11.690682 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m15:35:11.697232 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.703920 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m15:35:11.708788 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m15:35:11.716558 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m15:35:11.718196 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-04-16 15:35:11.685295 => 2024-04-16 15:35:11.718026
[0m15:35:11.718716 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m15:35:11.723088 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


  
  
  
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
    )
        ...
[0m15:35:11.792489 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m15:35:11.795184 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m15:35:11.800509 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m15:35:11.803453 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m15:35:11.804584 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  


  
  
  
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
  ...
[0m15:35:11.927226 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m15:35:11.929342 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m15:35:11.935791 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m15:35:11.939241 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m15:35:11.943308 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m15:35:11.945371 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-04-16 15:35:11.718983 => 2024-04-16 15:35:11.945314
[0m15:35:11.945882 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2da89cdb-4b4f-46df-98d7-1f5a7fa8c509', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb1e5b35e0>]}
[0m15:35:11.946197 [info ] [Thread-2 (]: 80 of 80 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.26s]
[0m15:35:11.946536 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m15:35:11.949285 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m15:35:11.949810 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:35:11.949958 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table' was left open.
[0m15:35:11.950096 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: Close
[0m15:35:11.950190 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m15:35:11.950290 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m15:35:11.950925 [info ] [MainThread]: 
[0m15:35:11.951243 [info ] [MainThread]: Finished running 39 view models, 12 incremental models, 29 table models in 0 hours 0 minutes and 13.26 seconds (13.26s).
[0m15:35:11.953728 [debug] [MainThread]: Command end result
[0m15:35:12.049294 [info ] [MainThread]: 
[0m15:35:12.049763 [info ] [MainThread]: [32mCompleted successfully[0m
[0m15:35:12.050053 [info ] [MainThread]: 
[0m15:35:12.050295 [info ] [MainThread]: Done. PASS=80 WARN=0 ERROR=0 SKIP=0 TOTAL=80
[0m15:35:12.050880 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb343bbe50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb343bbe80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb2073c040>]}
[0m15:35:12.051215 [debug] [MainThread]: Flushing usage events


============================== 2024-04-17 10:26:25.151126 | 9e37b04a-a621-4b42-afd6-bab2b19ad48e ==============================
[0m10:26:25.151126 [info ] [MainThread]: Running with dbt=1.4.7
[0m10:26:25.154280 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'full_refresh': True, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m10:26:25.154866 [debug] [MainThread]: Tracking: tracking
[0m10:26:25.156612 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4891edc60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb489277940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb489277f40>]}
[0m10:26:25.194045 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m10:26:25.398810 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m10:26:25.399459 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/full/full.sql
[0m10:26:25.416574 [debug] [MainThread]: 1603: static parser failed on 4_business/full_events.sql
[0m10:26:25.446083 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_business/full_events.sql
[0m10:26:25.465652 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4885300d0>]}
[0m10:26:25.486326 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb488ad57e0>]}
[0m10:26:25.486742 [info ] [MainThread]: Found 80 models, 8 tests, 0 snapshots, 0 analyses, 528 macros, 0 operations, 22 seed files, 0 sources, 0 exposures, 0 metrics
[0m10:26:25.487039 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4891edc60>]}
[0m10:26:25.492561 [info ] [MainThread]: 
[0m10:26:25.494461 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:26:25.499013 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m10:26:25.507908 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m10:26:25.826227 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m10:26:25.829479 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:25.836581 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m10:26:25.836951 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m10:26:25.841870 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m10:26:25.847256 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:25.857237 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4886d2950>]}
[0m10:26:25.857904 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m10:26:25.858184 [info ] [MainThread]: 
[0m10:26:25.863917 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:26:25.864447 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:26:25.864962 [info ] [Thread-1 (]: 1 of 80 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m10:26:25.866610 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m10:26:25.865701 [info ] [Thread-2 (]: 2 of 80 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m10:26:25.867511 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m10:26:25.868607 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m10:26:25.869270 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:26:25.869943 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:26:25.931708 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_cohorts$')        
...
[0m10:26:25.933143 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m10:26:25.940328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:25.972844 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:25.977401 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:25.990220 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )  LIMIT 1
  ...
[0m10:26:25.997361 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:25.999224 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.006287 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.036363 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m10:26:26.037835 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-04-17 10:26:25.870233 => 2024-04-17 10:26:26.037692
[0m10:26:26.038193 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:26:26.074307 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m10:26:26.076929 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'period') AS period, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )
  )...
[0m10:26:26.079401 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_event_metrics$')        
...
[0m10:26:26.088435 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.094457 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:26:26.095336 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:26.100102 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.100757 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.102796 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:26:26.106381 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.107114 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.111173 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m10:26:26.113949 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.117589 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.118983 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m10:26:26.120408 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.122348 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.125357 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.132993 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.148502 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m10:26:26.159848 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m10:26:26.161073 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-04-17 10:26:25.892287 => 2024-04-17 10:26:26.160959
[0m10:26:26.161493 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:26:26.166045 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m10:26:26.166894 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.168574 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-04-17 10:26:26.038324 => 2024-04-17 10:26:26.168512
[0m10:26:26.169264 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474d353f0>]}
[0m10:26:26.169745 [info ] [Thread-1 (]: 1 of 80 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.30s]
[0m10:26:26.171240 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:26:26.171763 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:26:26.172156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )
  )...
[0m10:26:26.172597 [info ] [Thread-1 (]: 3 of 80 START sql view model test.normalize_adjust_events_default_events ....... [RUN]
[0m10:26:26.175950 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_events'
[0m10:26:26.176236 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_events)
[0m10:26:26.176409 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:26:26.180166 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_events$')        
...
[0m10:26:26.184804 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.188443 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:26:26.192402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.192979 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.197750 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.199758 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:26:26.203875 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.206739 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m10:26:26.207874 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.211321 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.215234 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.217058 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m10:26:26.219084 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.220769 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.221393 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.227874 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m10:26:26.232584 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.234043 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-04-17 10:26:26.161626 => 2024-04-17 10:26:26.233980
[0m10:26:26.234740 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474d253c0>]}
[0m10:26:26.235815 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.235240 [info ] [Thread-2 (]: 2 of 80 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.37s]
[0m10:26:26.245683 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m10:26:26.246432 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:26:26.247569 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:26:26.248771 [info ] [Thread-2 (]: 4 of 80 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m10:26:26.250297 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m10:26:26.250803 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m10:26:26.251550 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:26:26.255359 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_network$')        
...
[0m10:26:26.255742 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (compile): 2024-04-17 10:26:26.176501 => 2024-04-17 10:26:26.255664
[0m10:26:26.257048 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:26:26.262774 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m10:26:26.263895 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.269333 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_network'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.270495 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


  create view test.normalize_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
JSONExtractString(_airbyte_data, 'description') AS description, 
JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'section') AS section, 
JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )
  )...
[0m10:26:26.275733 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.278825 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.282416 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.286043 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:26:26.286808 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.289722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.291519 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.292784 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events to test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:26:26.294808 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.301049 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.309816 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events 
  
  ...
[0m10:26:26.310568 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m10:26:26.312798 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-04-17 10:26:26.251826 => 2024-04-17 10:26:26.312595
[0m10:26:26.313352 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:26:26.317882 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m10:26:26.318768 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.320803 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events__dbt_tmp to test.normalize_adjust_events_default_events 
  
  ...
[0m10:26:26.322205 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
JSONExtractString(_airbyte_data, 'installs') AS installs, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )
  )...
[0m10:26:26.324811 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.329295 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */
drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  ...
[0m10:26:26.332310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.335260 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:26:26.336352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.339593 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (execute): 2024-04-17 10:26:26.257390 => 2024-04-17 10:26:26.339530
[0m10:26:26.340628 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb47414b1f0>]}
[0m10:26:26.341148 [info ] [Thread-1 (]: 3 of 80 OK created sql view model test.normalize_adjust_events_default_events .. [[32mOK[0m in 0.17s]
[0m10:26:26.341929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.342351 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:26:26.343417 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:26:26.344072 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:26:26.345985 [info ] [Thread-1 (]: 5 of 80 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m10:26:26.348044 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m10:26:26.348456 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m10:26:26.349111 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.349560 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:26:26.353518 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m10:26:26.358373 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_deeplinks$')        
...
[0m10:26:26.362652 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.364240 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m10:26:26.366300 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.369488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.371224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.375219 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m10:26:26.378107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.379583 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-04-17 10:26:26.313688 => 2024-04-17 10:26:26.379511
[0m10:26:26.380482 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.381503 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474d26020>]}
[0m10:26:26.385281 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.386140 [info ] [Thread-2 (]: 4 of 80 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.13s]
[0m10:26:26.388088 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:26:26.388742 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:26:26.389591 [info ] [Thread-2 (]: 6 of 80 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m10:26:26.390925 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m10:26:26.391346 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m10:26:26.392077 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.392472 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:26:26.394160 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.399309 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m10:26:26.406029 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.415304 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.425079 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.427381 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m10:26:26.428210 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-04-17 10:26:26.353982 => 2024-04-17 10:26:26.428073
[0m10:26:26.428571 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:26:26.491211 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:26:26.496198 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m10:26:26.499312 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.501135 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )
  )...
[0m10:26:26.505720 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.507360 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.508966 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.512815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:26:26.513820 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.526086 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.533143 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:26:26.534811 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m10:26:26.537148 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-04-17 10:26:26.394698 => 2024-04-17 10:26:26.536899
[0m10:26:26.537833 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:26:26.544629 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.545464 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m10:26:26.548477 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m10:26:26.550560 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name != 'screen_view'
  )...
[0m10:26:26.552807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.554030 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m10:26:26.557577 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.562258 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m10:26:26.563673 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.567480 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:26:26.568843 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.570555 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-04-17 10:26:26.429000 => 2024-04-17 10:26:26.570431
[0m10:26:26.571295 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.571953 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4741f2740>]}
[0m10:26:26.573428 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:26:26.574274 [info ] [Thread-1 (]: 5 of 80 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.22s]
[0m10:26:26.575984 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:26:26.576688 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:26:26.577262 [info ] [Thread-1 (]: 7 of 80 START sql view model test.normalize_appmetrica_events_default_install .. [RUN]
[0m10:26:26.578443 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_install'
[0m10:26:26.579943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.580292 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_install)
[0m10:26:26.582992 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m10:26:26.583615 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:26:26.588091 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_installations$')        
...
[0m10:26:26.591440 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.592858 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m10:26:26.596202 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.600658 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m10:26:26.601990 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.605389 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.608616 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.610186 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-04-17 10:26:26.538111 => 2024-04-17 10:26:26.610121
[0m10:26:26.610829 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.611661 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474107f40>]}
[0m10:26:26.614380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.615631 [info ] [Thread-2 (]: 6 of 80 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.22s]
[0m10:26:26.617333 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:26:26.617850 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:26:26.618811 [info ] [Thread-2 (]: 8 of 80 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m10:26:26.620050 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m10:26:26.620351 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m10:26:26.620538 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:26:26.624374 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m10:26:26.625347 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.628525 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.634567 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.639542 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.640254 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.653869 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.657525 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m10:26:26.659929 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.661551 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (compile): 2024-04-17 10:26:26.584766 => 2024-04-17 10:26:26.661402
[0m10:26:26.662384 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:26:26.668537 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m10:26:26.669493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.671062 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.672348 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


  create view test.normalize_appmetrica_events_default_install__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'install_datetime') AS install_datetime, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )
  )...
[0m10:26:26.676621 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.687587 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.694404 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m10:26:26.698251 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:26:26.700701 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-04-17 10:26:26.620703 => 2024-04-17 10:26:26.700534
[0m10:26:26.701423 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:26:26.705696 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m10:26:26.706580 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.708253 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install to test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:26:26.709332 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_datetime) AS event_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m10:26:26.711625 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.716693 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install 
  
  ...
[0m10:26:26.720118 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.721747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install__dbt_tmp to test.normalize_appmetrica_events_default_install 
  
  ...
[0m10:26:26.724903 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.725739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:26.729256 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */
drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  ...
[0m10:26:26.733023 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:26:26.737116 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.737659 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.738659 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:26:26.739961 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (execute): 2024-04-17 10:26:26.663165 => 2024-04-17 10:26:26.739872
[0m10:26:26.741659 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474b02d10>]}
[0m10:26:26.742636 [info ] [Thread-1 (]: 7 of 80 OK created sql view model test.normalize_appmetrica_events_default_install  [[32mOK[0m in 0.16s]
[0m10:26:26.743065 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:26:26.743484 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:26:26.744801 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.745267 [info ] [Thread-1 (]: 9 of 80 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m10:26:26.748755 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m10:26:26.749820 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m10:26:26.751669 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m10:26:26.751952 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:26:26.755509 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_sessions_starts$')        
...
[0m10:26:26.758790 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.759924 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m10:26:26.763533 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.764862 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.768567 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.774384 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m10:26:26.780371 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.781485 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.783112 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-04-17 10:26:26.701608 => 2024-04-17 10:26:26.783023
[0m10:26:26.786159 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.787282 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4741dadd0>]}
[0m10:26:26.789326 [info ] [Thread-2 (]: 8 of 80 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.17s]
[0m10:26:26.789892 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:26:26.790970 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:26:26.791776 [info ] [Thread-2 (]: 10 of 80 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m10:26:26.792346 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m10:26:26.792514 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m10:26:26.793507 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.794370 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:26:26.797277 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.802452 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_registry_default_[^_]+_profiles$')        
...
[0m10:26:26.808232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.820075 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m10:26:26.820841 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:26.824873 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_registry_default_testaccount_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.826423 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-04-17 10:26:26.752128 => 2024-04-17 10:26:26.826222
[0m10:26:26.826990 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:26:26.832764 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m10:26:26.833705 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.836874 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.838183 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_start_datetime') AS session_start_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )
  )...
[0m10:26:26.842937 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.846035 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.850465 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.853578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:26:26.854989 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.862855 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.864096 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:26:26.865456 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m10:26:26.867254 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-04-17 10:26:26.797816 => 2024-04-17 10:26:26.867054
[0m10:26:26.867799 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:26:26.874120 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.874607 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m10:26:26.878175 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:26:26.880704 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )
  )...
[0m10:26:26.881939 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.882996 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:26:26.886047 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.890978 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m10:26:26.891749 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.895704 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:26:26.898632 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.899784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:26:26.900318 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.902688 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-04-17 10:26:26.827413 => 2024-04-17 10:26:26.902616
[0m10:26:26.903826 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474aa5b70>]}
[0m10:26:26.904461 [info ] [Thread-1 (]: 9 of 80 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.15s]
[0m10:26:26.905269 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.905852 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:26:26.908626 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m10:26:26.909369 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:26:26.912309 [info ] [Thread-1 (]: 11 of 80 START sql view model test.normalize_mt_datestat_default_banners ....... [RUN]
[0m10:26:26.913575 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners'
[0m10:26:26.914654 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.915132 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners)
[0m10:26:26.916692 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m10:26:26.917417 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:26:26.922645 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners$')        
...
[0m10:26:26.924398 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.931372 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.932051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m10:26:26.935998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.940158 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.941425 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-04-17 10:26:26.868051 => 2024-04-17 10:26:26.941368
[0m10:26:26.942126 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:26.942994 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474a48cd0>]}
[0m10:26:26.945154 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.946058 [info ] [Thread-2 (]: 10 of 80 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.15s]
[0m10:26:26.948878 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:26:26.949505 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:26:26.950871 [info ] [Thread-2 (]: 12 of 80 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m10:26:26.952929 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m10:26:26.953460 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m10:26:26.953886 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:26:26.957930 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners_statistics$')        
...
[0m10:26:26.959219 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.962949 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:26.970245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.978100 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m10:26:26.979012 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:26.984412 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:26.986393 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (compile): 2024-04-17 10:26:26.918985 => 2024-04-17 10:26:26.986239
[0m10:26:26.987205 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:26:26.991437 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m10:26:26.992430 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:26.995962 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )  LIMIT 1
  ...
[0m10:26:26.996847 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


  create view test.normalize_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )
  )...
[0m10:26:27.003280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.005076 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:27.009043 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.012662 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:26:27.013943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.022946 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.024130 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners to test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:26:27.025923 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m10:26:27.028262 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-04-17 10:26:26.954083 => 2024-04-17 10:26:27.028028
[0m10:26:27.028837 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:26:27.033456 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m10:26:27.034179 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.038707 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners 
  
  ...
[0m10:26:27.039942 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )
  )...
[0m10:26:27.042300 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.043363 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners__dbt_tmp to test.normalize_mt_datestat_default_banners 
  
  ...
[0m10:26:27.048176 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.052015 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */
drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  ...
[0m10:26:27.054078 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.057391 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:26:27.058863 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.060335 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (execute): 2024-04-17 10:26:26.987439 => 2024-04-17 10:26:27.060270
[0m10:26:27.062045 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474228f70>]}
[0m10:26:27.062870 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.063383 [info ] [Thread-1 (]: 11 of 80 OK created sql view model test.normalize_mt_datestat_default_banners .. [[32mOK[0m in 0.15s]
[0m10:26:27.064949 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:26:27.065610 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:26:27.066974 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:26:27.068526 [info ] [Thread-1 (]: 13 of 80 START sql view model test.normalize_mt_datestat_default_campaigns ..... [RUN]
[0m10:26:27.069677 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns'
[0m10:26:27.070504 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.070942 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns)
[0m10:26:27.074590 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m10:26:27.075364 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:26:27.082411 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_campaigns$')        
...
[0m10:26:27.084125 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.085926 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m10:26:27.089239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.089815 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.093757 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.098220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m10:26:27.103334 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.104046 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.105360 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-04-17 10:26:27.029100 => 2024-04-17 10:26:27.105304
[0m10:26:27.107658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )  LIMIT 1
  ...
[0m10:26:27.108603 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474a48e80>]}
[0m10:26:27.110294 [info ] [Thread-2 (]: 12 of 80 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.16s]
[0m10:26:27.111378 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:26:27.112035 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:26:27.113300 [info ] [Thread-2 (]: 14 of 80 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m10:26:27.114483 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m10:26:27.115174 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m10:26:27.116549 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.116897 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:26:27.118901 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:27.124040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_utmcraft_registry_default_[^_]+_utmresult$')        
...
[0m10:26:27.130762 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.135831 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m10:26:27.136677 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.141683 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = '_airbyte_raw_utmcraft_registry_default_testaccount_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.143085 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (compile): 2024-04-17 10:26:27.076751 => 2024-04-17 10:26:27.142822
[0m10:26:27.143662 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:26:27.148517 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m10:26:27.149583 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


  create view test.normalize_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )
  )...
[0m10:26:27.153251 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.155521 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )  LIMIT 1
  ...
[0m10:26:27.159709 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.160448 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.165687 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:26:27.167531 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:27.171166 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.172290 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns to test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:26:27.173865 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.182130 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m10:26:27.182974 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.186238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m10:26:27.187579 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-04-17 10:26:27.119316 => 2024-04-17 10:26:27.187408
[0m10:26:27.188174 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:26:27.192283 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m10:26:27.193307 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.194275 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns__dbt_tmp to test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m10:26:27.196143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
JSONExtractString(_airbyte_data, 'data') AS data, 
JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )
  )...
[0m10:26:27.198275 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.202323 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */
drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m10:26:27.205279 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.206545 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (execute): 2024-04-17 10:26:27.143820 => 2024-04-17 10:26:27.206488
[0m10:26:27.207413 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.208325 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740f5c90>]}
[0m10:26:27.211396 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:26:27.212290 [info ] [Thread-1 (]: 13 of 80 OK created sql view model test.normalize_mt_datestat_default_campaigns  [[32mOK[0m in 0.14s]
[0m10:26:27.214619 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:26:27.215059 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:26:27.215559 [info ] [Thread-1 (]: 15 of 80 START sql view model test.normalize_vkads_datestat_default_ad_plans ... [RUN]
[0m10:26:27.217228 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans'
[0m10:26:27.218058 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.218553 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans)
[0m10:26:27.219706 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:26:27.220068 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:26:27.225540 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans$')        
...
[0m10:26:27.227799 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.231424 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m10:26:27.233201 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.237188 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.238663 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.240435 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m10:26:27.242505 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.244811 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )  LIMIT 1
  ...
[0m10:26:27.245871 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.252088 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m10:26:27.253103 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.255679 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:27.257033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.258533 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-04-17 10:26:27.188395 => 2024-04-17 10:26:27.258458
[0m10:26:27.259592 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474a490c0>]}
[0m10:26:27.260191 [info ] [Thread-2 (]: 14 of 80 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.15s]
[0m10:26:27.261314 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.261840 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:26:27.278630 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:26:27.282025 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m10:26:27.283209 [info ] [Thread-2 (]: 16 of 80 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:26:27.284674 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m10:26:27.285353 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m10:26:27.285914 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:26:27.289568 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans_statistics$')        
...
[0m10:26:27.290015 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (compile): 2024-04-17 10:26:27.220887 => 2024-04-17 10:26:27.289885
[0m10:26:27.292141 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:26:27.298373 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m10:26:27.299217 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


  create view test.normalize_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
JSONExtractString(_airbyte_data, 'created') AS created, 
JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'objective') AS objective, 
JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
JSONExtractString(_airbyte_data, 'status') AS status, 
JSONExtractString(_airbyte_data, 'updated') AS updated, 
JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )
  )...
[0m10:26:27.300770 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.375603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.381664 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.383948 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )  LIMIT 1
  ...
[0m10:26:27.385310 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m10:26:27.388903 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:26:27.389683 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.392048 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:27.392973 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.395376 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans to test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:26:27.398147 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.398796 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.412776 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m10:26:27.416050 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m10:26:27.418044 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-17 10:26:27.286268 => 2024-04-17 10:26:27.417792
[0m10:26:27.418563 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:26:27.422590 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m10:26:27.423440 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.424971 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m10:26:27.426330 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'moat') AS moat, 
JSONExtractString(_airbyte_data, 'playable') AS playable, 
JSONExtractString(_airbyte_data, 'romi') AS romi, 
JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
JSONExtractString(_airbyte_data, 'tps') AS tps, 
JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )
  )...
[0m10:26:27.428503 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.432643 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m10:26:27.435816 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.437120 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (execute): 2024-04-17 10:26:27.293142 => 2024-04-17 10:26:27.437059
[0m10:26:27.438041 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.438762 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e69d090>]}
[0m10:26:27.442810 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:26:27.443834 [info ] [Thread-1 (]: 15 of 80 OK created sql view model test.normalize_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.22s]
[0m10:26:27.445889 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:26:27.446435 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:26:27.448161 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.447088 [info ] [Thread-1 (]: 17 of 80 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m10:26:27.449769 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:26:27.450651 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m10:26:27.452357 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m10:26:27.452798 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:26:27.456522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_yd_datestat_default_[^_]+_custom_report$')        
...
[0m10:26:27.457345 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.461665 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:26:27.464459 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.465373 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.469004 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = '_airbyte_raw_yd_datestat_default_testaccount_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.471072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:26:27.475629 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.476245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.480224 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m10:26:27.483711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )  LIMIT 1
  ...
[0m10:26:27.487532 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.489125 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-17 10:26:27.418820 => 2024-04-17 10:26:27.489045
[0m10:26:27.489829 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e65f880>]}
[0m10:26:27.490391 [info ] [Thread-2 (]: 16 of 80 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.21s]
[0m10:26:27.490806 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:26:27.491483 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.491947 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:26:27.494764 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:27.496148 [info ] [Thread-2 (]: 18 of 80 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:26:27.499899 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m10:26:27.500387 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m10:26:27.500666 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:26:27.504288 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_ym_events_default_[^_]+_yandex_metrika_stream$')        
...
[0m10:26:27.509516 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.510365 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.524714 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m10:26:27.531005 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = '_airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.533215 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-04-17 10:26:27.453002 => 2024-04-17 10:26:27.532983
[0m10:26:27.533752 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:26:27.537971 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m10:26:27.539040 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.541506 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )  LIMIT 1
  ...
[0m10:26:27.542999 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
JSONExtractString(_airbyte_data, 'Date') AS Date, 
JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )
  )...
[0m10:26:27.548237 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.550346 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:26:27.552936 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.556216 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:26:27.556943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.574853 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:27.581611 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:26:27.585040 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m10:26:27.587180 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-04-17 10:26:27.500808 => 2024-04-17 10:26:27.587018
[0m10:26:27.587532 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:26:27.591749 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m10:26:27.592461 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.596630 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m10:26:27.597886 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )
  )...
[0m10:26:27.600069 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.601240 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m10:26:27.604532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.609532 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m10:26:27.610650 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.613684 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:26:27.617296 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.618341 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:26:27.619861 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.621638 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-04-17 10:26:27.533919 => 2024-04-17 10:26:27.621554
[0m10:26:27.622398 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.623063 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474ad3940>]}
[0m10:26:27.626378 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:26:27.627233 [info ] [Thread-1 (]: 17 of 80 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.17s]
[0m10:26:27.628979 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:26:27.629451 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:26:27.630288 [info ] [Thread-1 (]: 19 of 80 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m10:26:27.631405 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m10:26:27.631997 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.632361 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m10:26:27.633546 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:26:27.633941 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:26:27.646224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.647095 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m10:26:27.651895 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m10:26:27.654247 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-04-17 10:26:27.634826 => 2024-04-17 10:26:27.654005
[0m10:26:27.655046 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:26:27.661654 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.668879 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-04-17 10:26:27.587676 => 2024-04-17 10:26:27.668819
[0m10:26:27.669718 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474b02230>]}
[0m10:26:27.682734 [info ] [Thread-2 (]: 18 of 80 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.17s]
[0m10:26:27.694280 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:26:27.711097 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:26:27.713078 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

    )
        ...
[0m10:26:27.715002 [info ] [Thread-2 (]: 20 of 80 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m10:26:27.717563 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m10:26:27.717823 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m10:26:27.717977 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:26:27.721527 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m10:26:27.722124 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-04-17 10:26:27.718074 => 2024-04-17 10:26:27.722024
[0m10:26:27.722388 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:26:27.728375 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

    )
        ...
[0m10:26:27.733737 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:27.738316 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.742995 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.744639 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m10:26:27.745757 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:27.750389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.751793 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

  
    ...
[0m10:26:27.756392 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.757799 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m10:26:27.758200 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

  
    ...
[0m10:26:27.762308 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.768101 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:26:27.769483 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.772102 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:26:27.775212 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.775981 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.777193 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    rename table test.incremental_adjust_events_default_cohorts__dbt_tmp to test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:26:27.778980 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    rename table test.incremental_adjust_events_default_event_metrics__dbt_tmp to test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:26:27.784577 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.785218 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.789668 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
EXCHANGE TABLES test.incremental_adjust_events_default_cohorts__dbt_backup AND test.incremental_adjust_events_default_cohorts 
  
  ...
[0m10:26:27.791169 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
EXCHANGE TABLES test.incremental_adjust_events_default_event_metrics__dbt_backup AND test.incremental_adjust_events_default_event_metrics 
  
  ...
[0m10:26:27.796824 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.804442 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  ...
[0m10:26:27.805357 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.811020 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m10:26:27.812449 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.814888 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-04-17 10:26:27.655270 => 2024-04-17 10:26:27.814823
[0m10:26:27.815668 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.816391 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474ad2d40>]}
[0m10:26:27.818081 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-04-17 10:26:27.722518 => 2024-04-17 10:26:27.818017
[0m10:26:27.818736 [info ] [Thread-1 (]: 19 of 80 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.19s]
[0m10:26:27.820419 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740b93f0>]}
[0m10:26:27.821176 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:26:27.822061 [info ] [Thread-2 (]: 20 of 80 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.10s]
[0m10:26:27.823003 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:26:27.823749 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:26:27.824181 [info ] [Thread-1 (]: 21 of 80 START sql view model test.incremental_adjust_events_default_events .... [RUN]
[0m10:26:27.824945 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:26:27.825991 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_events'
[0m10:26:27.826824 [info ] [Thread-2 (]: 22 of 80 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m10:26:27.827614 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_events)
[0m10:26:27.828338 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m10:26:27.828753 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:26:27.829208 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m10:26:27.833247 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m10:26:27.833949 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:26:27.837856 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m10:26:27.838468 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-04-17 10:26:27.834685 => 2024-04-17 10:26:27.838362
[0m10:26:27.839089 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (compile): 2024-04-17 10:26:27.829661 => 2024-04-17 10:26:27.838775
[0m10:26:27.839619 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:26:27.840002 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:26:27.847141 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

    )
        ...
[0m10:26:27.854117 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m10:26:27.855246 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */


  create view test.incremental_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_adjust_events_default_events

  )...
[0m10:26:27.865255 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.869055 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:26:27.870824 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:27.873823 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.875154 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.877468 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events to test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:26:27.880770 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.881605 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.883284 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m10:26:27.886671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events 
  
  ...
[0m10:26:27.888956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_tmp ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

  
    ...
[0m10:26:27.890859 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.892312 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events__dbt_tmp to test.incremental_adjust_events_default_events 
  
  ...
[0m10:26:27.896965 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.903317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  ...
[0m10:26:27.905113 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:27.908451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:26:27.910088 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.912019 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (execute): 2024-04-17 10:26:27.847656 => 2024-04-17 10:26:27.911828
[0m10:26:27.912909 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474a48610>]}
[0m10:26:27.913943 [info ] [Thread-1 (]: 21 of 80 OK created sql view model test.incremental_adjust_events_default_events  [[32mOK[0m in 0.09s]
[0m10:26:27.914894 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.915304 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:26:27.916522 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    rename table test.incremental_adjust_events_default_network__dbt_tmp to test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:26:27.917041 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:26:27.918399 [info ] [Thread-1 (]: 23 of 80 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m10:26:27.920286 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m10:26:27.920574 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m10:26:27.920758 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:26:27.921795 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.926200 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m10:26:27.928353 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
EXCHANGE TABLES test.incremental_adjust_events_default_network__dbt_backup AND test.incremental_adjust_events_default_network 
  
  ...
[0m10:26:27.930528 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-04-17 10:26:27.922251 => 2024-04-17 10:26:27.930352
[0m10:26:27.930994 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:26:27.936560 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

    )
        ...
[0m10:26:27.937760 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.942482 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  ...
[0m10:26:27.947363 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:27.949253 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-04-17 10:26:27.840263 => 2024-04-17 10:26:27.949186
[0m10:26:27.949882 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740bbf40>]}
[0m10:26:27.950211 [info ] [Thread-2 (]: 22 of 80 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.12s]
[0m10:26:27.950582 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:26:27.950879 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:26:27.951895 [info ] [Thread-2 (]: 24 of 80 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m10:26:27.953188 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m10:26:27.953851 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m10:26:27.954099 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:26:27.957838 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m10:26:27.958876 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:27.959306 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-04-17 10:26:27.954216 => 2024-04-17 10:26:27.959183
[0m10:26:27.963022 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.963747 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:26:27.971162 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

    )
        ...
[0m10:26:27.975222 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.976793 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m10:26:27.977370 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

  
    ...
[0m10:26:27.989492 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:27.990152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:27.992707 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:27.996611 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:26:28.001104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.002552 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    rename table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp to test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:26:28.003825 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:28.006041 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m10:26:28.007139 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.008247 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_deeplinks__dbt_backup AND test.incremental_appmetrica_events_default_deeplinks 
  
  ...
[0m10:26:28.009279 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_tmp ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

  
    ...
[0m10:26:28.012641 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.018188 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m10:26:28.022260 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.023629 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-04-17 10:26:27.931102 => 2024-04-17 10:26:28.023555
[0m10:26:28.024413 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474a49600>]}
[0m10:26:28.025554 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:28.024980 [info ] [Thread-1 (]: 23 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.10s]
[0m10:26:28.028562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:26:28.029557 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:26:28.031215 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:26:28.032160 [info ] [Thread-1 (]: 25 of 80 START sql incremental model test.incremental_appmetrica_events_default_install  [RUN]
[0m10:26:28.032867 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_install'
[0m10:26:28.033219 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_install)
[0m10:26:28.034328 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.035119 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:26:28.038251 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    rename table test.incremental_appmetrica_events_default_events__dbt_tmp to test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:26:28.050516 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m10:26:28.053241 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (compile): 2024-04-17 10:26:28.039226 => 2024-04-17 10:26:28.053006
[0m10:26:28.053937 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:26:28.063490 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

            

    
        create table test.incremental_appmetrica_events_default_install__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

    )
        ...
[0m10:26:28.064765 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:28.067899 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_events__dbt_backup AND test.incremental_appmetrica_events_default_events 
  
  ...
[0m10:26:28.074632 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:28.083781 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  ...
[0m10:26:28.084937 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:28.088575 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:28.089560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.092551 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-04-17 10:26:27.965926 => 2024-04-17 10:26:28.092486
[0m10:26:28.093172 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474223790>]}
[0m10:26:28.093616 [info ] [Thread-2 (]: 24 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.14s]
[0m10:26:28.094067 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:26:28.094534 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:26:28.095468 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:28.096245 [info ] [Thread-2 (]: 26 of 80 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m10:26:28.098775 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m10:26:28.099501 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m10:26:28.100171 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m10:26:28.100492 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:26:28.103698 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m10:26:28.104383 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_install__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

  
    ...
[0m10:26:28.105891 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-04-17 10:26:28.100677 => 2024-04-17 10:26:28.105748
[0m10:26:28.106937 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:26:28.115348 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

    )
        ...
[0m10:26:28.116871 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:28.119617 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    drop table if exists test.incremental_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:26:28.124286 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.125607 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    rename table test.incremental_appmetrica_events_default_install__dbt_tmp to test.incremental_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:26:28.129228 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.130207 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:28.131820 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_install__dbt_backup AND test.incremental_appmetrica_events_default_install 
  
  ...
[0m10:26:28.135324 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:28.139805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.140532 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.144439 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_backup 
  ...
[0m10:26:28.147254 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m10:26:28.149468 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_tmp ("__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

  
    ...
[0m10:26:28.151360 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.153023 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (execute): 2024-04-17 10:26:28.054267 => 2024-04-17 10:26:28.152912
[0m10:26:28.153845 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740e52a0>]}
[0m10:26:28.167239 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:28.170124 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:26:28.173206 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.174310 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    rename table test.incremental_appmetrica_events_default_screen_view__dbt_tmp to test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:26:28.177679 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.179013 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_screen_view__dbt_backup AND test.incremental_appmetrica_events_default_screen_view 
  
  ...
[0m10:26:28.182765 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.186839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m10:26:28.189969 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:28.191295 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-04-17 10:26:28.107755 => 2024-04-17 10:26:28.191234
[0m10:26:28.191846 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e63f610>]}
[0m10:26:28.931272 [info ] [Thread-1 (]: 25 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_install  [[32mOK[0m in 0.12s]
[0m10:26:28.932935 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:26:28.932368 [info ] [Thread-2 (]: 26 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.09s]
[0m10:26:28.933777 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:26:28.934702 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:26:28.935323 [info ] [Thread-1 (]: 27 of 80 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m10:26:28.936178 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:26:28.937609 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m10:26:28.938301 [info ] [Thread-2 (]: 28 of 80 START sql view model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m10:26:28.938876 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m10:26:28.939676 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m10:26:28.940247 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:26:28.940616 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m10:26:28.948594 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m10:26:28.949070 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:26:28.953005 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m10:26:28.953585 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-04-17 10:26:28.941055 => 2024-04-17 10:26:28.953439
[0m10:26:28.954151 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:26:28.959147 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

    )
        ...
[0m10:26:28.961070 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-04-17 10:26:28.949854 => 2024-04-17 10:26:28.960814
[0m10:26:28.962238 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:26:28.968102 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m10:26:28.968581 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */


  create view test.incremental_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

  )...
[0m10:26:28.980660 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:28.984152 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:26:28.984908 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:26:28.988252 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:28.990591 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:28.993573 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles to test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:26:28.998552 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.001411 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m10:26:29.002948 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.005135 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m10:26:29.005815 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.007094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles__dbt_tmp to test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m10:26:29.008191 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

  
    ...
[0m10:26:29.010243 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.014470 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m10:26:29.018193 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.019690 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-04-17 10:26:28.962999 => 2024-04-17 10:26:29.019607
[0m10:26:29.020364 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e65f880>]}
[0m10:26:29.021427 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.020894 [info ] [Thread-2 (]: 28 of 80 OK created sql view model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.08s]
[0m10:26:29.024440 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:26:29.025111 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:26:29.026657 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:26:29.027733 [info ] [Thread-2 (]: 29 of 80 START sql view model test.incremental_mt_datestat_default_banners ..... [RUN]
[0m10:26:29.028465 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners'
[0m10:26:29.028739 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners)
[0m10:26:29.028937 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:26:29.029762 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.033455 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m10:26:29.035380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    rename table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp to test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:26:29.037294 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (compile): 2024-04-17 10:26:29.030188 => 2024-04-17 10:26:29.037192
[0m10:26:29.037684 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:26:29.042430 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m10:26:29.043259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.044837 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_sessions_starts__dbt_backup AND test.incremental_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:26:29.045355 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */


  create view test.incremental_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_banners

  )...
[0m10:26:29.051670 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.057954 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m10:26:29.058798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.134646 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m10:26:29.136807 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:26:29.138495 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-04-17 10:26:28.954472 => 2024-04-17 10:26:29.138435
[0m10:26:29.139993 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e75d990>]}
[0m10:26:29.140601 [info ] [Thread-1 (]: 27 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.20s]
[0m10:26:29.141088 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:26:29.141846 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:26:29.143294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.142702 [info ] [Thread-1 (]: 30 of 80 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m10:26:29.144843 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners to test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:26:29.145603 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m10:26:29.147428 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m10:26:29.148063 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:26:29.152650 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m10:26:29.153935 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.157429 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners 
  
  ...
[0m10:26:29.158716 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-04-17 10:26:29.148692 => 2024-04-17 10:26:29.158536
[0m10:26:29.159231 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:26:29.164703 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

    )
        ...
[0m10:26:29.165991 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.168723 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners__dbt_tmp to test.incremental_mt_datestat_default_banners 
  
  ...
[0m10:26:29.172417 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.176475 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  ...
[0m10:26:29.181117 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.183503 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (execute): 2024-04-17 10:26:29.037838 => 2024-04-17 10:26:29.183439
[0m10:26:29.184771 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:29.185826 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474d35a50>]}
[0m10:26:29.188559 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.189564 [info ] [Thread-2 (]: 29 of 80 OK created sql view model test.incremental_mt_datestat_default_banners  [[32mOK[0m in 0.16s]
[0m10:26:29.193224 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:26:29.193973 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:26:29.194721 [info ] [Thread-2 (]: 31 of 80 START sql view model test.incremental_mt_datestat_default_campaigns ... [RUN]
[0m10:26:29.196150 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns'
[0m10:26:29.196713 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns)
[0m10:26:29.197175 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:26:29.201351 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m10:26:29.202268 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.203665 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m10:26:29.204151 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_tmp ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

  
    ...
[0m10:26:29.205583 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (compile): 2024-04-17 10:26:29.197555 => 2024-04-17 10:26:29.205382
[0m10:26:29.206059 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:26:29.211654 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m10:26:29.212377 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */


  create view test.incremental_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_campaigns

  )...
[0m10:26:29.214928 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.218622 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:26:29.221543 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.222061 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.223116 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    rename table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp to test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:26:29.226995 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:26:29.232360 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.233627 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns to test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:26:29.234445 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.236381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_banners_statistics__dbt_backup AND test.incremental_mt_datestat_default_banners_statistics 
  
  ...
[0m10:26:29.239504 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.242685 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m10:26:29.243557 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.252033 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m10:26:29.253455 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.255159 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns__dbt_tmp to test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m10:26:29.256767 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.258102 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-04-17 10:26:29.159386 => 2024-04-17 10:26:29.258037
[0m10:26:29.258723 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.259556 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474037490>]}
[0m10:26:29.264738 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m10:26:29.265596 [info ] [Thread-1 (]: 30 of 80 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.11s]
[0m10:26:29.267302 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:26:29.267840 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:26:29.268408 [info ] [Thread-1 (]: 32 of 80 START sql view model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m10:26:29.269637 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m10:26:29.269924 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m10:26:29.270104 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:26:29.273255 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m10:26:29.274154 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.275981 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (execute): 2024-04-17 10:26:29.206298 => 2024-04-17 10:26:29.275920
[0m10:26:29.276900 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740f2260>]}
[0m10:26:29.277432 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-04-17 10:26:29.270223 => 2024-04-17 10:26:29.277318
[0m10:26:29.278046 [info ] [Thread-2 (]: 31 of 80 OK created sql view model test.incremental_mt_datestat_default_campaigns  [[32mOK[0m in 0.08s]
[0m10:26:29.278566 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:26:29.279276 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:26:29.285681 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m10:26:29.286309 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:26:29.288101 [info ] [Thread-2 (]: 33 of 80 START sql view model test.incremental_vkads_datestat_default_ad_plans . [RUN]
[0m10:26:29.289187 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans'
[0m10:26:29.289630 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans)
[0m10:26:29.289979 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:26:29.292976 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m10:26:29.293551 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */


  create view test.incremental_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

  )...
[0m10:26:29.295192 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (compile): 2024-04-17 10:26:29.290131 => 2024-04-17 10:26:29.294999
[0m10:26:29.295714 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:26:29.300827 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m10:26:29.301554 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */


  create view test.incremental_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

  )...
[0m10:26:29.304731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.309257 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:26:29.311940 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.313408 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult to test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:26:29.314203 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.319237 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:26:29.320713 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.323728 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m10:26:29.326421 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.327553 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans to test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:26:29.328119 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.331224 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult__dbt_tmp to test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m10:26:29.332418 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.337007 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m10:26:29.338383 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.342361 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m10:26:29.343897 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.345289 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m10:26:29.348891 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.350464 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-04-17 10:26:29.279898 => 2024-04-17 10:26:29.350402
[0m10:26:29.351185 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474037490>]}
[0m10:26:29.351663 [info ] [Thread-1 (]: 32 of 80 OK created sql view model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.08s]
[0m10:26:29.352114 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:26:29.352486 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:26:29.353198 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.353865 [info ] [Thread-1 (]: 34 of 80 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:26:29.359243 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m10:26:29.360238 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m10:26:29.361609 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m10:26:29.361906 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:26:29.370449 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m10:26:29.371376 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.374275 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (execute): 2024-04-17 10:26:29.295895 => 2024-04-17 10:26:29.374181
[0m10:26:29.375205 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb47409dff0>]}
[0m10:26:29.375959 [info ] [Thread-2 (]: 33 of 80 OK created sql view model test.incremental_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.09s]
[0m10:26:29.376542 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-17 10:26:29.362104 => 2024-04-17 10:26:29.376348
[0m10:26:29.377589 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:26:29.378335 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:26:29.379325 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:26:29.391714 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

    )
        ...
[0m10:26:29.392315 [info ] [Thread-2 (]: 35 of 80 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m10:26:29.395502 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m10:26:29.396025 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m10:26:29.397170 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:26:29.403706 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m10:26:29.404366 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-04-17 10:26:29.397689 => 2024-04-17 10:26:29.404216
[0m10:26:29.404841 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:26:29.413821 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

    )
        ...
[0m10:26:29.415424 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:29.421551 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.428124 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.431016 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m10:26:29.433255 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:29.436790 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.437343 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

  
    ...
[0m10:26:29.443705 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.446077 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m10:26:29.447066 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_tmp ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

  
    ...
[0m10:26:29.451447 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.458720 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:26:29.460993 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.465202 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:26:29.467246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.469422 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:26:29.471050 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.472497 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    rename table test.incremental_yd_datestat_default_custom_report__dbt_tmp to test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:26:29.476053 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.476985 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.478626 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
EXCHANGE TABLES test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup AND test.incremental_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:26:29.480946 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
EXCHANGE TABLES test.incremental_yd_datestat_default_custom_report__dbt_backup AND test.incremental_yd_datestat_default_custom_report 
  
  ...
[0m10:26:29.486538 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.493016 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m10:26:29.493633 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.501267 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m10:26:29.501950 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.505435 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-17 10:26:29.380206 => 2024-04-17 10:26:29.505312
[0m10:26:29.506598 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740bb010>]}
[0m10:26:29.507441 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.508059 [info ] [Thread-1 (]: 34 of 80 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.15s]
[0m10:26:29.510207 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-04-17 10:26:29.405075 => 2024-04-17 10:26:29.510121
[0m10:26:29.510689 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:26:29.511365 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb47409d5d0>]}
[0m10:26:29.511815 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:26:29.513225 [info ] [Thread-2 (]: 35 of 80 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.12s]
[0m10:26:29.514022 [info ] [Thread-1 (]: 36 of 80 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:26:29.515628 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:26:29.516441 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m10:26:29.517047 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry
[0m10:26:29.517889 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m10:26:29.518423 [info ] [Thread-2 (]: 37 of 80 START sql view model test.join_appmetrica_registry .................... [RUN]
[0m10:26:29.519173 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:26:29.520164 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry'
[0m10:26:29.526157 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m10:26:29.526862 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry)
[0m10:26:29.527863 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry
[0m10:26:29.551974 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m10:26:29.552518 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-04-17 10:26:29.520808 => 2024-04-17 10:26:29.552308
[0m10:26:29.555519 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:26:29.565166 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

    )
        ...
[0m10:26:29.566227 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.573457 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m10:26:29.578404 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.581064 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:26:29.584741 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:29.587886 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.592272 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.594228 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m10:26:29.595051 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

  
    ...
[0m10:26:29.605469 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.608563 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:26:29.612871 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.614675 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    rename table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp to test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:26:29.618635 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.620480 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
EXCHANGE TABLES test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup AND test.incremental_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:26:29.625232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.630508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m10:26:29.633902 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.635463 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-04-17 10:26:29.555974 => 2024-04-17 10:26:29.635384
[0m10:26:29.636287 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb47422b460>]}
[0m10:26:29.636827 [info ] [Thread-1 (]: 36 of 80 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.12s]
[0m10:26:29.637212 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:26:29.638050 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m10:26:29.638576 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:26:29.644340 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m10:26:29.645533 [info ] [Thread-1 (]: 38 of 80 START sql view model test.join_appmetrica_events ...................... [RUN]
[0m10:26:29.648114 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m10:26:29.648437 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m10:26:29.648675 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:26:29.653799 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m10:26:29.654534 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.663554 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.664718 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.667671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m10:26:29.670108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.672388 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry"
[0m10:26:29.673117 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.675135 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:26:29.677109 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry (compile): 2024-04-17 10:26:29.528151 => 2024-04-17 10:26:29.676889
[0m10:26:29.677496 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry
[0m10:26:29.683698 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry"
[0m10:26:29.685266 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */


  create view test.join_appmetrica_registry__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )





  )...
[0m10:26:29.695085 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.698982 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    drop table if exists test.join_appmetrica_registry__dbt_backup 
  
  ...
[0m10:26:29.703612 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.704880 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    rename table test.join_appmetrica_registry to test.join_appmetrica_registry__dbt_backup 
  
  ...
[0m10:26:29.707769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.710673 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    drop table if exists test.join_appmetrica_registry 
  
  ...
[0m10:26:29.714122 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.715331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    rename table test.join_appmetrica_registry__dbt_tmp to test.join_appmetrica_registry 
  
  ...
[0m10:26:29.718162 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.723262 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */
drop table if exists test.join_appmetrica_registry__dbt_backup 
  ...
[0m10:26:29.726594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:26:29.727308 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.734426 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry (execute): 2024-04-17 10:26:29.677602 => 2024-04-17 10:26:29.734306
[0m10:26:29.741689 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e7e8a00>]}
[0m10:26:29.742894 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m10:26:29.743694 [info ] [Thread-2 (]: 37 of 80 OK created sql view model test.join_appmetrica_registry ............... [[32mOK[0m in 0.22s]
[0m10:26:29.746148 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry
[0m10:26:29.746721 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:26:29.747967 [info ] [Thread-2 (]: 39 of 80 START sql view model test.join_mt_datestat ............................ [RUN]
[0m10:26:29.748758 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m10:26:29.749064 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m10:26:29.749229 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m10:26:29.754816 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_mt__%'
    GROUP BY table

...
[0m10:26:29.756614 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.761517 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.762561 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.765844 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m10:26:29.768433 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.772031 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m10:26:29.773578 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.775731 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:26:29.784703 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.788746 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.792943 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.796381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_install$')        
...
[0m10:26:29.798432 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:29.804713 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.807392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m10:26:29.811090 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.818246 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.821584 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.823090 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.827035 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m10:26:29.828036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.832917 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners$')        
...
[0m10:26:29.835446 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.840645 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.841731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.847503 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.849802 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.853151 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m10:26:29.854034 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.858400 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_campaigns$')        
...
[0m10:26:29.861750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.866139 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.867674 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.871486 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.875804 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.876560 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.882324 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m10:26:29.886392 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m10:26:29.887329 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-04-17 10:26:29.648788 => 2024-04-17 10:26:29.887231
[0m10:26:29.887694 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-04-17 10:26:29.749320 => 2024-04-17 10:26:29.887617
[0m10:26:29.888012 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:26:29.888416 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m10:26:29.893107 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m10:26:29.898549 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m10:26:29.899545 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


  create view test.join_mt_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    '' AS productName,
    campaigns.name AS adCampaignName,
    '' AS adGroupName,
    banners.id AS adId,
    '' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(adGroupName, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    '' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    '' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id







  )...
[0m10:26:29.900971 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


  create view test.join_appmetrica_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    '' AS visitId,
    '' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts







  )...
[0m10:26:29.924271 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:29.929628 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat__dbt_backup 
  
  ...
[0m10:26:29.933758 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.935334 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat to test.join_mt_datestat__dbt_backup 
  
  ...
[0m10:26:29.938212 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.941779 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat 
  
  ...
[0m10:26:29.945599 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.946853 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat__dbt_tmp to test.join_mt_datestat 
  
  ...
[0m10:26:29.950325 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.954725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_backup 
  ...
[0m10:26:29.958162 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:29.959633 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-04-17 10:26:29.893594 => 2024-04-17 10:26:29.959575
[0m10:26:29.960178 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb47409e9b0>]}
[0m10:26:29.960515 [info ] [Thread-2 (]: 39 of 80 OK created sql view model test.join_mt_datestat ....................... [[32mOK[0m in 0.21s]
[0m10:26:29.960856 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:26:29.961115 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry
[0m10:26:29.961351 [info ] [Thread-2 (]: 40 of 80 START sql view model test.join_utmcraft_registry ...................... [RUN]
[0m10:26:29.961987 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry'
[0m10:26:29.962227 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry)
[0m10:26:29.962517 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry
[0m10:26:29.966115 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_utmcraft__%'
    GROUP BY table

...
[0m10:26:29.972185 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.979008 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m10:26:29.987585 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:29.992339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:29.999023 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.002028 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry"
[0m10:26:30.002827 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry (compile): 2024-04-17 10:26:29.962710 => 2024-04-17 10:26:30.002716
[0m10:26:30.003161 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry
[0m10:26:30.007937 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry"
[0m10:26:30.008565 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */


  create view test.join_utmcraft_registry__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )






  )...
[0m10:26:30.022446 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m10:26:30.027155 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events__dbt_backup 
  
  ...
[0m10:26:30.028331 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.031995 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    drop table if exists test.join_utmcraft_registry__dbt_backup 
  
  ...
[0m10:26:30.034574 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.035314 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.036399 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events to test.join_appmetrica_events__dbt_backup 
  
  ...
[0m10:26:30.037639 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    rename table test.join_utmcraft_registry to test.join_utmcraft_registry__dbt_backup 
  
  ...
[0m10:26:30.041046 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.041644 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.044359 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    drop table if exists test.join_utmcraft_registry 
  
  ...
[0m10:26:30.048124 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events 
  
  ...
[0m10:26:30.051803 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.052322 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.053595 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events__dbt_tmp to test.join_appmetrica_events 
  
  ...
[0m10:26:30.055217 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    rename table test.join_utmcraft_registry__dbt_tmp to test.join_utmcraft_registry 
  
  ...
[0m10:26:30.058850 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.059594 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.064558 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_backup 
  ...
[0m10:26:30.069699 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */
drop table if exists test.join_utmcraft_registry__dbt_backup 
  ...
[0m10:26:30.073927 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.074746 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.076304 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-04-17 10:26:29.888798 => 2024-04-17 10:26:30.076227
[0m10:26:30.078400 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry (execute): 2024-04-17 10:26:30.003257 => 2024-04-17 10:26:30.078323
[0m10:26:30.079584 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb47422b7c0>]}
[0m10:26:30.080763 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb47409f040>]}
[0m10:26:30.081644 [info ] [Thread-1 (]: 38 of 80 OK created sql view model test.join_appmetrica_events ................. [[32mOK[0m in 0.43s]
[0m10:26:30.082645 [info ] [Thread-2 (]: 40 of 80 OK created sql view model test.join_utmcraft_registry ................. [[32mOK[0m in 0.12s]
[0m10:26:30.083393 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:26:30.084176 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry
[0m10:26:30.085060 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:26:30.085673 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:26:30.086622 [info ] [Thread-1 (]: 41 of 80 START sql view model test.join_vkads_datestat ......................... [RUN]
[0m10:26:30.087269 [info ] [Thread-2 (]: 42 of 80 START sql view model test.join_yd_datestat ............................ [RUN]
[0m10:26:30.088135 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m10:26:30.089197 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m10:26:30.089828 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m10:26:30.090306 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m10:26:30.090840 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:26:30.091264 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m10:26:30.098580 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_vkads__%'
    GROUP BY table

...
[0m10:26:30.102742 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_yd__%'
    GROUP BY table

...
[0m10:26:30.108613 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.110157 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m10:26:30.110829 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.114271 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m10:26:30.118249 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.119974 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:26:30.120656 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.123171 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:26:30.137060 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.143927 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.144762 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m10:26:30.150406 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m10:26:30.158759 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.162832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.163546 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.168453 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.169567 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.174447 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans$')        
...
[0m10:26:30.176064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.179335 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m10:26:30.179867 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-04-17 10:26:30.099263 => 2024-04-17 10:26:30.179782
[0m10:26:30.180074 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m10:26:30.184171 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m10:26:30.185128 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.263778 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.264649 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


  create view test.join_yd_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    '' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps






  )...
[0m10:26:30.269392 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.271963 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m10:26:30.272442 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-04-17 10:26:30.091582 => 2024-04-17 10:26:30.272371
[0m10:26:30.272623 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:26:30.276569 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m10:26:30.277032 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


  create view test.join_vkads_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    '' AS productName,
    ad_plans.name AS adCampaignName,
    '' AS adGroupName,
    ad_plans.id AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id







  )...
[0m10:26:30.283395 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.286839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat__dbt_backup 
  
  ...
[0m10:26:30.290323 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.291571 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat to test.join_yd_datestat__dbt_backup 
  
  ...
[0m10:26:30.295529 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.298603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat 
  
  ...
[0m10:26:30.299257 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.303890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat__dbt_backup 
  
  ...
[0m10:26:30.305003 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.306979 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat__dbt_tmp to test.join_yd_datestat 
  
  ...
[0m10:26:30.308282 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.309567 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat to test.join_vkads_datestat__dbt_backup 
  
  ...
[0m10:26:30.310721 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.314416 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_backup 
  ...
[0m10:26:30.317949 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.319245 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-04-17 10:26:30.180173 => 2024-04-17 10:26:30.319188
[0m10:26:30.319993 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.320958 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb47408e950>]}
[0m10:26:30.325286 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat 
  
  ...
[0m10:26:30.325930 [info ] [Thread-2 (]: 42 of 80 OK created sql view model test.join_yd_datestat ....................... [[32mOK[0m in 0.23s]
[0m10:26:30.327415 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:26:30.327975 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m10:26:30.328795 [info ] [Thread-2 (]: 43 of 80 START sql view model test.join_ym_events .............................. [RUN]
[0m10:26:30.329735 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.330386 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m10:26:30.331482 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat__dbt_tmp to test.join_vkads_datestat 
  
  ...
[0m10:26:30.331884 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m10:26:30.333734 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m10:26:30.338216 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_ym__%'
    GROUP BY table

...
[0m10:26:30.339130 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.345212 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_backup 
  ...
[0m10:26:30.348103 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.350281 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m10:26:30.351103 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.353464 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-04-17 10:26:30.272711 => 2024-04-17 10:26:30.353394
[0m10:26:30.354217 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e66aef0>]}
[0m10:26:30.354728 [info ] [Thread-1 (]: 41 of 80 OK created sql view model test.join_vkads_datestat .................... [[32mOK[0m in 0.27s]
[0m10:26:30.355160 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:26:30.356324 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_appmetrica_registry
[0m10:26:30.357383 [info ] [Thread-1 (]: 44 of 80 START sql view model test.combine_appmetrica_registry ................. [RUN]
[0m10:26:30.358567 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_appmetrica_registry'
[0m10:26:30.359264 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.359552 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_appmetrica_registry)
[0m10:26:30.361146 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:26:30.361567 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_appmetrica_registry
[0m10:26:30.374177 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_appmetrica_registry')        
...
[0m10:26:30.376183 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.383725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_yandex_metrika_stream$')        
...
[0m10:26:30.384708 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.389853 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    select name, type from system.columns where table = 'join_appmetrica_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.393981 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.394731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.400557 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.402342 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_appmetrica_registry"
[0m10:26:30.404350 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_appmetrica_registry (compile): 2024-04-17 10:26:30.362793 => 2024-04-17 10:26:30.404175
[0m10:26:30.404856 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_appmetrica_registry
[0m10:26:30.411373 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_appmetrica_registry"
[0m10:26:30.412338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.417756 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m10:26:30.418528 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */


  create view test.combine_appmetrica_registry__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_registry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                --toLowCardinality('join_appmetrica_registry')  as None,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry
        )

        )
  )...
[0m10:26:30.420444 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-04-17 10:26:30.334206 => 2024-04-17 10:26:30.420245
[0m10:26:30.420889 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m10:26:30.425696 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m10:26:30.426480 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


  create view test.join_ym_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    NULL AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events






  )...
[0m10:26:30.429075 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.432198 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    drop table if exists test.combine_appmetrica_registry__dbt_backup 
  
  ...
[0m10:26:30.435941 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.437146 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    rename table test.combine_appmetrica_registry to test.combine_appmetrica_registry__dbt_backup 
  
  ...
[0m10:26:30.440530 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.443840 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    drop table if exists test.combine_appmetrica_registry 
  
  ...
[0m10:26:30.444809 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.449458 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events__dbt_backup 
  
  ...
[0m10:26:30.451612 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.452660 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events to test.join_ym_events__dbt_backup 
  
  ...
[0m10:26:30.453442 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.456259 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    rename table test.combine_appmetrica_registry__dbt_tmp to test.combine_appmetrica_registry 
  
  ...
[0m10:26:30.458622 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.461566 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events 
  
  ...
[0m10:26:30.464455 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.469266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */
drop table if exists test.combine_appmetrica_registry__dbt_backup 
  ...
[0m10:26:30.470685 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.472053 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events__dbt_tmp to test.join_ym_events 
  
  ...
[0m10:26:30.472996 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.475417 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_appmetrica_registry (execute): 2024-04-17 10:26:30.405087 => 2024-04-17 10:26:30.475338
[0m10:26:30.476108 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb489277760>]}
[0m10:26:30.477155 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.476620 [info ] [Thread-1 (]: 44 of 80 OK created sql view model test.combine_appmetrica_registry ............ [[32mOK[0m in 0.12s]
[0m10:26:30.481407 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_backup 
  ...
[0m10:26:30.481935 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_appmetrica_registry
[0m10:26:30.483047 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_utmcraft_registry
[0m10:26:30.484034 [info ] [Thread-1 (]: 45 of 80 START sql view model test.combine_utmcraft_registry ................... [RUN]
[0m10:26:30.485224 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_utmcraft_registry'
[0m10:26:30.486668 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.487045 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_utmcraft_registry)
[0m10:26:30.489043 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-04-17 10:26:30.421046 => 2024-04-17 10:26:30.488956
[0m10:26:30.489562 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_utmcraft_registry
[0m10:26:30.490251 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4741d5090>]}
[0m10:26:30.494044 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_utmcraft_registry')        
...
[0m10:26:30.494936 [info ] [Thread-2 (]: 43 of 80 OK created sql view model test.join_ym_events ......................... [[32mOK[0m in 0.16s]
[0m10:26:30.497636 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m10:26:30.498936 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m10:26:30.499558 [info ] [Thread-2 (]: 46 of 80 START sql view model test.combine_datestat ............................ [RUN]
[0m10:26:30.501145 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m10:26:30.501417 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m10:26:30.501580 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m10:26:30.506083 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m10:26:30.506991 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.511338 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.515421 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.520605 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.521497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.524603 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_utmcraft_registry"
[0m10:26:30.525363 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_utmcraft_registry (compile): 2024-04-17 10:26:30.490489 => 2024-04-17 10:26:30.525212
[0m10:26:30.525737 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_utmcraft_registry
[0m10:26:30.532334 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_utmcraft_registry"
[0m10:26:30.533669 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.538884 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.540181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */


  create view test.combine_utmcraft_registry__dbt_tmp 
  
  as (
    -- depends_on: test.join_utmcraft_registry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                --toLowCardinality('join_utmcraft_registry')  as None,
                
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at 

            from test.join_utmcraft_registry
        )

        )
  )...
[0m10:26:30.544893 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.550624 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.552243 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.555815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    drop table if exists test.combine_utmcraft_registry__dbt_backup 
  
  ...
[0m10:26:30.559814 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.562026 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    rename table test.combine_utmcraft_registry to test.combine_utmcraft_registry__dbt_backup 
  
  ...
[0m10:26:30.565164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.573291 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m10:26:30.574348 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.578744 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    drop table if exists test.combine_utmcraft_registry 
  
  ...
[0m10:26:30.580914 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-04-17 10:26:30.501689 => 2024-04-17 10:26:30.580641
[0m10:26:30.581418 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m10:26:30.587494 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m10:26:30.588909 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.590406 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    rename table test.combine_utmcraft_registry__dbt_tmp to test.combine_utmcraft_registry 
  
  ...
[0m10:26:30.592328 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


  create view test.combine_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                --toLowCardinality('join_mt_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_mt_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('join_vkads_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('join_yd_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_yd_datestat
        )

        )
  )...
[0m10:26:30.594268 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.601749 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */
drop table if exists test.combine_utmcraft_registry__dbt_backup 
  ...
[0m10:26:30.604937 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.606402 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_utmcraft_registry (execute): 2024-04-17 10:26:30.525868 => 2024-04-17 10:26:30.606327
[0m10:26:30.607147 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740b2050>]}
[0m10:26:30.607627 [info ] [Thread-1 (]: 45 of 80 OK created sql view model test.combine_utmcraft_registry .............. [[32mOK[0m in 0.12s]
[0m10:26:30.607988 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_utmcraft_registry
[0m10:26:30.608276 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_appmetrica_registry
[0m10:26:30.608927 [info ] [Thread-1 (]: 47 of 80 START sql view model test.hash_appmetrica_registry .................... [RUN]
[0m10:26:30.609664 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_appmetrica_registry'
[0m10:26:30.609964 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_appmetrica_registry)
[0m10:26:30.610169 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_appmetrica_registry
[0m10:26:30.623381 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:26:30.637459 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat__dbt_backup 
  
  ...
[0m10:26:30.641678 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_appmetrica_registry')        
...
[0m10:26:30.645391 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.646931 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat to test.combine_datestat__dbt_backup 
  
  ...
[0m10:26:30.649339 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.653267 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    select name, type from system.columns where table = 'combine_appmetrica_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.654122 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.658610 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat 
  
  ...
[0m10:26:30.660475 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.671907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.679271 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat__dbt_tmp to test.combine_datestat 
  
  ...
[0m10:26:30.677348 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_appmetrica_registry"
[0m10:26:30.681434 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_appmetrica_registry (compile): 2024-04-17 10:26:30.610303 => 2024-04-17 10:26:30.681243
[0m10:26:30.681769 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_appmetrica_registry
[0m10:26:30.686483 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_appmetrica_registry"
[0m10:26:30.687386 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.693061 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_backup 
  ...
[0m10:26:30.694238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */


  create view test.hash_appmetrica_registry__dbt_tmp 
  
  as (
    -- depends_on: test.combine_appmetrica_registry
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id,

  assumeNotNull(CASE 







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    


FROM (

        (
            select

                --toLowCardinality('combine_appmetrica_registry')  as _dbt_source_relation,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.combine_appmetrica_registry
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m10:26:30.697088 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.699326 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-04-17 10:26:30.581684 => 2024-04-17 10:26:30.699232
[0m10:26:30.700003 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e67a3e0>]}
[0m10:26:30.700432 [info ] [Thread-2 (]: 46 of 80 OK created sql view model test.combine_datestat ....................... [[32mOK[0m in 0.20s]
[0m10:26:30.700829 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m10:26:30.701126 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m10:26:30.701464 [info ] [Thread-2 (]: 48 of 80 START sql view model test.combine_events .............................. [RUN]
[0m10:26:30.703023 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m10:26:30.703500 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m10:26:30.703747 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m10:26:30.707760 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m10:26:30.709193 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.712684 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    drop table if exists test.hash_appmetrica_registry__dbt_backup 
  
  ...
[0m10:26:30.716226 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.717333 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    rename table test.hash_appmetrica_registry to test.hash_appmetrica_registry__dbt_backup 
  
  ...
[0m10:26:30.719020 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.724070 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.725645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.728568 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    drop table if exists test.hash_appmetrica_registry 
  
  ...
[0m10:26:30.729680 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.735494 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.737456 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.739199 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    rename table test.hash_appmetrica_registry__dbt_tmp to test.hash_appmetrica_registry 
  
  ...
[0m10:26:30.741427 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.746237 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m10:26:30.747497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.752043 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */
drop table if exists test.hash_appmetrica_registry__dbt_backup 
  ...
[0m10:26:30.753176 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-04-17 10:26:30.703845 => 2024-04-17 10:26:30.753025
[0m10:26:30.753836 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m10:26:30.757913 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m10:26:30.759060 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


  create view test.combine_events__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                --toLowCardinality('join_appmetrica_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select

                --toLowCardinality('join_ym_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        )
  )...
[0m10:26:30.760948 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.763099 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_appmetrica_registry (execute): 2024-04-17 10:26:30.681878 => 2024-04-17 10:26:30.762987
[0m10:26:30.764089 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740b2f80>]}
[0m10:26:30.765664 [info ] [Thread-1 (]: 47 of 80 OK created sql view model test.hash_appmetrica_registry ............... [[32mOK[0m in 0.15s]
[0m10:26:30.766213 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_appmetrica_registry
[0m10:26:30.766581 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m10:26:30.767367 [info ] [Thread-1 (]: 49 of 80 START sql view model test.hash_datestat ............................... [RUN]
[0m10:26:30.768566 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m10:26:30.768843 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m10:26:30.769007 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m10:26:30.776523 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_datestat')        
...
[0m10:26:30.783345 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.788241 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.793583 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.797548 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m10:26:30.799142 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-04-17 10:26:30.769097 => 2024-04-17 10:26:30.798993
[0m10:26:30.799559 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m10:26:30.805525 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m10:26:30.806100 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


  create view test.hash_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id,

  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    
    


FROM (

        (
            select

                --toLowCardinality('combine_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m10:26:30.828023 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.832602 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat__dbt_backup 
  
  ...
[0m10:26:30.834117 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:26:30.837204 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events__dbt_backup 
  
  ...
[0m10:26:30.839596 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.840786 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat to test.hash_datestat__dbt_backup 
  
  ...
[0m10:26:30.841525 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.844411 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events to test.combine_events__dbt_backup 
  
  ...
[0m10:26:30.845910 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.849571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat 
  
  ...
[0m10:26:30.850962 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.855691 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events 
  
  ...
[0m10:26:30.856456 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.859476 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat__dbt_tmp to test.hash_datestat 
  
  ...
[0m10:26:30.860670 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.862360 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events__dbt_tmp to test.combine_events 
  
  ...
[0m10:26:30.863928 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.868191 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_backup 
  ...
[0m10:26:30.869663 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.873940 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_backup 
  ...
[0m10:26:30.876846 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.878376 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-04-17 10:26:30.799688 => 2024-04-17 10:26:30.878309
[0m10:26:30.879086 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.879871 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740f3a60>]}
[0m10:26:30.881130 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-04-17 10:26:30.754050 => 2024-04-17 10:26:30.881070
[0m10:26:30.881919 [info ] [Thread-1 (]: 49 of 80 OK created sql view model test.hash_datestat .......................... [[32mOK[0m in 0.11s]
[0m10:26:30.882915 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e67a710>]}
[0m10:26:30.883619 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m10:26:30.884556 [info ] [Thread-2 (]: 48 of 80 OK created sql view model test.combine_events ......................... [[32mOK[0m in 0.18s]
[0m10:26:30.885197 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_appmetrica_registry
[0m10:26:30.886158 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m10:26:30.887061 [info ] [Thread-1 (]: 50 of 80 START sql table model test.link_appmetrica_registry ................... [RUN]
[0m10:26:30.888051 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m10:26:30.889843 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_appmetrica_registry'
[0m10:26:30.890496 [info ] [Thread-2 (]: 51 of 80 START sql table model test.full_datestat .............................. [RUN]
[0m10:26:30.891046 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_appmetrica_registry)
[0m10:26:30.891996 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m10:26:30.892513 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_appmetrica_registry
[0m10:26:30.892864 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m10:26:30.903865 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m10:26:30.907039 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m10:26:30.907568 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-04-17 10:26:30.904361 => 2024-04-17 10:26:30.907496
[0m10:26:30.913433 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m10:26:30.915461 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */

    select name, type from system.columns where table = 'hash_appmetrica_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.933958 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
    )
        ...
[0m10:26:30.936484 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.938348 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_appmetrica_registry"
[0m10:26:30.939119 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_appmetrica_registry (compile): 2024-04-17 10:26:30.893229 => 2024-04-17 10:26:30.938969
[0m10:26:30.939560 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_appmetrica_registry
[0m10:26:30.944897 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */

            

    
        create table test.link_appmetrica_registry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_appmetrica_registry
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_appmetrica_registry
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


    )
        ...
[0m10:26:30.955114 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.958606 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.963364 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:30.965093 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m10:26:30.966002 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:30.969646 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */

    select name, type from system.columns where table = 'link_appmetrica_registry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:30.970758 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

  
    
    
        
        insert into test.full_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime")
  


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
  ...
[0m10:26:30.976002 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:30.977844 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_appmetrica_registry"
[0m10:26:30.978263 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */

  
    
    
        
        insert into test.link_appmetrica_registry__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_appmetrica_registry
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_appmetrica_registry
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


  ...
[0m10:26:31.012104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:26:31.013535 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */
EXCHANGE TABLES test.link_appmetrica_registry__dbt_backup AND test.link_appmetrica_registry 
  
  ...
[0m10:26:31.017919 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.021885 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */
drop table if exists test.link_appmetrica_registry__dbt_backup 
  ...
[0m10:26:31.025269 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.026521 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_appmetrica_registry (execute): 2024-04-17 10:26:30.939715 => 2024-04-17 10:26:31.026464
[0m10:26:31.027029 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4740b2f80>]}
[0m10:26:31.027352 [info ] [Thread-1 (]: 50 of 80 OK created sql table model test.link_appmetrica_registry .............. [[32mOK[0m in 0.14s]
[0m10:26:31.027676 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_appmetrica_registry
[0m10:26:31.027926 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m10:26:31.028176 [info ] [Thread-1 (]: 52 of 80 START sql table model test.link_datestat .............................. [RUN]
[0m10:26:31.029177 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m10:26:31.029394 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m10:26:31.029603 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m10:26:31.113663 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:31.114312 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m10:26:31.117519 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
EXCHANGE TABLES test.full_datestat__dbt_backup AND test.full_datestat 
  
  ...
[0m10:26:31.119859 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:31.121998 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m10:26:31.122903 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:31.126536 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_backup 
  ...
[0m10:26:31.128146 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-04-17 10:26:31.029711 => 2024-04-17 10:26:31.127926
[0m10:26:31.128716 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m10:26:31.132910 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,productName,adCampaignName,adGroupName,adId,adPhraseId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adTitle2,adText,adPhraseName,adCost,impressions,clicks,__emitted_at,__link,AdCostStatHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, productName, adCampaignName, adGroupName, adId, adPhraseId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adTitle2, adText, adPhraseName, adCost, impressions, clicks, __emitted_at, __link, AdCostStatHash, __id, __datetime


    )
        ...
[0m10:26:31.133828 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:31.136317 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-04-17 10:26:30.915880 => 2024-04-17 10:26:31.136251
[0m10:26:31.137426 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474196650>]}
[0m10:26:31.137964 [info ] [Thread-2 (]: 51 of 80 OK created sql table model test.full_datestat ......................... [[32mOK[0m in 0.25s]
[0m10:26:31.138416 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m10:26:31.138823 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m10:26:31.139696 [info ] [Thread-2 (]: 53 of 80 START sql view model test.hash_events ................................. [RUN]
[0m10:26:31.140470 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m10:26:31.140753 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m10:26:31.140906 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m10:26:31.146977 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_events')        
...
[0m10:26:31.153892 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:31.157835 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:31.158671 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:26:31.163555 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:31.167559 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:31.175100 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:31.177278 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m10:26:31.179432 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m10:26:31.180906 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,productName,adCampaignName,adGroupName,adId,adPhraseId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adTitle2,adText,adPhraseName,adCost,impressions,clicks,__emitted_at,__link,AdCostStatHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, productName, adCampaignName, adGroupName, adId, adPhraseId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adTitle2, adText, adPhraseName, adCost, impressions, clicks, __emitted_at, __link, AdCostStatHash, __id, __datetime


  ...
[0m10:26:31.181687 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-04-17 10:26:31.140996 => 2024-04-17 10:26:31.181467
[0m10:26:31.183203 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m10:26:31.188271 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m10:26:31.189197 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


  create view test.hash_events__dbt_tmp 
  
  as (
    -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id,

  assumeNotNull(CASE 


WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    


FROM (

        (
            select

                --toLowCardinality('combine_events')  as _dbt_source_relation,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m10:26:31.239590 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:26:31.242412 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events__dbt_backup 
  
  ...
[0m10:26:31.245290 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.246546 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events to test.hash_events__dbt_backup 
  
  ...
[0m10:26:31.249555 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.252577 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events 
  
  ...
[0m10:26:31.256218 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.257375 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events__dbt_tmp to test.hash_events 
  
  ...
[0m10:26:31.260704 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.265004 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_backup 
  ...
[0m10:26:31.268569 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.269878 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-04-17 10:26:31.183509 => 2024-04-17 10:26:31.269814
[0m10:26:31.270410 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474094910>]}
[0m10:26:31.270730 [info ] [Thread-2 (]: 53 of 80 OK created sql view model test.hash_events ............................ [[32mOK[0m in 0.13s]
[0m10:26:31.271054 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m10:26:31.272312 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m10:26:31.272685 [info ] [Thread-2 (]: 54 of 80 START sql table model test.graph_tuples ............................... [RUN]
[0m10:26:31.273404 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m10:26:31.273691 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m10:26:31.273938 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m10:26:31.288296 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m10:26:31.290086 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-04-17 10:26:31.274100 => 2024-04-17 10:26:31.289832
[0m10:26:31.290481 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m10:26:31.294782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



    )
        ...
[0m10:26:31.320566 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:26:31.323744 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:31.328690 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.330533 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m10:26:31.332102 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



  ...
[0m10:26:31.334908 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.15 seconds
[0m10:26:31.336097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m10:26:31.340408 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.345236 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m10:26:31.349244 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:31.350677 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-04-17 10:26:31.128973 => 2024-04-17 10:26:31.350617
[0m10:26:31.351321 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e6d3f40>]}
[0m10:26:31.351757 [info ] [Thread-1 (]: 52 of 80 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.32s]
[0m10:26:31.352152 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m10:26:31.352493 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_events
[0m10:26:31.353096 [info ] [Thread-1 (]: 55 of 80 START sql table model test.link_events ................................ [RUN]
[0m10:26:31.353806 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m10:26:31.354023 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m10:26:31.354188 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m10:26:31.360679 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:31.367144 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:31.370336 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m10:26:31.370934 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-04-17 10:26:31.354302 => 2024-04-17 10:26:31.370842
[0m10:26:31.371181 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m10:26:31.375155 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,visitId,clientId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,sessions,addToCartSessions,cartViewSessions,checkoutSessions,webSalesSessions,sales,amountSales,registrationCardSessions,registrationButtonClick,linkingCardToPhoneNumberSessions,registrationLendingPromotionsSessions,registrationCashbackSessions,instantDiscountActivationSessions,couponActivationSessions,participationInLotterySessions,pagesViews,screenView,installApp,installs,installationDeviceId,__emitted_at,__link,cityCode,pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, visitId, clientId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, sessions, addToCartSessions, cartViewSessions, checkoutSessions, webSalesSessions, sales, amountSales, registrationCardSessions, registrationButtonClick, linkingCardToPhoneNumberSessions, registrationLendingPromotionsSessions, registrationCashbackSessions, instantDiscountActivationSessions, couponActivationSessions, participationInLotterySessions, pagesViews, screenView, installApp, installs, installationDeviceId, __emitted_at, __link, cityCode, pageViews, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, YmClientHash, __id, __datetime


    )
        ...
[0m10:26:31.404072 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:26:31.407254 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:26:31.413471 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:26:31.416105 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m10:26:31.416845 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,visitId,clientId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,sessions,addToCartSessions,cartViewSessions,checkoutSessions,webSalesSessions,sales,amountSales,registrationCardSessions,registrationButtonClick,linkingCardToPhoneNumberSessions,registrationLendingPromotionsSessions,registrationCashbackSessions,instantDiscountActivationSessions,couponActivationSessions,participationInLotterySessions,pagesViews,screenView,installApp,installs,installationDeviceId,__emitted_at,__link,cityCode,pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, visitId, clientId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, sessions, addToCartSessions, cartViewSessions, checkoutSessions, webSalesSessions, sales, amountSales, registrationCardSessions, registrationButtonClick, linkingCardToPhoneNumberSessions, registrationLendingPromotionsSessions, registrationCashbackSessions, instantDiscountActivationSessions, couponActivationSessions, participationInLotterySessions, pagesViews, screenView, installApp, installs, installationDeviceId, __emitted_at, __link, cityCode, pageViews, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, YmClientHash, __id, __datetime


  ...
[0m10:26:32.136961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.72 seconds
[0m10:26:32.139274 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m10:26:32.144238 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:32.148374 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m10:26:32.151823 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:26:32.153122 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-04-17 10:26:31.371281 => 2024-04-17 10:26:32.153054
[0m10:26:32.153787 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb4741d1900>]}
[0m10:26:32.154296 [info ] [Thread-1 (]: 55 of 80 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.80s]
[0m10:26:32.154827 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m10:26:32.642778 [debug] [Thread-2 (]: dbt_clickhouse adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



  
[0m10:26:32.643529 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-04-17 10:26:31.290678 => 2024-04-17 10:26:32.643419
[0m10:26:32.645175 [debug] [Thread-2 (]: Database Error in model graph_tuples (models/5_graph/1_tuples/graph_tuples.sql)
  :HTTPDriver for http://localhost:8123 returned response code 404)
   Code: 60. DB::Exception: Table test.join_appmetrica_registry_app_profile_matching does not exist. Maybe you meant test.hash_registry_app_profile_matching?. (UNKNOWN_TABLE) (version 24.1.4.20 (official build))
  compiled Code at target/run/etlcraft_integration_tests/models/5_graph/1_tuples/graph_tuples.sql
[0m10:26:32.645626 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9e37b04a-a621-4b42-afd6-bab2b19ad48e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e60abf0>]}
[0m10:26:33.465598 [error] [Thread-2 (]: 54 of 80 ERROR creating sql table model test.graph_tuples ...................... [[31mERROR[0m in 1.37s]
[0m10:26:33.466444 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m10:26:33.467962 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m10:26:33.468548 [info ] [Thread-1 (]: 56 of 80 SKIP relation test.graph_lookup ....................................... [[33mSKIP[0m]
[0m10:26:33.469368 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m10:26:33.470700 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m10:26:33.471371 [info ] [Thread-2 (]: 57 of 80 SKIP relation test.graph_unique ....................................... [[33mSKIP[0m]
[0m10:26:33.471823 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m10:26:33.474009 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m10:26:33.474826 [info ] [Thread-1 (]: 58 of 80 SKIP relation test.graph_edge ......................................... [[33mSKIP[0m]
[0m10:26:33.475202 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m10:26:33.476474 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m10:26:33.476942 [info ] [Thread-2 (]: 59 of 80 SKIP relation test.graph_glue ......................................... [[33mSKIP[0m]
[0m10:26:33.477307 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m10:26:33.479417 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m10:26:33.480146 [info ] [Thread-1 (]: 60 of 80 SKIP relation test.graph_qid .......................................... [[33mSKIP[0m]
[0m10:26:33.480548 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m10:26:33.481903 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:26:33.489146 [info ] [Thread-2 (]: 61 of 80 SKIP relation test.attr_myfirstfunnel_prepare_with_qid ................ [[33mSKIP[0m]
[0m10:26:33.489879 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:26:33.490389 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:26:33.491052 [info ] [Thread-1 (]: 62 of 80 SKIP relation test.attr_mysecondfunnel_prepare_with_qid ............... [[33mSKIP[0m]
[0m10:26:33.492304 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m10:26:33.493272 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:26:33.493663 [info ] [Thread-2 (]: 63 of 80 SKIP relation test.full_events ........................................ [[33mSKIP[0m]
[0m10:26:33.494143 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:26:33.495147 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m10:26:33.496123 [info ] [Thread-1 (]: 64 of 80 SKIP relation test.attr_myfirstfunnel_create_events ................... [[33mSKIP[0m]
[0m10:26:33.497293 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:26:33.498537 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:26:33.499575 [info ] [Thread-2 (]: 65 of 80 SKIP relation test.attr_mysecondfunnel_create_events .................. [[33mSKIP[0m]
[0m10:26:33.501119 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:26:33.501817 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:26:33.502575 [info ] [Thread-1 (]: 66 of 80 SKIP relation test.attr_myfirstfunnel_add_row_number .................. [[33mSKIP[0m]
[0m10:26:33.503394 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:26:33.505074 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:26:33.505566 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:26:33.506005 [info ] [Thread-2 (]: 67 of 80 SKIP relation test.attr_mysecondfunnel_add_row_number ................. [[33mSKIP[0m]
[0m10:26:33.506896 [info ] [Thread-1 (]: 68 of 80 SKIP relation test.attr_myfirstfunnel_find_new_period ................. [[33mSKIP[0m]
[0m10:26:33.507549 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:26:33.508053 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:26:33.509364 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:26:33.509870 [info ] [Thread-2 (]: 69 of 80 SKIP relation test.attr_mysecondfunnel_find_new_period ................ [[33mSKIP[0m]
[0m10:26:33.510413 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:26:33.510860 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:26:33.511614 [info ] [Thread-1 (]: 70 of 80 SKIP relation test.attr_myfirstfunnel_calculate_period_number ......... [[33mSKIP[0m]
[0m10:26:33.513585 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:26:33.514126 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:26:33.516053 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:26:33.516560 [info ] [Thread-2 (]: 71 of 80 SKIP relation test.attr_mysecondfunnel_calculate_period_number ........ [[33mSKIP[0m]
[0m10:26:33.518361 [info ] [Thread-1 (]: 72 of 80 SKIP relation test.attr_myfirstfunnel_create_missed_steps ............. [[33mSKIP[0m]
[0m10:26:33.519260 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:26:33.519747 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:26:33.520763 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:26:33.521185 [info ] [Thread-2 (]: 73 of 80 SKIP relation test.attr_mysecondfunnel_create_missed_steps ............ [[33mSKIP[0m]
[0m10:26:33.521759 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:26:33.523013 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:26:33.523423 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:26:33.523832 [info ] [Thread-1 (]: 74 of 80 SKIP relation test.attr_myfirstfunnel_join_to_attr_prepare_with_qid ... [[33mSKIP[0m]
[0m10:26:33.524593 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:26:33.524219 [info ] [Thread-2 (]: 75 of 80 SKIP relation test.attr_mysecondfunnel_join_to_attr_prepare_with_qid .. [[33mSKIP[0m]
[0m10:26:33.526514 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:26:33.526956 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:26:33.527858 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:26:33.528332 [info ] [Thread-1 (]: 76 of 80 SKIP relation test.attr_myfirstfunnel_model ........................... [[33mSKIP[0m]
[0m10:26:33.529833 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:26:33.529080 [info ] [Thread-2 (]: 77 of 80 SKIP relation test.attr_mysecondfunnel_model .......................... [[33mSKIP[0m]
[0m10:26:33.533341 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:26:33.533779 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:26:33.534058 [info ] [Thread-1 (]: 78 of 80 SKIP relation test.attr_myfirstfunnel_final_table ..................... [[33mSKIP[0m]
[0m10:26:33.535666 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:26:33.536186 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:26:33.536784 [info ] [Thread-2 (]: 79 of 80 SKIP relation test.attr_mysecondfunnel_final_table .................... [[33mSKIP[0m]
[0m10:26:33.537516 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:26:33.538309 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m10:26:33.538771 [info ] [Thread-2 (]: 80 of 80 SKIP relation test.dataset_event_table ................................ [[33mSKIP[0m]
[0m10:26:33.539823 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m10:26:33.542172 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:26:33.542685 [debug] [MainThread]: Connection 'master' was properly closed.
[0m10:26:33.542827 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.link_events' was left open.
[0m10:26:33.542952 [debug] [MainThread]: On model.etlcraft_integration_tests.link_events: Close
[0m10:26:33.543046 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.graph_tuples' was left open.
[0m10:26:33.543147 [debug] [MainThread]: On model.etlcraft_integration_tests.graph_tuples: Close
[0m10:26:33.543590 [info ] [MainThread]: 
[0m10:26:33.543881 [info ] [MainThread]: Finished running 38 view models, 12 incremental models, 30 table models in 0 hours 0 minutes and 8.05 seconds (8.05s).
[0m10:26:33.547226 [debug] [MainThread]: Command end result
[0m10:26:33.566461 [info ] [MainThread]: 
[0m10:26:33.566980 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m10:26:33.567181 [info ] [MainThread]: 
[0m10:26:33.567353 [error] [MainThread]: [33mDatabase Error in model graph_tuples (models/5_graph/1_tuples/graph_tuples.sql)[0m
[0m10:26:33.567534 [error] [MainThread]:   :HTTPDriver for http://localhost:8123 returned response code 404)
[0m10:26:33.567780 [error] [MainThread]:    Code: 60. DB::Exception: Table test.join_appmetrica_registry_app_profile_matching does not exist. Maybe you meant test.hash_registry_app_profile_matching?. (UNKNOWN_TABLE) (version 24.1.4.20 (official build))
[0m10:26:33.567996 [error] [MainThread]:   compiled Code at target/run/etlcraft_integration_tests/models/5_graph/1_tuples/graph_tuples.sql
[0m10:26:33.568343 [info ] [MainThread]: 
[0m10:26:33.568636 [info ] [MainThread]: Done. PASS=54 WARN=0 ERROR=1 SKIP=25 TOTAL=80
[0m10:26:33.569148 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474ca8400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb474ca8430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb46e60b490>]}
[0m10:26:33.569455 [debug] [MainThread]: Flushing usage events


============================== 2024-04-17 10:27:36.812749 | 94fc6874-9466-4c3a-8267-c8b96244b24a ==============================
[0m10:27:36.812749 [info ] [MainThread]: Running with dbt=1.4.7
[0m10:27:36.814877 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'full_refresh': True, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m10:27:36.815032 [debug] [MainThread]: Tracking: tracking
[0m10:27:36.819872 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c113edc90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c1147f8e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c1147fee0>]}
[0m10:27:36.844950 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m10:27:36.894118 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m10:27:36.896446 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m10:27:36.964910 [debug] [MainThread]: 1603: static parser failed on 4_business/full_events.sql
[0m10:27:36.993857 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_business/full_events.sql
[0m10:27:36.995230 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_appmetrica_registry.sql
[0m10:27:37.008147 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_appmetrica_registry.sql
[0m10:27:37.009409 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_appmetrica_registry.sql
[0m10:27:37.030183 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_appmetrica_registry.sql
[0m10:27:37.031400 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m10:27:37.042463 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m10:27:37.043643 [debug] [MainThread]: 1603: static parser failed on 4_business/full_datestat.sql
[0m10:27:37.047596 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_business/full_datestat.sql
[0m10:27:37.048725 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_datestat.sql
[0m10:27:37.052668 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_datestat.sql
[0m10:27:37.053877 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_datestat.sql
[0m10:27:37.057904 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_datestat.sql
[0m10:27:37.059111 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m10:27:37.066605 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m10:27:37.067670 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m10:27:37.082955 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m10:27:37.084080 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m10:27:37.088190 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m10:27:37.089339 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m10:27:37.095215 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m10:27:37.096328 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m10:27:37.109136 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m10:27:37.110370 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m10:27:37.117372 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m10:27:37.119048 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m10:27:37.126317 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m10:27:37.127557 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m10:27:37.137995 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m10:27:37.139185 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m10:27:37.145706 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m10:27:37.146980 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m10:27:37.157494 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m10:27:37.158684 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m10:27:37.164855 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m10:27:37.165971 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m10:27:37.172462 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m10:27:37.173564 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m10:27:37.177419 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m10:27:37.178721 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m10:27:37.182628 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m10:27:37.183770 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m10:27:37.189331 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m10:27:37.190504 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m10:27:37.195449 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m10:27:37.196542 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m10:27:37.202114 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m10:27:37.203189 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m10:27:37.207119 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m10:27:37.208247 [debug] [MainThread]: 1603: static parser failed on 5_graph/6_qid/graph_qid.sql
[0m10:27:37.220967 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_graph/6_qid/graph_qid.sql
[0m10:27:37.222234 [debug] [MainThread]: 1603: static parser failed on 5_graph/5_glue/graph_glue.sql
[0m10:27:37.229517 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_graph/5_glue/graph_glue.sql
[0m10:27:37.230664 [debug] [MainThread]: 1603: static parser failed on 5_graph/4_edge/graph_edge.sql
[0m10:27:37.280223 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_graph/4_edge/graph_edge.sql
[0m10:27:37.281478 [debug] [MainThread]: 1603: static parser failed on 5_graph/3_unique/graph_unique.sql
[0m10:27:37.287168 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_graph/3_unique/graph_unique.sql
[0m10:27:37.288302 [debug] [MainThread]: 1603: static parser failed on 5_graph/2_lookup/graph_lookup.sql
[0m10:27:37.293652 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_graph/2_lookup/graph_lookup.sql
[0m10:27:37.294951 [debug] [MainThread]: 1603: static parser failed on 5_graph/1_tuples/graph_tuples.sql
[0m10:27:37.306088 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_graph/1_tuples/graph_tuples.sql
[0m10:27:37.307326 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_events.sql
[0m10:27:37.311492 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_events.sql
[0m10:27:37.312634 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_events.sql
[0m10:27:37.316977 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_events.sql
[0m10:27:37.340716 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c107a36d0>]}
[0m10:27:37.361871 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c109c0640>]}
[0m10:27:37.362578 [info ] [MainThread]: Found 80 models, 8 tests, 0 snapshots, 0 analyses, 528 macros, 0 operations, 22 seed files, 0 sources, 0 exposures, 0 metrics
[0m10:27:37.363070 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c109c0610>]}
[0m10:27:37.368666 [info ] [MainThread]: 
[0m10:27:37.370337 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:27:37.374494 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m10:27:37.384492 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m10:27:37.671823 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m10:27:37.677171 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:37.684474 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m10:27:37.684934 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m10:27:37.691679 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m10:27:37.701883 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:37.712124 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c10880220>]}
[0m10:27:37.712806 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m10:27:37.713101 [info ] [MainThread]: 
[0m10:27:37.717713 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:27:37.718401 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:27:37.718990 [info ] [Thread-1 (]: 1 of 80 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m10:27:37.719716 [info ] [Thread-2 (]: 2 of 80 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m10:27:37.721133 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m10:27:37.722538 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m10:27:37.723768 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m10:27:37.725123 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:27:37.726287 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:27:37.823635 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m10:27:37.825590 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_cohorts$')        
...
[0m10:27:37.841057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:37.878374 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:37.884547 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:37.900239 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )  LIMIT 1
  ...
[0m10:27:37.906094 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:37.908469 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:37.915842 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:37.955830 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m10:27:37.957405 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-04-17 10:27:37.733272 => 2024-04-17 10:27:37.956777
[0m10:27:37.957973 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:27:37.988276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_event_metrics$')        
...
[0m10:27:37.996749 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m10:27:37.999340 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'period') AS period, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )
  )...
[0m10:27:38.005857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.009413 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.012239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.020990 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.022369 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:27:38.025117 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.028504 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.029641 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:27:38.031105 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.032808 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.034044 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.037288 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m10:27:38.038395 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.048940 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m10:27:38.049763 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.051104 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m10:27:38.052053 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-04-17 10:27:37.727459 => 2024-04-17 10:27:38.051898
[0m10:27:38.052843 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:27:38.057325 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m10:27:38.058257 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.082849 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m10:27:38.083267 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )
  )...
[0m10:27:38.087453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.088998 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-04-17 10:27:37.958299 => 2024-04-17 10:27:38.088913
[0m10:27:38.089782 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc472c20>]}
[0m10:27:38.090382 [info ] [Thread-1 (]: 1 of 80 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.37s]
[0m10:27:38.092120 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:27:38.092643 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:27:38.093129 [info ] [Thread-1 (]: 3 of 80 START sql view model test.normalize_adjust_events_default_events ....... [RUN]
[0m10:27:38.095129 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_events'
[0m10:27:38.095454 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_events)
[0m10:27:38.095746 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:27:38.096315 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.099943 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_events$')        
...
[0m10:27:38.103530 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:27:38.108393 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.109505 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:27:38.111113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.115468 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.116761 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.121310 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m10:27:38.123511 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.127544 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.128621 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.132440 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m10:27:38.135909 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.136828 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.141026 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m10:27:38.142688 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.147056 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.148688 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-04-17 10:27:38.053103 => 2024-04-17 10:27:38.148617
[0m10:27:38.149398 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcd22020>]}
[0m10:27:38.149838 [info ] [Thread-2 (]: 2 of 80 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.43s]
[0m10:27:38.150212 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:27:38.150499 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:27:38.151602 [info ] [Thread-2 (]: 4 of 80 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m10:27:38.152657 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.153500 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m10:27:38.163355 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m10:27:38.164058 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m10:27:38.165089 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:27:38.171531 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_network$')        
...
[0m10:27:38.172743 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (compile): 2024-04-17 10:27:38.096555 => 2024-04-17 10:27:38.172634
[0m10:27:38.173607 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:27:38.180109 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m10:27:38.181198 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.184762 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_network'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.185845 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


  create view test.normalize_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
JSONExtractString(_airbyte_data, 'description') AS description, 
JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'section') AS section, 
JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )
  )...
[0m10:27:38.189618 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.191949 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.197574 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.200737 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:27:38.202077 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.203697 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.209335 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.215793 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.222179 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events to test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:27:38.222764 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m10:27:38.224794 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-04-17 10:27:38.165404 => 2024-04-17 10:27:38.224604
[0m10:27:38.225396 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:27:38.229936 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m10:27:38.230791 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.234519 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events 
  
  ...
[0m10:27:38.235861 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
JSONExtractString(_airbyte_data, 'installs') AS installs, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )
  )...
[0m10:27:38.237679 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.238846 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events__dbt_tmp to test.normalize_adjust_events_default_events 
  
  ...
[0m10:27:38.242743 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.247062 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */
drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  ...
[0m10:27:38.248327 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.251750 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:27:38.253185 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.254904 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (execute): 2024-04-17 10:27:38.174151 => 2024-04-17 10:27:38.254831
[0m10:27:38.255750 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4bb790>]}
[0m10:27:38.256728 [info ] [Thread-1 (]: 3 of 80 OK created sql view model test.normalize_adjust_events_default_events .. [[32mOK[0m in 0.16s]
[0m10:27:38.257265 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:27:38.257705 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:27:38.258692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.259590 [info ] [Thread-1 (]: 5 of 80 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m10:27:38.261102 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:27:38.262004 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m10:27:38.263463 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m10:27:38.263852 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:27:38.267447 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_deeplinks$')        
...
[0m10:27:38.268861 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.272175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m10:27:38.275596 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.276752 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m10:27:38.279451 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.280526 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.284068 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.290389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m10:27:38.295690 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.296821 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.298501 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-04-17 10:27:38.225666 => 2024-04-17 10:27:38.298423
[0m10:27:38.300672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.301758 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcd201c0>]}
[0m10:27:38.303610 [info ] [Thread-2 (]: 4 of 80 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.15s]
[0m10:27:38.304151 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:27:38.304696 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:27:38.305771 [info ] [Thread-2 (]: 6 of 80 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m10:27:38.306626 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m10:27:38.306897 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m10:27:38.307074 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:27:38.310869 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m10:27:38.312088 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.315779 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.318369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.322453 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.324134 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.336786 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m10:27:38.337610 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.338258 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-04-17 10:27:38.263959 => 2024-04-17 10:27:38.338159
[0m10:27:38.341182 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.341825 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:27:38.349829 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m10:27:38.350581 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.352021 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.353362 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )
  )...
[0m10:27:38.356932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.369745 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:38.372548 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m10:27:38.376726 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:27:38.378812 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-04-17 10:27:38.307169 => 2024-04-17 10:27:38.378626
[0m10:27:38.379405 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:27:38.384600 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m10:27:38.385309 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.386730 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:27:38.388031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name != 'screen_view'
  )...
[0m10:27:38.390084 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.393274 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m10:27:38.397036 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.398201 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m10:27:38.399603 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.402587 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:27:38.403390 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.407997 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m10:27:38.409028 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.411595 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:27:38.412994 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.414587 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-04-17 10:27:38.343915 => 2024-04-17 10:27:38.414508
[0m10:27:38.415279 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.415959 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc473eb0>]}
[0m10:27:38.419176 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m10:27:38.420068 [info ] [Thread-1 (]: 5 of 80 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.15s]
[0m10:27:38.421719 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:27:38.422170 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:27:38.422892 [info ] [Thread-1 (]: 7 of 80 START sql view model test.normalize_appmetrica_events_default_install .. [RUN]
[0m10:27:38.424542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.425244 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_install'
[0m10:27:38.426738 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m10:27:38.427264 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_install)
[0m10:27:38.428342 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:27:38.432429 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_installations$')        
...
[0m10:27:38.434085 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.439428 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m10:27:38.440210 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.445597 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.446467 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.449626 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-04-17 10:27:38.379663 => 2024-04-17 10:27:38.449559
[0m10:27:38.450228 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcd21930>]}
[0m10:27:38.450583 [info ] [Thread-2 (]: 6 of 80 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.14s]
[0m10:27:38.450923 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:27:38.451151 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:27:38.452380 [info ] [Thread-2 (]: 8 of 80 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m10:27:38.453452 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.454769 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m10:27:38.457501 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.458024 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m10:27:38.459872 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:27:38.466016 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m10:27:38.466875 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.469805 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.474061 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.478274 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.479664 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.490556 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.495125 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m10:27:38.499320 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.501510 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (compile): 2024-04-17 10:27:38.428923 => 2024-04-17 10:27:38.501393
[0m10:27:38.502294 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:27:38.507118 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m10:27:38.508086 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.509591 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.511177 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


  create view test.normalize_appmetrica_events_default_install__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'install_datetime') AS install_datetime, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )
  )...
[0m10:27:38.515439 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.531053 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m10:27:38.531830 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:38.595715 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:27:38.596959 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-04-17 10:27:38.460232 => 2024-04-17 10:27:38.596789
[0m10:27:38.597509 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:27:38.601712 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m10:27:38.602633 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.604091 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install to test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:27:38.605382 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_datetime) AS event_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m10:27:38.607110 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.610146 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install 
  
  ...
[0m10:27:38.613483 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.614665 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install__dbt_tmp to test.normalize_appmetrica_events_default_install 
  
  ...
[0m10:27:38.618872 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.622429 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */
drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  ...
[0m10:27:38.623310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:38.627479 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:27:38.630420 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.630911 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.632069 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (execute): 2024-04-17 10:27:38.502541 => 2024-04-17 10:27:38.632012
[0m10:27:38.633800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:27:38.634526 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc24bfa0>]}
[0m10:27:38.636536 [info ] [Thread-1 (]: 7 of 80 OK created sql view model test.normalize_appmetrica_events_default_install  [[32mOK[0m in 0.21s]
[0m10:27:38.637250 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:27:38.638307 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:27:38.639280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.640175 [info ] [Thread-1 (]: 9 of 80 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m10:27:38.643368 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m10:27:38.644710 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m10:27:38.645985 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m10:27:38.646404 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:27:38.651709 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_sessions_starts$')        
...
[0m10:27:38.652316 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.654116 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m10:27:38.657326 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.661839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m10:27:38.663730 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.667859 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.671305 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.672830 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-04-17 10:27:38.597705 => 2024-04-17 10:27:38.672765
[0m10:27:38.673460 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.674434 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc3d3fd0>]}
[0m10:27:38.677154 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.679187 [info ] [Thread-2 (]: 8 of 80 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.22s]
[0m10:27:38.680148 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:27:38.680900 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:27:38.682241 [info ] [Thread-2 (]: 10 of 80 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m10:27:38.683354 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m10:27:38.683606 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m10:27:38.683795 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:27:38.687433 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_registry_default_[^_]+_profiles$')        
...
[0m10:27:38.688273 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.691629 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.697461 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.700826 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_registry_default_testaccount_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.701725 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.714797 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m10:27:38.716006 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.718569 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.720169 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-04-17 10:27:38.646754 => 2024-04-17 10:27:38.719958
[0m10:27:38.720733 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:27:38.726706 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m10:27:38.727768 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.730262 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.731819 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_start_datetime') AS session_start_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )
  )...
[0m10:27:38.736225 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.742801 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m10:27:38.743711 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.746905 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:27:38.748318 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-04-17 10:27:38.683897 => 2024-04-17 10:27:38.748138
[0m10:27:38.748840 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:27:38.753188 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m10:27:38.754030 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.756250 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:27:38.757756 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )
  )...
[0m10:27:38.759779 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.763535 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:27:38.766205 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.766826 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.767908 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:27:38.771080 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:27:38.775468 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.776039 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.780685 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m10:27:38.782158 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:27:38.785493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.786789 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-04-17 10:27:38.720834 => 2024-04-17 10:27:38.786732
[0m10:27:38.787401 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4b9930>]}
[0m10:27:38.787832 [info ] [Thread-1 (]: 9 of 80 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.14s]
[0m10:27:38.788199 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:27:38.788524 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:27:38.789605 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.790777 [info ] [Thread-1 (]: 11 of 80 START sql view model test.normalize_mt_datestat_default_banners ....... [RUN]
[0m10:27:38.794481 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m10:27:38.795456 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners'
[0m10:27:38.796867 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners)
[0m10:27:38.797160 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:27:38.801748 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners$')        
...
[0m10:27:38.803064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.805937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m10:27:38.809681 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.814139 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m10:27:38.815588 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.820260 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.822208 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.823831 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-04-17 10:27:38.749089 => 2024-04-17 10:27:38.823764
[0m10:27:38.824564 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc3a45e0>]}
[0m10:27:38.825132 [info ] [Thread-2 (]: 10 of 80 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.14s]
[0m10:27:38.826174 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.826843 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:27:38.830917 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.832015 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:27:38.834733 [info ] [Thread-2 (]: 12 of 80 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m10:27:38.835861 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m10:27:38.836163 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m10:27:38.836371 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:27:38.839857 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners_statistics$')        
...
[0m10:27:38.841355 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.844365 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.849631 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.854144 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.854888 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.863958 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m10:27:38.865389 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.868347 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.869498 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (compile): 2024-04-17 10:27:38.797479 => 2024-04-17 10:27:38.869341
[0m10:27:38.870385 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:27:38.875102 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m10:27:38.875828 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.878197 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:38.880420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


  create view test.normalize_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )
  )...
[0m10:27:38.883941 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.890965 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m10:27:38.891733 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.894899 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:27:38.897126 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-04-17 10:27:38.836476 => 2024-04-17 10:27:38.896824
[0m10:27:38.898179 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:27:38.902488 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m10:27:38.903455 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.905572 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners to test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:27:38.906982 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )
  )...
[0m10:27:38.909375 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.912688 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners 
  
  ...
[0m10:27:38.915558 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.916803 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners__dbt_tmp to test.normalize_mt_datestat_default_banners 
  
  ...
[0m10:27:38.921056 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.921688 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.926596 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */
drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  ...
[0m10:27:38.930520 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:27:38.935979 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.937285 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (execute): 2024-04-17 10:27:38.870677 => 2024-04-17 10:27:38.937228
[0m10:27:38.937891 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc35dcc0>]}
[0m10:27:38.938662 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.939305 [info ] [Thread-1 (]: 11 of 80 OK created sql view model test.normalize_mt_datestat_default_banners .. [[32mOK[0m in 0.14s]
[0m10:27:38.940635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:27:38.941127 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:27:38.942548 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:27:38.943538 [info ] [Thread-1 (]: 13 of 80 START sql view model test.normalize_mt_datestat_default_campaigns ..... [RUN]
[0m10:27:38.944811 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns'
[0m10:27:38.945660 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.946099 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns)
[0m10:27:38.950212 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m10:27:38.950978 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:27:38.955769 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_campaigns$')        
...
[0m10:27:38.958067 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.959539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m10:27:38.963231 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.964451 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.968256 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m10:27:38.972433 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:38.976375 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.978016 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-04-17 10:27:38.898386 => 2024-04-17 10:27:38.977939
[0m10:27:38.978844 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:38.979897 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc469a80>]}
[0m10:27:38.982508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )  LIMIT 1
  ...
[0m10:27:38.983387 [info ] [Thread-2 (]: 12 of 80 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.14s]
[0m10:27:38.985419 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:27:38.985810 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:27:38.986278 [info ] [Thread-2 (]: 14 of 80 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m10:27:38.987140 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m10:27:38.988477 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m10:27:38.989146 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:27:38.989697 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:38.994966 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_utmcraft_registry_default_[^_]+_utmresult$')        
...
[0m10:27:38.998058 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:39.005513 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.006104 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.010905 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m10:27:39.016455 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = '_airbyte_raw_utmcraft_registry_default_testaccount_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.018040 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (compile): 2024-04-17 10:27:38.952287 => 2024-04-17 10:27:39.017884
[0m10:27:39.018465 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:27:39.023473 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m10:27:39.024360 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.025317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


  create view test.normalize_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )
  )...
[0m10:27:39.028514 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )  LIMIT 1
  ...
[0m10:27:39.036943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.038746 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:39.040339 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.043711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:27:39.045073 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.056038 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.057249 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m10:27:39.058776 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns to test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:27:39.059650 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-04-17 10:27:38.989901 => 2024-04-17 10:27:39.059560
[0m10:27:39.061876 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:27:39.067955 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m10:27:39.068647 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.071522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m10:27:39.073082 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
JSONExtractString(_airbyte_data, 'data') AS data, 
JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )
  )...
[0m10:27:39.075374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.076536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns__dbt_tmp to test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m10:27:39.080413 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.085725 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */
drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m10:27:39.087133 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.090124 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:27:39.093758 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.094995 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:27:39.096104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.097679 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (execute): 2024-04-17 10:27:39.018667 => 2024-04-17 10:27:39.097612
[0m10:27:39.098439 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc46df30>]}
[0m10:27:39.099069 [info ] [Thread-1 (]: 13 of 80 OK created sql view model test.normalize_mt_datestat_default_campaigns  [[32mOK[0m in 0.15s]
[0m10:27:39.100110 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.100604 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:27:39.103363 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m10:27:39.104206 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:27:39.107761 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.107029 [info ] [Thread-1 (]: 15 of 80 START sql view model test.normalize_vkads_datestat_default_ad_plans ... [RUN]
[0m10:27:39.109800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m10:27:39.110705 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans'
[0m10:27:39.111884 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans)
[0m10:27:39.112335 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:27:39.116614 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans$')        
...
[0m10:27:39.117465 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.123500 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m10:27:39.125082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.129097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.132880 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.134413 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-04-17 10:27:39.062186 => 2024-04-17 10:27:39.134298
[0m10:27:39.135144 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.136303 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcd39d80>]}
[0m10:27:39.139415 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )  LIMIT 1
  ...
[0m10:27:39.140414 [info ] [Thread-2 (]: 14 of 80 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.15s]
[0m10:27:39.142797 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:27:39.143978 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:27:39.145742 [info ] [Thread-2 (]: 16 of 80 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:27:39.147897 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m10:27:39.149004 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.149334 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m10:27:39.151267 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:39.151859 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:27:39.158307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans_statistics$')        
...
[0m10:27:39.159340 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.172361 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.182063 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.185873 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m10:27:39.187657 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (compile): 2024-04-17 10:27:39.112613 => 2024-04-17 10:27:39.187527
[0m10:27:39.187988 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:27:39.192741 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m10:27:39.193690 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.197940 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )  LIMIT 1
  ...
[0m10:27:39.199933 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


  create view test.normalize_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
JSONExtractString(_airbyte_data, 'created') AS created, 
JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'objective') AS objective, 
JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
JSONExtractString(_airbyte_data, 'status') AS status, 
JSONExtractString(_airbyte_data, 'updated') AS updated, 
JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )
  )...
[0m10:27:39.204068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.206147 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:39.209896 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.214195 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:27:39.215750 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.222779 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.223850 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans to test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:27:39.233477 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m10:27:39.234721 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.237646 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m10:27:39.239184 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-17 10:27:39.153309 => 2024-04-17 10:27:39.239086
[0m10:27:39.239505 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:27:39.244831 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m10:27:39.246485 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'moat') AS moat, 
JSONExtractString(_airbyte_data, 'playable') AS playable, 
JSONExtractString(_airbyte_data, 'romi') AS romi, 
JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
JSONExtractString(_airbyte_data, 'tps') AS tps, 
JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )
  )...
[0m10:27:39.247414 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.249756 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m10:27:39.253214 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.257723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m10:27:39.259232 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.262862 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:27:39.264333 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.266152 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (execute): 2024-04-17 10:27:39.188129 => 2024-04-17 10:27:39.266065
[0m10:27:39.266997 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.267630 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc2eb6d0>]}
[0m10:27:39.269140 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:27:39.269812 [info ] [Thread-1 (]: 15 of 80 OK created sql view model test.normalize_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.16s]
[0m10:27:39.271905 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:27:39.272383 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:27:39.273176 [info ] [Thread-1 (]: 17 of 80 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m10:27:39.274091 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.274851 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m10:27:39.277862 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:27:39.278233 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m10:27:39.279415 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:27:39.283042 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_yd_datestat_default_[^_]+_custom_report$')        
...
[0m10:27:39.283886 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.287287 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:27:39.291440 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.292122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.298872 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m10:27:39.303149 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = '_airbyte_raw_yd_datestat_default_testaccount_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.307303 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.308768 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-17 10:27:39.239694 => 2024-04-17 10:27:39.308690
[0m10:27:39.309469 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc32aef0>]}
[0m10:27:39.310254 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.311335 [info ] [Thread-2 (]: 16 of 80 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.16s]
[0m10:27:39.314997 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )  LIMIT 1
  ...
[0m10:27:39.315676 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:27:39.317457 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:27:39.318651 [info ] [Thread-2 (]: 18 of 80 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:27:39.319559 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m10:27:39.319883 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m10:27:39.320171 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:27:39.324230 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_ym_events_default_[^_]+_yandex_metrika_stream$')        
...
[0m10:27:39.325130 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.327818 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:39.335127 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.335917 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.347473 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m10:27:39.351562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = '_airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.353580 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-04-17 10:27:39.279729 => 2024-04-17 10:27:39.353476
[0m10:27:39.353958 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:27:39.358451 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m10:27:39.359314 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.362260 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )  LIMIT 1
  ...
[0m10:27:39.364759 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
JSONExtractString(_airbyte_data, 'Date') AS Date, 
JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )
  )...
[0m10:27:39.369764 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.371526 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:27:39.374580 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.378009 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:27:39.379863 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.392228 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.399289 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:27:39.472822 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m10:27:39.473615 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-04-17 10:27:39.320566 => 2024-04-17 10:27:39.473509
[0m10:27:39.473991 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:27:39.478291 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m10:27:39.479044 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.481757 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m10:27:39.482939 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )
  )...
[0m10:27:39.485145 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.486190 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m10:27:39.489459 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.493936 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m10:27:39.495178 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.498142 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:27:39.501301 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.502714 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-04-17 10:27:39.354149 => 2024-04-17 10:27:39.502651
[0m10:27:39.503339 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.504336 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1327d0>]}
[0m10:27:39.505829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:27:39.506531 [info ] [Thread-1 (]: 17 of 80 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.23s]
[0m10:27:39.508315 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:27:39.508838 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:27:39.509730 [info ] [Thread-1 (]: 19 of 80 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m10:27:39.511394 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.512422 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m10:27:39.515388 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:27:39.515796 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m10:27:39.517100 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:27:39.528938 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.530828 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m10:27:39.532392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:27:39.534532 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-04-17 10:27:39.517282 => 2024-04-17 10:27:39.534277
[0m10:27:39.535382 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:27:39.547702 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.557585 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m10:27:39.587981 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:39.593932 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

    )
        ...
[0m10:27:39.595885 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-04-17 10:27:39.474313 => 2024-04-17 10:27:39.595823
[0m10:27:39.597953 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c108129e0>]}
[0m10:27:39.598558 [info ] [Thread-2 (]: 18 of 80 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.28s]
[0m10:27:39.599288 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:27:39.599682 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:27:39.600474 [info ] [Thread-2 (]: 20 of 80 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m10:27:39.601575 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m10:27:39.601830 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m10:27:39.602070 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:27:39.606216 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m10:27:39.606766 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-04-17 10:27:39.602200 => 2024-04-17 10:27:39.606668
[0m10:27:39.607153 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:27:39.613995 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

    )
        ...
[0m10:27:39.615055 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:39.622562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.627743 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.630089 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m10:27:39.630836 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

  
    ...
[0m10:27:39.632463 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:39.635661 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.639259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.642373 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:27:39.643299 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.647450 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m10:27:39.648451 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.649939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    rename table test.incremental_adjust_events_default_cohorts__dbt_tmp to test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:27:39.651168 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

  
    ...
[0m10:27:39.653540 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.658151 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
EXCHANGE TABLES test.incremental_adjust_events_default_cohorts__dbt_backup AND test.incremental_adjust_events_default_cohorts 
  
  ...
[0m10:27:39.662547 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.665903 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:27:39.666643 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.675212 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  ...
[0m10:27:39.676010 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.677990 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    rename table test.incremental_adjust_events_default_event_metrics__dbt_tmp to test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:27:39.681628 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.682163 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.683856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
EXCHANGE TABLES test.incremental_adjust_events_default_event_metrics__dbt_backup AND test.incremental_adjust_events_default_event_metrics 
  
  ...
[0m10:27:39.685948 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-04-17 10:27:39.535866 => 2024-04-17 10:27:39.685825
[0m10:27:39.687932 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc3c9150>]}
[0m10:27:39.688792 [info ] [Thread-1 (]: 19 of 80 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.18s]
[0m10:27:39.689758 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:27:39.690256 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:27:39.691667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.690990 [info ] [Thread-1 (]: 21 of 80 START sql view model test.incremental_adjust_events_default_events .... [RUN]
[0m10:27:39.697576 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m10:27:39.698522 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_events'
[0m10:27:39.699394 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_events)
[0m10:27:39.699670 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:27:39.702873 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m10:27:39.703694 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.705029 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-04-17 10:27:39.607367 => 2024-04-17 10:27:39.704967
[0m10:27:39.705698 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc3484f0>]}
[0m10:27:39.706199 [info ] [Thread-2 (]: 20 of 80 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.10s]
[0m10:27:39.706600 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:27:39.706916 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (compile): 2024-04-17 10:27:39.699863 => 2024-04-17 10:27:39.706789
[0m10:27:39.707598 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:27:39.708706 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:27:39.709449 [info ] [Thread-2 (]: 22 of 80 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m10:27:39.714861 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m10:27:39.715707 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m10:27:39.716266 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m10:27:39.716480 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:27:39.719930 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m10:27:39.720701 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */


  create view test.incremental_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_adjust_events_default_events

  )...
[0m10:27:39.721076 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-04-17 10:27:39.716607 => 2024-04-17 10:27:39.720939
[0m10:27:39.722516 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:27:39.729306 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

    )
        ...
[0m10:27:39.731951 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.735301 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:27:39.740273 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.741771 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events to test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:27:39.746194 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.746990 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:39.750475 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events 
  
  ...
[0m10:27:39.753539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.757468 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.758815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events__dbt_tmp to test.incremental_adjust_events_default_events 
  
  ...
[0m10:27:39.760015 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.763173 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m10:27:39.764476 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.767998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  ...
[0m10:27:39.769241 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_tmp ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

  
    ...
[0m10:27:39.771988 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.773416 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (execute): 2024-04-17 10:27:39.709881 => 2024-04-17 10:27:39.773326
[0m10:27:39.774175 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1327d0>]}
[0m10:27:39.774811 [info ] [Thread-1 (]: 21 of 80 OK created sql view model test.incremental_adjust_events_default_events  [[32mOK[0m in 0.08s]
[0m10:27:39.775266 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:27:39.775655 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:27:39.776216 [info ] [Thread-1 (]: 23 of 80 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m10:27:39.777385 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m10:27:39.777699 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m10:27:39.777931 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:27:39.781730 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m10:27:39.782710 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.786108 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:27:39.787362 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-04-17 10:27:39.778071 => 2024-04-17 10:27:39.787193
[0m10:27:39.787811 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:27:39.795702 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.797342 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

    )
        ...
[0m10:27:39.798517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    rename table test.incremental_adjust_events_default_network__dbt_tmp to test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:27:39.802450 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.803879 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
EXCHANGE TABLES test.incremental_adjust_events_default_network__dbt_backup AND test.incremental_adjust_events_default_network 
  
  ...
[0m10:27:39.808772 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.814341 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  ...
[0m10:27:39.817077 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:39.819693 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.820556 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.823085 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-04-17 10:27:39.722798 => 2024-04-17 10:27:39.823024
[0m10:27:39.823742 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4943a0>]}
[0m10:27:39.824488 [info ] [Thread-2 (]: 22 of 80 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.11s]
[0m10:27:39.824963 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:27:39.825356 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:27:39.826347 [info ] [Thread-2 (]: 24 of 80 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m10:27:39.827373 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m10:27:39.827759 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m10:27:39.828111 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:27:39.832103 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m10:27:39.833053 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.835961 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m10:27:39.837161 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-04-17 10:27:39.828394 => 2024-04-17 10:27:39.836937
[0m10:27:39.837644 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:27:39.842536 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

    )
        ...
[0m10:27:39.843681 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

  
    ...
[0m10:27:39.867536 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:39.870741 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:27:39.872286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:39.876379 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.877473 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.880578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    rename table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp to test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:27:39.883808 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.884592 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.886124 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m10:27:39.887509 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_deeplinks__dbt_backup AND test.incremental_appmetrica_events_default_deeplinks 
  
  ...
[0m10:27:39.888977 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_tmp ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

  
    ...
[0m10:27:39.893102 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.898103 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m10:27:39.901709 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.903176 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-04-17 10:27:39.787936 => 2024-04-17 10:27:39.903104
[0m10:27:39.903883 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc443dc0>]}
[0m10:27:39.904610 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:39.905227 [info ] [Thread-1 (]: 23 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.13s]
[0m10:27:39.908300 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:27:39.908990 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:27:39.911490 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:27:39.912104 [info ] [Thread-1 (]: 25 of 80 START sql incremental model test.incremental_appmetrica_events_default_install  [RUN]
[0m10:27:39.913837 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_install'
[0m10:27:39.914813 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.915061 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_install)
[0m10:27:39.916341 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    rename table test.incremental_appmetrica_events_default_events__dbt_tmp to test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:27:39.916880 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:27:39.922553 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m10:27:39.923500 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (compile): 2024-04-17 10:27:39.918650 => 2024-04-17 10:27:39.923381
[0m10:27:39.923877 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:27:39.929696 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

            

    
        create table test.incremental_appmetrica_events_default_install__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

    )
        ...
[0m10:27:39.930630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.933276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_events__dbt_backup AND test.incremental_appmetrica_events_default_events 
  
  ...
[0m10:27:39.937094 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.943442 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  ...
[0m10:27:39.948870 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.950491 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-04-17 10:27:39.837993 => 2024-04-17 10:27:39.950410
[0m10:27:39.951222 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc230370>]}
[0m10:27:39.951786 [info ] [Thread-2 (]: 24 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.12s]
[0m10:27:39.952278 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:27:39.952708 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:27:39.953278 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:39.953930 [info ] [Thread-2 (]: 26 of 80 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m10:27:39.957077 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:39.958043 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m10:27:39.959602 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m10:27:39.960361 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:27:39.965508 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m10:27:39.966711 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.969755 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m10:27:39.970383 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_install__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

  
    ...
[0m10:27:39.970827 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-04-17 10:27:39.960974 => 2024-04-17 10:27:39.970625
[0m10:27:39.972194 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:27:39.978259 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

    )
        ...
[0m10:27:39.982230 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:39.985136 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    drop table if exists test.incremental_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:27:39.989087 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.990326 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    rename table test.incremental_appmetrica_events_default_install__dbt_tmp to test.incremental_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:27:39.994576 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:39.996372 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_install__dbt_backup AND test.incremental_appmetrica_events_default_install 
  
  ...
[0m10:27:39.997895 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:40.001727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:40.002625 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.009682 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.011200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_backup 
  ...
[0m10:27:40.014238 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m10:27:40.016199 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_tmp ("__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

  
    ...
[0m10:27:40.017937 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.019344 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (execute): 2024-04-17 10:27:39.924032 => 2024-04-17 10:27:40.019262
[0m10:27:40.020038 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc440220>]}
[0m10:27:40.036139 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:40.039313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:27:40.042484 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.043628 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    rename table test.incremental_appmetrica_events_default_screen_view__dbt_tmp to test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:27:40.047140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.048293 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_screen_view__dbt_backup AND test.incremental_appmetrica_events_default_screen_view 
  
  ...
[0m10:27:40.052759 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.056774 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m10:27:40.060384 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.061712 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-04-17 10:27:39.972507 => 2024-04-17 10:27:40.061652
[0m10:27:40.062242 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc47ed70>]}
[0m10:27:40.785921 [info ] [Thread-1 (]: 25 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_install  [[32mOK[0m in 0.11s]
[0m10:27:40.787725 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:27:40.787111 [info ] [Thread-2 (]: 26 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.10s]
[0m10:27:40.788538 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:27:40.789198 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:27:40.789636 [info ] [Thread-1 (]: 27 of 80 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m10:27:40.790247 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:27:40.791385 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m10:27:40.791954 [info ] [Thread-2 (]: 28 of 80 START sql view model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m10:27:40.792509 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m10:27:40.793370 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m10:27:40.794153 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:27:40.794890 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m10:27:40.799702 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m10:27:40.800409 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:27:40.805316 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m10:27:40.805956 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-04-17 10:27:40.795226 => 2024-04-17 10:27:40.805857
[0m10:27:40.806453 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:27:40.806840 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-04-17 10:27:40.801170 => 2024-04-17 10:27:40.806754
[0m10:27:40.812764 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

    )
        ...
[0m10:27:40.813657 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:27:40.822978 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m10:27:40.823629 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */


  create view test.incremental_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

  )...
[0m10:27:40.831454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:40.834419 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:40.835921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.839692 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:27:40.840396 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.842563 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m10:27:40.843514 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

  
    ...
[0m10:27:40.844298 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.846790 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles to test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:27:40.850112 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.853455 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m10:27:40.854823 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.857634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:27:40.858257 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.860691 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles__dbt_tmp to test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m10:27:40.862332 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.863825 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    rename table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp to test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:27:40.864635 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.870163 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m10:27:40.871407 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.873913 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_sessions_starts__dbt_backup AND test.incremental_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:27:40.874742 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.877469 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-04-17 10:27:40.815464 => 2024-04-17 10:27:40.877355
[0m10:27:40.878571 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4b9120>]}
[0m10:27:40.879252 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.879969 [info ] [Thread-2 (]: 28 of 80 OK created sql view model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.09s]
[0m10:27:40.885426 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m10:27:40.886019 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:27:40.887297 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:27:40.888838 [info ] [Thread-2 (]: 29 of 80 START sql view model test.incremental_mt_datestat_default_banners ..... [RUN]
[0m10:27:40.890021 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.890916 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners'
[0m10:27:40.892742 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-04-17 10:27:40.807025 => 2024-04-17 10:27:40.892655
[0m10:27:40.893164 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners)
[0m10:27:40.894028 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc3a2560>]}
[0m10:27:40.894587 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:27:40.895870 [info ] [Thread-1 (]: 27 of 80 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.10s]
[0m10:27:40.900183 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m10:27:40.901047 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:27:40.902347 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:27:40.903316 [info ] [Thread-1 (]: 30 of 80 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m10:27:40.904819 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m10:27:40.905459 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m10:27:40.906396 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (compile): 2024-04-17 10:27:40.896829 => 2024-04-17 10:27:40.906270
[0m10:27:40.906871 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:27:40.907305 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:27:40.912206 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m10:27:40.918131 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m10:27:40.919185 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */


  create view test.incremental_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_banners

  )...
[0m10:27:40.920409 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-04-17 10:27:40.907651 => 2024-04-17 10:27:40.920258
[0m10:27:40.921372 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:27:40.928161 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

    )
        ...
[0m10:27:40.930067 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.934618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:27:40.938841 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.941685 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners to test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:27:40.945242 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:40.948578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:40.949332 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.953755 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners 
  
  ...
[0m10:27:40.955240 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.957837 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m10:27:40.958634 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.960660 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners__dbt_tmp to test.incremental_mt_datestat_default_banners 
  
  ...
[0m10:27:40.962835 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_tmp ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

  
    ...
[0m10:27:40.965300 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.969106 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  ...
[0m10:27:40.972239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.973014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:40.975901 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:27:40.977840 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (execute): 2024-04-17 10:27:40.912994 => 2024-04-17 10:27:40.977767
[0m10:27:40.980649 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc47c700>]}
[0m10:27:40.981434 [info ] [Thread-2 (]: 29 of 80 OK created sql view model test.incremental_mt_datestat_default_banners  [[32mOK[0m in 0.09s]
[0m10:27:40.981923 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:27:40.982314 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:27:40.983026 [info ] [Thread-2 (]: 31 of 80 START sql view model test.incremental_mt_datestat_default_campaigns ... [RUN]
[0m10:27:40.984645 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns'
[0m10:27:40.985122 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns)
[0m10:27:40.985674 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:40.986070 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:27:40.987513 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    rename table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp to test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:27:40.991993 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m10:27:40.994311 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (compile): 2024-04-17 10:27:40.987923 => 2024-04-17 10:27:40.994050
[0m10:27:40.994953 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:27:41.000979 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m10:27:41.002042 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.003275 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_banners_statistics__dbt_backup AND test.incremental_mt_datestat_default_banners_statistics 
  
  ...
[0m10:27:41.004666 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */


  create view test.incremental_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_campaigns

  )...
[0m10:27:41.008480 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.080034 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:27:41.082503 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m10:27:41.085961 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:27:41.089771 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.091037 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-04-17 10:27:40.921563 => 2024-04-17 10:27:41.090974
[0m10:27:41.091720 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.092812 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1dd150>]}
[0m10:27:41.094996 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns to test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:27:41.095860 [info ] [Thread-1 (]: 30 of 80 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.19s]
[0m10:27:41.097663 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:27:41.098334 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:27:41.099794 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.102626 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m10:27:41.099197 [info ] [Thread-1 (]: 32 of 80 START sql view model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m10:27:41.105041 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m10:27:41.105776 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m10:27:41.106178 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:27:41.109102 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m10:27:41.109707 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-04-17 10:27:41.106418 => 2024-04-17 10:27:41.109630
[0m10:27:41.110468 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.111030 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:27:41.112622 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns__dbt_tmp to test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m10:27:41.120122 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m10:27:41.121875 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */


  create view test.incremental_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

  )...
[0m10:27:41.123595 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.130224 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m10:27:41.131766 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.135348 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:27:41.136034 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.138191 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (execute): 2024-04-17 10:27:40.995130 => 2024-04-17 10:27:41.138126
[0m10:27:41.138916 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc183b50>]}
[0m10:27:41.139373 [info ] [Thread-2 (]: 31 of 80 OK created sql view model test.incremental_mt_datestat_default_campaigns  [[32mOK[0m in 0.15s]
[0m10:27:41.139761 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:27:41.140111 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:27:41.142668 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.141495 [info ] [Thread-2 (]: 33 of 80 START sql view model test.incremental_vkads_datestat_default_ad_plans . [RUN]
[0m10:27:41.144550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult to test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:27:41.146663 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans'
[0m10:27:41.148390 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans)
[0m10:27:41.149078 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:27:41.152951 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m10:27:41.153948 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.157740 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m10:27:41.158747 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (compile): 2024-04-17 10:27:41.149700 => 2024-04-17 10:27:41.158601
[0m10:27:41.159384 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:27:41.165491 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m10:27:41.166304 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.167919 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult__dbt_tmp to test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m10:27:41.169454 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */


  create view test.incremental_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

  )...
[0m10:27:41.171441 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.177087 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m10:27:41.179399 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.184355 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:27:41.185723 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.187936 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-04-17 10:27:41.112988 => 2024-04-17 10:27:41.187865
[0m10:27:41.188633 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4543a0>]}
[0m10:27:41.189329 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.189866 [info ] [Thread-1 (]: 32 of 80 OK created sql view model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.08s]
[0m10:27:41.191206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans to test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:27:41.191934 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:27:41.193367 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:27:41.196206 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.194787 [info ] [Thread-1 (]: 34 of 80 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:27:41.200576 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m10:27:41.201679 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m10:27:41.203018 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m10:27:41.203322 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:27:41.206779 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m10:27:41.208116 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-17 10:27:41.203498 => 2024-04-17 10:27:41.207812
[0m10:27:41.208769 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:27:41.215245 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.216598 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

    )
        ...
[0m10:27:41.217937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m10:27:41.221472 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.225811 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m10:27:41.229991 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.231849 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (execute): 2024-04-17 10:27:41.159989 => 2024-04-17 10:27:41.231775
[0m10:27:41.232481 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc47c700>]}
[0m10:27:41.232923 [info ] [Thread-2 (]: 33 of 80 OK created sql view model test.incremental_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.09s]
[0m10:27:41.233258 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:27:41.233535 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:27:41.234385 [info ] [Thread-2 (]: 35 of 80 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m10:27:41.235162 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m10:27:41.235309 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m10:27:41.235455 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:27:41.238559 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m10:27:41.239714 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:41.244660 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.246216 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-04-17 10:27:41.235546 => 2024-04-17 10:27:41.245977
[0m10:27:41.246775 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:27:41.251660 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

    )
        ...
[0m10:27:41.257256 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.259560 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m10:27:41.260256 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

  
    ...
[0m10:27:41.269269 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:41.270112 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.272986 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.277028 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:27:41.282232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.283079 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.285047 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:27:41.287045 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m10:27:41.289192 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_tmp ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

  
    ...
[0m10:27:41.292746 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.294181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
EXCHANGE TABLES test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup AND test.incremental_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:27:41.299580 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.300341 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.305342 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:27:41.309691 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m10:27:41.314954 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.316710 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-17 10:27:41.209076 => 2024-04-17 10:27:41.316644
[0m10:27:41.317501 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.318544 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc30d000>]}
[0m10:27:41.320313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    rename table test.incremental_yd_datestat_default_custom_report__dbt_tmp to test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:27:41.320985 [info ] [Thread-1 (]: 34 of 80 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.12s]
[0m10:27:41.323135 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:27:41.323838 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:27:41.324802 [info ] [Thread-1 (]: 36 of 80 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:27:41.327264 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.328143 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m10:27:41.329541 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
EXCHANGE TABLES test.incremental_yd_datestat_default_custom_report__dbt_backup AND test.incremental_yd_datestat_default_custom_report 
  
  ...
[0m10:27:41.330000 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m10:27:41.331290 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:27:41.338015 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m10:27:41.338835 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.343851 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m10:27:41.345490 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-04-17 10:27:41.331903 => 2024-04-17 10:27:41.345281
[0m10:27:41.346033 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:27:41.352073 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

    )
        ...
[0m10:27:41.352937 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.355600 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-04-17 10:27:41.247003 => 2024-04-17 10:27:41.355524
[0m10:27:41.356268 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc3eef20>]}
[0m10:27:41.356790 [info ] [Thread-2 (]: 35 of 80 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.12s]
[0m10:27:41.357243 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:27:41.357605 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry
[0m10:27:41.357988 [info ] [Thread-2 (]: 37 of 80 START sql view model test.join_appmetrica_registry .................... [RUN]
[0m10:27:41.359067 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry'
[0m10:27:41.360260 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry)
[0m10:27:41.360836 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry
[0m10:27:41.378947 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m10:27:41.381386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:41.384703 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.386100 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.392121 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m10:27:41.396979 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.399129 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m10:27:41.399853 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.401915 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:27:41.403367 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

  
    ...
[0m10:27:41.416062 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.420572 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:27:41.423781 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.425035 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    rename table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp to test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:27:41.430204 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.431732 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
EXCHANGE TABLES test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup AND test.incremental_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:27:41.436729 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.441133 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m10:27:41.445246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.446900 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-04-17 10:27:41.346164 => 2024-04-17 10:27:41.446824
[0m10:27:41.447590 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc169480>]}
[0m10:27:41.448040 [info ] [Thread-1 (]: 36 of 80 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.12s]
[0m10:27:41.448471 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:27:41.448830 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:27:41.449930 [info ] [Thread-1 (]: 38 of 80 START sql view model test.join_appmetrica_events ...................... [RUN]
[0m10:27:41.450790 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m10:27:41.451070 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m10:27:41.451289 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:27:41.455646 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m10:27:41.465420 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.467164 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m10:27:41.467858 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:27:41.473509 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m10:27:41.475555 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.477544 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:27:41.481553 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.485493 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.490907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.493360 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry"
[0m10:27:41.493968 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry (compile): 2024-04-17 10:27:41.361183 => 2024-04-17 10:27:41.493855
[0m10:27:41.494311 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry
[0m10:27:41.499488 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry"
[0m10:27:41.499929 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */


  create view test.join_appmetrica_registry__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )





  )...
[0m10:27:41.509999 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.514203 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    drop table if exists test.join_appmetrica_registry__dbt_backup 
  
  ...
[0m10:27:41.517345 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.518751 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    rename table test.join_appmetrica_registry to test.join_appmetrica_registry__dbt_backup 
  
  ...
[0m10:27:41.524741 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.527752 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    drop table if exists test.join_appmetrica_registry 
  
  ...
[0m10:27:41.529730 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:27:41.542774 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.544095 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m10:27:41.545645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */

    rename table test.join_appmetrica_registry__dbt_tmp to test.join_appmetrica_registry 
  
  ...
[0m10:27:41.550353 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.554701 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry"} */
drop table if exists test.join_appmetrica_registry__dbt_backup 
  ...
[0m10:27:41.555367 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.559675 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.560911 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.563953 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry (execute): 2024-04-17 10:27:41.494513 => 2024-04-17 10:27:41.563890
[0m10:27:41.564619 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc24e170>]}
[0m10:27:41.565029 [info ] [Thread-2 (]: 37 of 80 OK created sql view model test.join_appmetrica_registry ............... [[32mOK[0m in 0.21s]
[0m10:27:41.565349 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry
[0m10:27:41.565628 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:27:41.565926 [info ] [Thread-2 (]: 39 of 80 START sql view model test.join_mt_datestat ............................ [RUN]
[0m10:27:41.567769 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m10:27:41.568831 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m10:27:41.569509 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.569831 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m10:27:41.572651 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m10:27:41.577321 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_mt__%'
    GROUP BY table

...
[0m10:27:41.583787 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.586104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m10:27:41.587111 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.592296 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.599387 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.603276 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_install$')        
...
[0m10:27:41.604086 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:41.607110 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:27:41.612969 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.619628 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.620924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.627426 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.631057 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m10:27:41.635450 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m10:27:41.642189 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.646464 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.647942 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.652173 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.653022 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.657469 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners$')        
...
[0m10:27:41.659229 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.662449 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m10:27:41.665151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.668856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.670422 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.673579 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.678195 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.681114 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_campaigns$')        
...
[0m10:27:41.681960 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.689960 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m10:27:41.690509 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-04-17 10:27:41.451401 => 2024-04-17 10:27:41.690411
[0m10:27:41.691138 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:27:41.697567 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m10:27:41.698479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:41.701562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.702837 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


  create view test.join_appmetrica_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    '' AS visitId,
    '' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts







  )...
[0m10:27:41.706544 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.708799 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m10:27:41.709569 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-04-17 10:27:41.573091 => 2024-04-17 10:27:41.709442
[0m10:27:41.709990 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m10:27:41.714497 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m10:27:41.715143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


  create view test.join_mt_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    '' AS productName,
    campaigns.name AS adCampaignName,
    '' AS adGroupName,
    banners.id AS adId,
    '' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(adGroupName, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    '' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    '' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id







  )...
[0m10:27:41.738343 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:41.741503 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat__dbt_backup 
  
  ...
[0m10:27:41.744899 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.746148 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat to test.join_mt_datestat__dbt_backup 
  
  ...
[0m10:27:41.749723 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.752867 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat 
  
  ...
[0m10:27:41.756277 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.757573 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat__dbt_tmp to test.join_mt_datestat 
  
  ...
[0m10:27:41.761146 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.766220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_backup 
  ...
[0m10:27:41.771389 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.773181 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-04-17 10:27:41.710167 => 2024-04-17 10:27:41.773101
[0m10:27:41.773901 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc21ce80>]}
[0m10:27:41.774346 [info ] [Thread-2 (]: 39 of 80 OK created sql view model test.join_mt_datestat ....................... [[32mOK[0m in 0.21s]
[0m10:27:41.774917 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:27:41.775330 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry
[0m10:27:41.776022 [info ] [Thread-2 (]: 40 of 80 START sql view model test.join_utmcraft_registry ...................... [RUN]
[0m10:27:41.776874 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry'
[0m10:27:41.777194 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry)
[0m10:27:41.777402 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry
[0m10:27:41.783508 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_utmcraft__%'
    GROUP BY table

...
[0m10:27:41.791889 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.797999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m10:27:41.805210 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.808885 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.815910 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.819417 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry"
[0m10:27:41.820295 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry (compile): 2024-04-17 10:27:41.777507 => 2024-04-17 10:27:41.820119
[0m10:27:41.820708 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry
[0m10:27:41.825695 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry"
[0m10:27:41.826345 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */


  create view test.join_utmcraft_registry__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )






  )...
[0m10:27:41.827241 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m10:27:41.832568 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events__dbt_backup 
  
  ...
[0m10:27:41.836344 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.837628 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events to test.join_appmetrica_events__dbt_backup 
  
  ...
[0m10:27:41.840197 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.841026 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.843978 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    drop table if exists test.join_utmcraft_registry__dbt_backup 
  
  ...
[0m10:27:41.847647 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events 
  
  ...
[0m10:27:41.852254 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.852861 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.853907 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    rename table test.join_utmcraft_registry to test.join_utmcraft_registry__dbt_backup 
  
  ...
[0m10:27:41.855293 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events__dbt_tmp to test.join_appmetrica_events 
  
  ...
[0m10:27:41.859726 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.860556 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.865888 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_backup 
  ...
[0m10:27:41.869015 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    drop table if exists test.join_utmcraft_registry 
  
  ...
[0m10:27:41.873159 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.874834 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-04-17 10:27:41.691432 => 2024-04-17 10:27:41.874753
[0m10:27:41.875813 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.877049 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1dded0>]}
[0m10:27:41.878277 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    rename table test.join_utmcraft_registry__dbt_tmp to test.join_utmcraft_registry 
  
  ...
[0m10:27:41.878952 [info ] [Thread-1 (]: 38 of 80 OK created sql view model test.join_appmetrica_events ................. [[32mOK[0m in 0.43s]
[0m10:27:41.881099 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:27:41.881590 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:27:41.882240 [info ] [Thread-1 (]: 41 of 80 START sql view model test.join_vkads_datestat ......................... [RUN]
[0m10:27:41.883851 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.885036 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m10:27:41.888910 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */
drop table if exists test.join_utmcraft_registry__dbt_backup 
  ...
[0m10:27:41.889376 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m10:27:41.890298 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:27:41.895257 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_vkads__%'
    GROUP BY table

...
[0m10:27:41.896956 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.898528 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry (execute): 2024-04-17 10:27:41.820981 => 2024-04-17 10:27:41.898454
[0m10:27:41.899999 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc21ce80>]}
[0m10:27:41.901470 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.900806 [info ] [Thread-2 (]: 40 of 80 OK created sql view model test.join_utmcraft_registry ................. [[32mOK[0m in 0.12s]
[0m10:27:41.903846 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m10:27:41.904597 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry
[0m10:27:41.906543 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:27:41.907898 [info ] [Thread-2 (]: 42 of 80 START sql view model test.join_yd_datestat ............................ [RUN]
[0m10:27:41.909096 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m10:27:41.910114 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m10:27:41.911310 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.912130 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m10:27:41.915569 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:27:41.919474 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_yd__%'
    GROUP BY table

...
[0m10:27:41.927221 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.929187 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m10:27:41.934464 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:41.936332 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:27:41.937652 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:41.944897 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m10:27:41.952116 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:41.956846 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m10:27:41.958290 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.964672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.965426 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.969892 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.974441 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.977903 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans$')        
...
[0m10:27:41.979160 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.983903 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m10:27:41.984419 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-04-17 10:27:41.916094 => 2024-04-17 10:27:41.984296
[0m10:27:41.984730 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m10:27:41.989161 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m10:27:41.990114 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:41.994605 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:41.996400 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


  create view test.join_yd_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    '' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps






  )...
[0m10:27:42.001029 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.004168 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m10:27:42.004721 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-04-17 10:27:41.890652 => 2024-04-17 10:27:42.004645
[0m10:27:42.004931 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:27:42.008717 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m10:27:42.009649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.012567 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat__dbt_backup 
  
  ...
[0m10:27:42.013777 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


  create view test.join_vkads_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    '' AS productName,
    ad_plans.name AS adCampaignName,
    '' AS adGroupName,
    ad_plans.id AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id







  )...
[0m10:27:42.015977 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.017104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat to test.join_yd_datestat__dbt_backup 
  
  ...
[0m10:27:42.020392 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.096875 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m10:27:42.097693 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat 
  
  ...
[0m10:27:42.101687 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat__dbt_backup 
  
  ...
[0m10:27:42.105014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.106249 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat__dbt_tmp to test.join_yd_datestat 
  
  ...
[0m10:27:42.106936 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.108850 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat to test.join_vkads_datestat__dbt_backup 
  
  ...
[0m10:27:42.113042 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.116132 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat 
  
  ...
[0m10:27:42.116962 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.122649 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_backup 
  ...
[0m10:27:42.123977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.125574 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat__dbt_tmp to test.join_vkads_datestat 
  
  ...
[0m10:27:42.128976 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.129733 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.131012 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-04-17 10:27:41.984849 => 2024-04-17 10:27:42.130954
[0m10:27:42.135610 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_backup 
  ...
[0m10:27:42.136604 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1e1ff0>]}
[0m10:27:42.138274 [info ] [Thread-2 (]: 42 of 80 OK created sql view model test.join_yd_datestat ....................... [[32mOK[0m in 0.23s]
[0m10:27:42.139258 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:27:42.140308 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.140869 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m10:27:42.142281 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-04-17 10:27:42.005027 => 2024-04-17 10:27:42.142219
[0m10:27:42.143844 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc127310>]}
[0m10:27:42.142907 [info ] [Thread-2 (]: 43 of 80 START sql view model test.join_ym_events .............................. [RUN]
[0m10:27:42.145567 [info ] [Thread-1 (]: 41 of 80 OK created sql view model test.join_vkads_datestat .................... [[32mOK[0m in 0.26s]
[0m10:27:42.146611 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m10:27:42.147217 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:27:42.147736 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m10:27:42.148440 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_appmetrica_registry
[0m10:27:42.149230 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m10:27:42.150061 [info ] [Thread-1 (]: 44 of 80 START sql view model test.combine_appmetrica_registry ................. [RUN]
[0m10:27:42.154206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_ym__%'
    GROUP BY table

...
[0m10:27:42.155570 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_appmetrica_registry'
[0m10:27:42.157586 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_appmetrica_registry)
[0m10:27:42.158330 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_appmetrica_registry
[0m10:27:42.171766 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_appmetrica_registry')        
...
[0m10:27:42.172757 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:42.175051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m10:27:42.178945 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.183097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    select name, type from system.columns where table = 'join_appmetrica_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.184650 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.186690 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:27:42.192235 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.193863 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_appmetrica_registry"
[0m10:27:42.194559 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_appmetrica_registry (compile): 2024-04-17 10:27:42.158581 => 2024-04-17 10:27:42.194363
[0m10:27:42.194999 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_appmetrica_registry
[0m10:27:42.199988 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_appmetrica_registry"
[0m10:27:42.200454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */


  create view test.combine_appmetrica_registry__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_registry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                --toLowCardinality('join_appmetrica_registry')  as None,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry
        )

        )
  )...
[0m10:27:42.201153 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.208092 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_yandex_metrika_stream$')        
...
[0m10:27:42.216542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.221635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.223306 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:42.228667 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    drop table if exists test.combine_appmetrica_registry__dbt_backup 
  
  ...
[0m10:27:42.229729 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.234905 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m10:27:42.236145 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-04-17 10:27:42.150561 => 2024-04-17 10:27:42.235894
[0m10:27:42.236793 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m10:27:42.242857 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.245142 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m10:27:42.246754 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    rename table test.combine_appmetrica_registry to test.combine_appmetrica_registry__dbt_backup 
  
  ...
[0m10:27:42.248295 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


  create view test.join_ym_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    NULL AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events






  )...
[0m10:27:42.250487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.255605 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    drop table if exists test.combine_appmetrica_registry 
  
  ...
[0m10:27:42.258953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.260422 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */

    rename table test.combine_appmetrica_registry__dbt_tmp to test.combine_appmetrica_registry 
  
  ...
[0m10:27:42.263722 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.268216 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_appmetrica_registry"} */
drop table if exists test.combine_appmetrica_registry__dbt_backup 
  ...
[0m10:27:42.269828 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:42.273833 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events__dbt_backup 
  
  ...
[0m10:27:42.274608 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.277249 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_appmetrica_registry (execute): 2024-04-17 10:27:42.195177 => 2024-04-17 10:27:42.277147
[0m10:27:42.278161 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc2d7a90>]}
[0m10:27:42.278792 [info ] [Thread-1 (]: 44 of 80 OK created sql view model test.combine_appmetrica_registry ............ [[32mOK[0m in 0.12s]
[0m10:27:42.279716 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.280106 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_appmetrica_registry
[0m10:27:42.281202 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events to test.join_ym_events__dbt_backup 
  
  ...
[0m10:27:42.281694 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_utmcraft_registry
[0m10:27:42.284074 [info ] [Thread-1 (]: 45 of 80 START sql view model test.combine_utmcraft_registry ................... [RUN]
[0m10:27:42.285524 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.286467 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_utmcraft_registry'
[0m10:27:42.290090 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events 
  
  ...
[0m10:27:42.290543 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_utmcraft_registry)
[0m10:27:42.291947 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_utmcraft_registry
[0m10:27:42.298172 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_utmcraft_registry')        
...
[0m10:27:42.299902 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.302001 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events__dbt_tmp to test.join_ym_events 
  
  ...
[0m10:27:42.304902 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.308079 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.308896 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.318100 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_backup 
  ...
[0m10:27:42.319805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.321893 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_utmcraft_registry"
[0m10:27:42.322961 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.324262 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-04-17 10:27:42.237112 => 2024-04-17 10:27:42.324200
[0m10:27:42.325583 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1267d0>]}
[0m10:27:42.325967 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_utmcraft_registry (compile): 2024-04-17 10:27:42.292288 => 2024-04-17 10:27:42.325873
[0m10:27:42.326463 [info ] [Thread-2 (]: 43 of 80 OK created sql view model test.join_ym_events ......................... [[32mOK[0m in 0.18s]
[0m10:27:42.327044 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_utmcraft_registry
[0m10:27:42.327892 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m10:27:42.333189 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_utmcraft_registry"
[0m10:27:42.334085 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m10:27:42.335529 [info ] [Thread-2 (]: 46 of 80 START sql view model test.combine_datestat ............................ [RUN]
[0m10:27:42.336636 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m10:27:42.337183 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m10:27:42.337441 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m10:27:42.341726 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m10:27:42.342176 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */


  create view test.combine_utmcraft_registry__dbt_tmp 
  
  as (
    -- depends_on: test.join_utmcraft_registry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                --toLowCardinality('join_utmcraft_registry')  as None,
                
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at 

            from test.join_utmcraft_registry
        )

        )
  )...
[0m10:27:42.351904 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.355734 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.356334 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.363566 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    drop table if exists test.combine_utmcraft_registry__dbt_backup 
  
  ...
[0m10:27:42.365309 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.370081 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.370920 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.373888 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    rename table test.combine_utmcraft_registry to test.combine_utmcraft_registry__dbt_backup 
  
  ...
[0m10:27:42.377110 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.382965 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    drop table if exists test.combine_utmcraft_registry 
  
  ...
[0m10:27:42.384090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.389532 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.391159 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.392490 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */

    rename table test.combine_utmcraft_registry__dbt_tmp to test.combine_utmcraft_registry 
  
  ...
[0m10:27:42.397761 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.401948 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_utmcraft_registry"} */
drop table if exists test.combine_utmcraft_registry__dbt_backup 
  ...
[0m10:27:42.402825 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.408342 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m10:27:42.409346 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.411213 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_utmcraft_registry (execute): 2024-04-17 10:27:42.328517 => 2024-04-17 10:27:42.411099
[0m10:27:42.412528 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc399a80>]}
[0m10:27:42.413386 [info ] [Thread-1 (]: 45 of 80 OK created sql view model test.combine_utmcraft_registry .............. [[32mOK[0m in 0.13s]
[0m10:27:42.414040 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_utmcraft_registry
[0m10:27:42.414812 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-04-17 10:27:42.337587 => 2024-04-17 10:27:42.414598
[0m10:27:42.415315 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_appmetrica_registry
[0m10:27:42.415687 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m10:27:42.416278 [info ] [Thread-1 (]: 47 of 80 START sql view model test.hash_appmetrica_registry .................... [RUN]
[0m10:27:42.421195 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m10:27:42.422244 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_appmetrica_registry'
[0m10:27:42.423556 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_appmetrica_registry)
[0m10:27:42.424046 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_appmetrica_registry
[0m10:27:42.433241 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_appmetrica_registry')        
...
[0m10:27:42.433658 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


  create view test.combine_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                --toLowCardinality('join_mt_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_mt_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('join_vkads_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('join_yd_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_yd_datestat
        )

        )
  )...
[0m10:27:42.441021 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.445746 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    select name, type from system.columns where table = 'combine_appmetrica_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.451049 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.463379 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:42.467165 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat__dbt_backup 
  
  ...
[0m10:27:42.473886 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_appmetrica_registry"
[0m10:27:42.475091 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_appmetrica_registry (compile): 2024-04-17 10:27:42.424515 => 2024-04-17 10:27:42.474939
[0m10:27:42.475507 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_appmetrica_registry
[0m10:27:42.480770 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_appmetrica_registry"
[0m10:27:42.482079 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.483186 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat to test.combine_datestat__dbt_backup 
  
  ...
[0m10:27:42.484666 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */


  create view test.hash_appmetrica_registry__dbt_tmp 
  
  as (
    -- depends_on: test.combine_appmetrica_registry
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id,

  assumeNotNull(CASE 







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    


FROM (

        (
            select

                --toLowCardinality('combine_appmetrica_registry')  as _dbt_source_relation,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.combine_appmetrica_registry
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m10:27:42.491473 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.494908 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat 
  
  ...
[0m10:27:42.498635 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.499819 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.502782 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    drop table if exists test.hash_appmetrica_registry__dbt_backup 
  
  ...
[0m10:27:42.504524 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat__dbt_tmp to test.combine_datestat 
  
  ...
[0m10:27:42.508787 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.509828 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    rename table test.hash_appmetrica_registry to test.hash_appmetrica_registry__dbt_backup 
  
  ...
[0m10:27:42.510692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.517110 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_backup 
  ...
[0m10:27:42.517922 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.522762 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    drop table if exists test.hash_appmetrica_registry 
  
  ...
[0m10:27:42.524149 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.525543 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-04-17 10:27:42.416742 => 2024-04-17 10:27:42.525484
[0m10:27:42.526251 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc126740>]}
[0m10:27:42.527151 [info ] [Thread-2 (]: 46 of 80 OK created sql view model test.combine_datestat ....................... [[32mOK[0m in 0.19s]
[0m10:27:42.528028 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.528594 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m10:27:42.529926 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */

    rename table test.hash_appmetrica_registry__dbt_tmp to test.hash_appmetrica_registry 
  
  ...
[0m10:27:42.530485 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m10:27:42.532296 [info ] [Thread-2 (]: 48 of 80 START sql view model test.combine_events .............................. [RUN]
[0m10:27:42.533508 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m10:27:42.533981 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m10:27:42.534348 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m10:27:42.535164 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.539331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m10:27:42.543348 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_appmetrica_registry"} */
drop table if exists test.hash_appmetrica_registry__dbt_backup 
  ...
[0m10:27:42.550198 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.551572 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_appmetrica_registry (execute): 2024-04-17 10:27:42.475664 => 2024-04-17 10:27:42.551512
[0m10:27:42.552208 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc41f130>]}
[0m10:27:42.552635 [info ] [Thread-1 (]: 47 of 80 OK created sql view model test.hash_appmetrica_registry ............... [[32mOK[0m in 0.13s]
[0m10:27:42.552975 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_appmetrica_registry
[0m10:27:42.553301 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m10:27:42.554866 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.555299 [info ] [Thread-1 (]: 49 of 80 START sql view model test.hash_datestat ............................... [RUN]
[0m10:27:42.558865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.559505 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m10:27:42.560943 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m10:27:42.561425 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m10:27:42.569774 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_datestat')        
...
[0m10:27:42.570665 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.576263 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.578629 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.583948 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.584834 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.590713 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m10:27:42.591847 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-04-17 10:27:42.535375 => 2024-04-17 10:27:42.591625
[0m10:27:42.592488 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m10:27:42.598947 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m10:27:42.599969 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.603650 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m10:27:42.604523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


  create view test.combine_events__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                --toLowCardinality('join_appmetrica_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select

                --toLowCardinality('join_ym_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        )
  )...
[0m10:27:42.605086 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-04-17 10:27:42.561704 => 2024-04-17 10:27:42.604982
[0m10:27:42.606727 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m10:27:42.613637 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m10:27:42.614292 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


  create view test.hash_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id,

  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    
    


FROM (

        (
            select

                --toLowCardinality('combine_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m10:27:42.635953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:42.639941 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat__dbt_backup 
  
  ...
[0m10:27:42.644825 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.646142 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat to test.hash_datestat__dbt_backup 
  
  ...
[0m10:27:42.649990 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.654908 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat 
  
  ...
[0m10:27:42.658977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.660399 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat__dbt_tmp to test.hash_datestat 
  
  ...
[0m10:27:42.664987 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.668503 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_backup 
  ...
[0m10:27:42.669220 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m10:27:42.673488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events__dbt_backup 
  
  ...
[0m10:27:42.676714 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.677898 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events to test.combine_events__dbt_backup 
  
  ...
[0m10:27:42.678711 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.681120 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-04-17 10:27:42.607339 => 2024-04-17 10:27:42.681052
[0m10:27:42.681781 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc21e1d0>]}
[0m10:27:42.682240 [info ] [Thread-1 (]: 49 of 80 OK created sql view model test.hash_datestat .......................... [[32mOK[0m in 0.12s]
[0m10:27:42.682979 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m10:27:42.683478 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_appmetrica_registry
[0m10:27:42.684851 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.683972 [info ] [Thread-1 (]: 50 of 80 START sql table model test.link_appmetrica_registry ................... [RUN]
[0m10:27:42.687940 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events 
  
  ...
[0m10:27:42.689633 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_appmetrica_registry'
[0m10:27:42.691619 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_appmetrica_registry)
[0m10:27:42.692063 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_appmetrica_registry
[0m10:27:42.698572 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */

    select name, type from system.columns where table = 'hash_appmetrica_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.699619 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.702791 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events__dbt_tmp to test.combine_events 
  
  ...
[0m10:27:42.706530 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.711788 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_backup 
  ...
[0m10:27:42.712696 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.716381 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_appmetrica_registry"
[0m10:27:42.717150 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_appmetrica_registry (compile): 2024-04-17 10:27:42.692583 => 2024-04-17 10:27:42.717038
[0m10:27:42.717535 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_appmetrica_registry
[0m10:27:42.724040 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.731213 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-04-17 10:27:42.592766 => 2024-04-17 10:27:42.731146
[0m10:27:42.733828 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */

            

    
        create table test.link_appmetrica_registry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_appmetrica_registry
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_appmetrica_registry
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


    )
        ...
[0m10:27:42.734841 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc47e500>]}
[0m10:27:42.736633 [info ] [Thread-2 (]: 48 of 80 OK created sql view model test.combine_events ......................... [[32mOK[0m in 0.20s]
[0m10:27:42.737514 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m10:27:42.738027 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m10:27:42.738367 [info ] [Thread-2 (]: 51 of 80 START sql table model test.full_datestat .............................. [RUN]
[0m10:27:42.739991 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m10:27:42.740462 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m10:27:42.740653 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m10:27:42.744095 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m10:27:42.744767 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-04-17 10:27:42.740745 => 2024-04-17 10:27:42.744616
[0m10:27:42.745225 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m10:27:42.750077 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
    )
        ...
[0m10:27:42.754010 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:42.757522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */

    select name, type from system.columns where table = 'link_appmetrica_registry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.765402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.767011 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_appmetrica_registry"
[0m10:27:42.768005 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:42.771405 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.773105 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */

  
    
    
        
        insert into test.link_appmetrica_registry__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_appmetrica_registry
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_appmetrica_registry
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


  ...
[0m10:27:42.778182 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.782188 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m10:27:42.782678 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

  
    
    
        
        insert into test.full_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime")
  


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
  ...
[0m10:27:42.808042 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:42.809156 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */
EXCHANGE TABLES test.link_appmetrica_registry__dbt_backup AND test.link_appmetrica_registry 
  
  ...
[0m10:27:42.813898 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.818343 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_appmetrica_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_appmetrica_registry"} */
drop table if exists test.link_appmetrica_registry__dbt_backup 
  ...
[0m10:27:42.823530 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.825409 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_appmetrica_registry (execute): 2024-04-17 10:27:42.717696 => 2024-04-17 10:27:42.825349
[0m10:27:42.825949 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc209660>]}
[0m10:27:42.826265 [info ] [Thread-1 (]: 50 of 80 OK created sql table model test.link_appmetrica_registry .............. [[32mOK[0m in 0.14s]
[0m10:27:42.826602 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_appmetrica_registry
[0m10:27:42.826893 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m10:27:42.827247 [info ] [Thread-1 (]: 52 of 80 START sql table model test.link_datestat .............................. [RUN]
[0m10:27:42.828386 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m10:27:42.828677 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m10:27:42.828890 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m10:27:42.834256 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.840436 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.842756 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m10:27:42.843400 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-04-17 10:27:42.828996 => 2024-04-17 10:27:42.843260
[0m10:27:42.843740 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m10:27:42.849543 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,productName,adCampaignName,adGroupName,adId,adPhraseId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adTitle2,adText,adPhraseName,adCost,impressions,clicks,__emitted_at,__link,AdCostStatHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, productName, adCampaignName, adGroupName, adId, adPhraseId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adTitle2, adText, adPhraseName, adCost, impressions, clicks, __emitted_at, __link, AdCostStatHash, __id, __datetime


    )
        ...
[0m10:27:42.871872 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:42.874341 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:42.880201 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.882357 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m10:27:42.882967 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,productName,adCampaignName,adGroupName,adId,adPhraseId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adTitle2,adText,adPhraseName,adCost,impressions,clicks,__emitted_at,__link,AdCostStatHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, productName, adCampaignName, adGroupName, adId, adPhraseId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adTitle2, adText, adPhraseName, adCost, impressions, clicks, __emitted_at, __link, AdCostStatHash, __id, __datetime


  ...
[0m10:27:42.924021 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m10:27:42.925727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
EXCHANGE TABLES test.full_datestat__dbt_backup AND test.full_datestat 
  
  ...
[0m10:27:42.931278 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:42.936576 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_backup 
  ...
[0m10:27:42.940009 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:42.941385 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-04-17 10:27:42.745356 => 2024-04-17 10:27:42.941309
[0m10:27:42.942079 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc339450>]}
[0m10:27:42.942544 [info ] [Thread-2 (]: 51 of 80 OK created sql table model test.full_datestat ......................... [[32mOK[0m in 0.20s]
[0m10:27:42.943063 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m10:27:42.943550 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m10:27:42.944092 [info ] [Thread-2 (]: 53 of 80 START sql view model test.hash_events ................................. [RUN]
[0m10:27:42.945423 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m10:27:42.945723 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m10:27:42.945940 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m10:27:43.048239 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_events')        
...
[0m10:27:43.049079 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.17 seconds
[0m10:27:43.051443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m10:27:43.056744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:43.061049 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m10:27:43.062692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.066157 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:43.069280 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.070643 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-04-17 10:27:42.843873 => 2024-04-17 10:27:43.070573
[0m10:27:43.071409 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bf670a3b0>]}
[0m10:27:43.072050 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.072562 [info ] [Thread-1 (]: 52 of 80 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.24s]
[0m10:27:43.081915 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m10:27:43.082658 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m10:27:43.084526 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-04-17 10:27:42.946052 => 2024-04-17 10:27:43.084284
[0m10:27:43.084965 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m10:27:43.089864 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m10:27:43.090347 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


  create view test.hash_events__dbt_tmp 
  
  as (
    -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id,

  assumeNotNull(CASE 


WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    


FROM (

        (
            select

                --toLowCardinality('combine_events')  as _dbt_source_relation,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m10:27:43.134053 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:27:43.137485 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events__dbt_backup 
  
  ...
[0m10:27:43.140643 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:43.141759 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events to test.hash_events__dbt_backup 
  
  ...
[0m10:27:43.146624 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:43.149218 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events 
  
  ...
[0m10:27:43.153168 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:43.154704 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events__dbt_tmp to test.hash_events 
  
  ...
[0m10:27:43.158057 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:43.162589 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_backup 
  ...
[0m10:27:43.166835 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:43.168190 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-04-17 10:27:43.085088 => 2024-04-17 10:27:43.168135
[0m10:27:43.168707 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bf6716aa0>]}
[0m10:27:43.169034 [info ] [Thread-2 (]: 53 of 80 OK created sql view model test.hash_events ............................ [[32mOK[0m in 0.22s]
[0m10:27:43.169361 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m10:27:43.171130 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m10:27:43.171753 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_events
[0m10:27:43.172490 [info ] [Thread-1 (]: 54 of 80 START sql table model test.graph_tuples ............................... [RUN]
[0m10:27:43.174023 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m10:27:43.173201 [info ] [Thread-2 (]: 55 of 80 START sql table model test.link_events ................................ [RUN]
[0m10:27:43.174681 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m10:27:43.175334 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m10:27:43.175669 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m10:27:43.176013 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m10:27:43.181443 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m10:27:43.182104 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m10:27:43.188026 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:43.189309 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-04-17 10:27:43.176308 => 2024-04-17 10:27:43.189154
[0m10:27:43.189952 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m10:27:43.197122 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m10:27:43.198372 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.203030 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m10:27:43.203722 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-04-17 10:27:43.182489 => 2024-04-17 10:27:43.203615
[0m10:27:43.204013 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m10:27:43.209410 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,visitId,clientId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,sessions,addToCartSessions,cartViewSessions,checkoutSessions,webSalesSessions,sales,amountSales,registrationCardSessions,registrationButtonClick,linkingCardToPhoneNumberSessions,registrationLendingPromotionsSessions,registrationCashbackSessions,instantDiscountActivationSessions,couponActivationSessions,participationInLotterySessions,pagesViews,screenView,installApp,installs,installationDeviceId,__emitted_at,__link,cityCode,pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, visitId, clientId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, sessions, addToCartSessions, cartViewSessions, checkoutSessions, webSalesSessions, sales, amountSales, registrationCardSessions, registrationButtonClick, linkingCardToPhoneNumberSessions, registrationLendingPromotionsSessions, registrationCashbackSessions, instantDiscountActivationSessions, couponActivationSessions, participationInLotterySessions, pagesViews, screenView, installApp, installs, installationDeviceId, __emitted_at, __link, cityCode, pageViews, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, YmClientHash, __id, __datetime


    )
        ...
[0m10:27:43.211110 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.214714 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_appmetrica_registry
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_appmetrica_registry
            where nullIf(CrmUserHash, '') is not null



    )
        ...
[0m10:27:43.248090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:27:43.251968 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:43.254919 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:27:43.259070 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:43.260729 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.263595 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m10:27:43.264665 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.266167 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m10:27:43.266867 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,visitId,clientId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,sessions,addToCartSessions,cartViewSessions,checkoutSessions,webSalesSessions,sales,amountSales,registrationCardSessions,registrationButtonClick,linkingCardToPhoneNumberSessions,registrationLendingPromotionsSessions,registrationCashbackSessions,instantDiscountActivationSessions,couponActivationSessions,participationInLotterySessions,pagesViews,screenView,installApp,installs,installationDeviceId,__emitted_at,__link,cityCode,pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, visitId, clientId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, sessions, addToCartSessions, cartViewSessions, checkoutSessions, webSalesSessions, sales, amountSales, registrationCardSessions, registrationButtonClick, linkingCardToPhoneNumberSessions, registrationLendingPromotionsSessions, registrationCashbackSessions, instantDiscountActivationSessions, couponActivationSessions, participationInLotterySessions, pagesViews, screenView, installApp, installs, installationDeviceId, __emitted_at, __link, cityCode, pageViews, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, YmClientHash, __id, __datetime


  ...
[0m10:27:43.268500 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_appmetrica_registry
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_appmetrica_registry
            where nullIf(CrmUserHash, '') is not null



  ...
[0m10:27:43.977518 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.71 seconds
[0m10:27:43.978950 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m10:27:43.985560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.991188 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m10:27:43.996895 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:43.998548 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-04-17 10:27:43.204151 => 2024-04-17 10:27:43.998456
[0m10:27:43.999556 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1df430>]}
[0m10:27:44.000266 [info ] [Thread-2 (]: 55 of 80 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.82s]
[0m10:27:44.000906 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m10:27:45.118843 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 1.85 seconds
[0m10:27:45.120435 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m10:27:45.124838 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:45.129135 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m10:27:45.132926 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:45.134207 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-04-17 10:27:43.190319 => 2024-04-17 10:27:45.134147
[0m10:27:45.134867 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc49e380>]}
[0m10:27:45.860813 [info ] [Thread-1 (]: 54 of 80 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 1.96s]
[0m10:27:45.861768 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m10:27:45.863521 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m10:27:45.864418 [info ] [Thread-2 (]: 56 of 80 START sql table model test.graph_lookup ............................... [RUN]
[0m10:27:45.865314 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m10:27:45.865604 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m10:27:45.865858 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m10:27:45.869700 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m10:27:45.870296 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-04-17 10:27:45.866000 => 2024-04-17 10:27:45.870187
[0m10:27:45.870638 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m10:27:45.875225 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





    )
        ...
[0m10:27:45.893249 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:45.896482 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:45.901347 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:45.903023 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m10:27:45.903656 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





  ...
[0m10:27:45.915960 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:45.917083 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m10:27:45.920854 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:45.925745 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m10:27:45.929476 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:45.930665 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-04-17 10:27:45.870781 => 2024-04-17 10:27:45.930608
[0m10:27:45.931187 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc31b610>]}
[0m10:27:45.931520 [info ] [Thread-2 (]: 56 of 80 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.07s]
[0m10:27:45.931925 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m10:27:45.933396 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m10:27:45.934400 [info ] [Thread-1 (]: 57 of 80 START sql table model test.graph_unique ............................... [RUN]
[0m10:27:45.935013 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m10:27:45.935246 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m10:27:45.935443 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m10:27:45.938354 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m10:27:45.938894 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-04-17 10:27:45.935557 => 2024-04-17 10:27:45.938806
[0m10:27:45.939108 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m10:27:45.943007 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup





    )
        ...
[0m10:27:45.959846 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:45.963098 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:45.968190 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:45.969593 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m10:27:45.971083 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup





  ...
[0m10:27:45.977429 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:45.979640 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m10:27:45.983958 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:45.987599 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m10:27:45.991050 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:45.992223 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-04-17 10:27:45.939200 => 2024-04-17 10:27:45.992166
[0m10:27:45.992729 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcd602b0>]}
[0m10:27:45.993056 [info ] [Thread-1 (]: 57 of 80 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.06s]
[0m10:27:45.993426 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m10:27:45.995237 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m10:27:45.996453 [info ] [Thread-2 (]: 58 of 80 START sql table model test.graph_edge ................................. [RUN]
[0m10:27:45.997324 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m10:27:45.997512 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m10:27:45.997678 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m10:27:46.000819 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m10:27:46.001514 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-04-17 10:27:45.997777 => 2024-04-17 10:27:46.001404
[0m10:27:46.001779 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m10:27:46.006883 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





    )
        ...
[0m10:27:46.023878 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:46.027849 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:46.033392 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.034841 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m10:27:46.035285 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





  ...
[0m10:27:46.046364 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.048097 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m10:27:46.051998 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.054774 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m10:27:46.060630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.064722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m10:27:46.068090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.069287 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-04-17 10:27:46.001884 => 2024-04-17 10:27:46.069231
[0m10:27:46.069801 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c10cd1300>]}
[0m10:27:46.070113 [info ] [Thread-2 (]: 58 of 80 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.07s]
[0m10:27:46.070448 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m10:27:46.072088 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m10:27:46.072514 [info ] [Thread-1 (]: 59 of 80 START sql table model test.graph_glue ................................. [RUN]
[0m10:27:46.073134 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m10:27:46.073360 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m10:27:46.073661 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m10:27:46.076624 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m10:27:46.077231 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-04-17 10:27:46.073767 => 2024-04-17 10:27:46.077116
[0m10:27:46.077617 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m10:27:46.081217 [debug] [Thread-1 (]: Running iteration 0
[0m10:27:46.081793 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:27:46.114372 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:46.115481 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:27:46.150090 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:46.151285 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:27:46.158050 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.159827 [debug] [Thread-1 (]: VALUE: 1
[0m10:27:46.160123 [debug] [Thread-1 (]: Running iteration 1
[0m10:27:46.160601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:27:46.188604 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:46.189695 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:27:46.212270 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:46.213253 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:27:46.219295 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.220335 [debug] [Thread-1 (]: VALUE: 0
[0m10:27:46.220516 [debug] [Thread-1 (]: Running iteration 2
[0m10:27:46.220639 [debug] [Thread-1 (]: Running iteration 3
[0m10:27:46.220740 [debug] [Thread-1 (]: Running iteration 4
[0m10:27:46.220839 [debug] [Thread-1 (]: Running iteration 5
[0m10:27:46.220936 [debug] [Thread-1 (]: Running iteration 6
[0m10:27:46.221032 [debug] [Thread-1 (]: Running iteration 7
[0m10:27:46.221130 [debug] [Thread-1 (]: Running iteration 8
[0m10:27:46.221226 [debug] [Thread-1 (]: Running iteration 9
[0m10:27:46.221326 [debug] [Thread-1 (]: Running iteration 10
[0m10:27:46.221421 [debug] [Thread-1 (]: Running iteration 11
[0m10:27:46.221517 [debug] [Thread-1 (]: Running iteration 12
[0m10:27:46.221615 [debug] [Thread-1 (]: Running iteration 13
[0m10:27:46.222893 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m10:27:46.238318 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:46.241024 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:46.245931 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.247393 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m10:27:46.247956 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m10:27:46.258732 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.259980 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m10:27:46.263875 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.268957 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m10:27:46.272705 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.273899 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-04-17 10:27:46.077743 => 2024-04-17 10:27:46.273842
[0m10:27:46.274408 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc430220>]}
[0m10:27:46.274771 [info ] [Thread-1 (]: 59 of 80 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.20s]
[0m10:27:46.275055 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m10:27:46.276658 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m10:27:46.277391 [info ] [Thread-2 (]: 60 of 80 START sql table model test.graph_qid .................................. [RUN]
[0m10:27:46.278266 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m10:27:46.278597 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m10:27:46.278777 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m10:27:46.281710 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m10:27:46.282255 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-04-17 10:27:46.278868 => 2024-04-17 10:27:46.282180
[0m10:27:46.282457 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m10:27:46.286351 [debug] [Thread-2 (]: Running iteration 0
[0m10:27:46.286786 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:27:46.311230 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:46.312540 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:27:46.344503 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:46.345816 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:27:46.352381 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.353447 [debug] [Thread-2 (]: VALUE: 0
[0m10:27:46.353634 [debug] [Thread-2 (]: Running iteration 1
[0m10:27:46.353744 [debug] [Thread-2 (]: Running iteration 2
[0m10:27:46.353846 [debug] [Thread-2 (]: Running iteration 3
[0m10:27:46.353944 [debug] [Thread-2 (]: Running iteration 4
[0m10:27:46.354041 [debug] [Thread-2 (]: Running iteration 5
[0m10:27:46.354201 [debug] [Thread-2 (]: Running iteration 6
[0m10:27:46.354379 [debug] [Thread-2 (]: Running iteration 7
[0m10:27:46.354599 [debug] [Thread-2 (]: Running iteration 8
[0m10:27:46.354723 [debug] [Thread-2 (]: Running iteration 9
[0m10:27:46.354829 [debug] [Thread-2 (]: Running iteration 10
[0m10:27:46.354942 [debug] [Thread-2 (]: Running iteration 11
[0m10:27:46.355039 [debug] [Thread-2 (]: Running iteration 12
[0m10:27:46.355132 [debug] [Thread-2 (]: Running iteration 13
[0m10:27:46.356548 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m10:27:46.373538 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:46.377148 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:46.381612 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.382903 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m10:27:46.383309 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m10:27:46.393821 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.395206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m10:27:46.398968 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.402589 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m10:27:46.407319 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.408662 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-04-17 10:27:46.282547 => 2024-04-17 10:27:46.408600
[0m10:27:46.409194 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc433e80>]}
[0m10:27:46.409511 [info ] [Thread-2 (]: 60 of 80 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.13s]
[0m10:27:46.409966 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m10:27:46.411568 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:27:46.412008 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:27:46.412419 [info ] [Thread-1 (]: 61 of 80 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m10:27:46.414002 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m10:27:46.414345 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m10:27:46.414635 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:27:46.413143 [info ] [Thread-2 (]: 62 of 80 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m10:27:46.421047 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m10:27:46.421916 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m10:27:46.422567 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m10:27:46.422894 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:27:46.426113 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m10:27:46.427068 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-04-17 10:27:46.423033 => 2024-04-17 10:27:46.426821
[0m10:27:46.427886 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-04-17 10:27:46.415103 => 2024-04-17 10:27:46.427702
[0m10:27:46.428411 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:27:46.428968 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:27:46.433865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m10:27:46.438937 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m10:27:46.464099 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:46.467056 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:46.468462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:46.471559 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:46.472281 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:46.475106 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m10:27:46.475888 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m10:27:46.479355 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:46.481634 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m10:27:46.482140 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m10:27:47.158698 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.68 seconds
[0m10:27:47.159300 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.68 seconds
[0m10:27:47.160627 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m10:27:47.162552 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m10:27:47.167768 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.173076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m10:27:47.174525 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.178996 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m10:27:47.180746 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.182277 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-04-17 10:27:46.434504 => 2024-04-17 10:27:47.182148
[0m10:27:47.182904 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4cd060>]}
[0m10:27:47.183337 [info ] [Thread-1 (]: 61 of 80 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.77s]
[0m10:27:47.184109 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:27:47.184624 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_events
[0m10:27:47.185016 [info ] [Thread-1 (]: 63 of 80 START sql table model test.full_events ................................ [RUN]
[0m10:27:47.186081 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m10:27:47.187211 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.187507 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m10:27:47.188722 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-04-17 10:27:46.429262 => 2024-04-17 10:27:47.188661
[0m10:27:47.189287 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m10:27:47.190501 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4cc460>]}
[0m10:27:47.194802 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_appmetrica_registry'
    
  ...
[0m10:27:47.195647 [info ] [Thread-2 (]: 62 of 80 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.77s]
[0m10:27:47.197234 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:27:47.197845 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:27:47.198726 [info ] [Thread-2 (]: 64 of 80 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m10:27:47.200019 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m10:27:47.200633 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m10:27:47.201420 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:27:47.206261 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m10:27:47.207422 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.209521 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_utmcraft_registry'
    
  ...
[0m10:27:47.211214 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-04-17 10:27:47.201640 => 2024-04-17 10:27:47.210998
[0m10:27:47.211867 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:27:47.218596 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m10:27:47.220057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.221926 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_abcd_registry'
    
  ...
[0m10:27:47.227374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.231534 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'link_appmetrica_registry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.238075 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.240438 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m10:27:47.240903 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-04-17 10:27:47.190746 => 2024-04-17 10:27:47.240822
[0m10:27:47.241145 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m10:27:47.246173 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_appmetrica_registry


SELECT * 
FROM (
    SELECT * FROM test.link_events
    LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
) t1
LEFT JOIN 

        (
            select

                --toLowCardinality('link_appmetrica_registry')  as _dbt_source_relation,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime 

            from test.link_appmetrica_registry
        )

         t2 USING (__id, __link, __datetime)
    )
        ...
[0m10:27:47.247052 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:47.251716 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.257682 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.259470 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m10:27:47.261224 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m10:27:47.274439 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.276167 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m10:27:47.280667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.285146 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m10:27:47.286017 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:27:47.290094 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.290921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.293390 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-04-17 10:27:47.212102 => 2024-04-17 10:27:47.293303
[0m10:27:47.294165 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4cc460>]}
[0m10:27:47.294787 [info ] [Thread-2 (]: 64 of 80 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.09s]
[0m10:27:47.295228 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:27:47.295592 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:27:47.297601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.296561 [info ] [Thread-2 (]: 65 of 80 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m10:27:47.300109 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m10:27:47.301190 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m10:27:47.302268 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m10:27:47.302786 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:27:47.310611 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m10:27:47.311504 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "qid", "t2.appmetricaDeviceId", "t2.crmUserId", "t2.cityName", "t2.__emitted_at", "AppProfileMatchingHash", "t2.AppMetricaDeviceHash", "t2.CrmUserHash")
  -- depends_on: test.graph_qid
-- depends_on: test.link_appmetrica_registry


SELECT * 
FROM (
    SELECT * FROM test.link_events
    LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
) t1
LEFT JOIN 

        (
            select

                --toLowCardinality('link_appmetrica_registry')  as _dbt_source_relation,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime 

            from test.link_appmetrica_registry
        )

         t2 USING (__id, __link, __datetime)
  ...
[0m10:27:47.312166 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-04-17 10:27:47.303003 => 2024-04-17 10:27:47.312048
[0m10:27:47.313738 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:27:47.318473 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m10:27:47.334611 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.349975 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.362616 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.366250 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m10:27:47.367482 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m10:27:47.374173 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m10:27:47.376371 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m10:27:47.383699 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.388490 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m10:27:47.389677 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.393942 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m10:27:47.397656 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.399211 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-04-17 10:27:47.241271 => 2024-04-17 10:27:47.399125
[0m10:27:47.400260 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.401466 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4ced10>]}
[0m10:27:47.408221 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m10:27:47.409124 [info ] [Thread-1 (]: 63 of 80 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.22s]
[0m10:27:47.411261 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m10:27:47.412234 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:27:47.413246 [info ] [Thread-1 (]: 66 of 80 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m10:27:47.414213 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.415065 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m10:27:47.416671 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-04-17 10:27:47.313953 => 2024-04-17 10:27:47.416595
[0m10:27:47.417062 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m10:27:47.418007 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcfa9720>]}
[0m10:27:47.418512 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:27:47.419395 [info ] [Thread-2 (]: 65 of 80 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.12s]
[0m10:27:47.424253 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m10:27:47.425145 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:27:47.427704 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:27:47.428952 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-04-17 10:27:47.420033 => 2024-04-17 10:27:47.428712
[0m10:27:47.428411 [info ] [Thread-2 (]: 67 of 80 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m10:27:47.429959 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:27:47.430722 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m10:27:47.434807 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m10:27:47.435284 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m10:27:47.436230 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:27:47.439563 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m10:27:47.440053 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-04-17 10:27:47.436660 => 2024-04-17 10:27:47.439956
[0m10:27:47.440300 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:27:47.445856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m10:27:47.450306 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.453686 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.459509 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.461222 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m10:27:47.462807 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.467104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.468721 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m10:27:47.472868 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.474645 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m10:27:47.475156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m10:27:47.476774 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.478309 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m10:27:47.482373 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.486336 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m10:27:47.486977 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.488937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m10:27:47.492478 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.493335 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.497097 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m10:27:47.499273 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-04-17 10:27:47.430932 => 2024-04-17 10:27:47.499212
[0m10:27:47.501412 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc4316c0>]}
[0m10:27:47.502020 [info ] [Thread-1 (]: 66 of 80 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.09s]
[0m10:27:47.502763 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:27:47.503768 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:27:47.505361 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.504535 [info ] [Thread-1 (]: 68 of 80 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m10:27:47.506936 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-04-17 10:27:47.440401 => 2024-04-17 10:27:47.506874
[0m10:27:47.507884 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m10:27:47.508497 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc3934f0>]}
[0m10:27:47.508780 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m10:27:47.509573 [info ] [Thread-2 (]: 67 of 80 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.08s]
[0m10:27:47.510161 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:27:47.510978 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:27:47.518334 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m10:27:47.519777 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:27:47.521043 [info ] [Thread-2 (]: 69 of 80 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m10:27:47.522741 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m10:27:47.523357 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m10:27:47.523694 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-04-17 10:27:47.511586 => 2024-04-17 10:27:47.523584
[0m10:27:47.524021 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:27:47.524360 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:27:47.610221 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m10:27:47.615371 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m10:27:47.617386 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-04-17 10:27:47.524702 => 2024-04-17 10:27:47.617206
[0m10:27:47.617998 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:27:47.622195 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m10:27:47.638375 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.641420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.643213 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.646502 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.647780 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.649758 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m10:27:47.650341 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m10:27:47.651798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.654427 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m10:27:47.655080 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m10:27:47.662347 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.663692 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m10:27:47.665169 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.666399 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m10:27:47.669626 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.670287 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.674611 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m10:27:47.678445 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m10:27:47.682787 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.684032 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-04-17 10:27:47.618115 => 2024-04-17 10:27:47.683973
[0m10:27:47.684760 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc2a67d0>]}
[0m10:27:47.685339 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.686084 [info ] [Thread-2 (]: 69 of 80 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.16s]
[0m10:27:47.687892 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-04-17 10:27:47.610726 => 2024-04-17 10:27:47.687829
[0m10:27:47.688467 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:27:47.689173 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcfa8100>]}
[0m10:27:47.690196 [info ] [Thread-1 (]: 68 of 80 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.18s]
[0m10:27:47.691137 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:27:47.691753 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:27:47.692420 [info ] [Thread-2 (]: 70 of 80 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m10:27:47.694229 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m10:27:47.694905 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m10:27:47.695288 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:27:47.695526 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:27:47.695995 [info ] [Thread-1 (]: 71 of 80 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m10:27:47.699735 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m10:27:47.700581 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m10:27:47.701419 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m10:27:47.701870 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:27:47.705305 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m10:27:47.705882 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-04-17 10:27:47.696443 => 2024-04-17 10:27:47.705748
[0m10:27:47.706303 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:27:47.710972 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m10:27:47.712283 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-04-17 10:27:47.702344 => 2024-04-17 10:27:47.712108
[0m10:27:47.712739 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:27:47.719036 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m10:27:47.732729 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.736048 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.739964 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.742845 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.743972 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.747996 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m10:27:47.748920 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m10:27:47.750913 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.752490 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m10:27:47.752892 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m10:27:47.755598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.756873 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m10:27:47.760530 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.762005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m10:27:47.762757 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.767998 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m10:27:47.768942 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.773937 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m10:27:47.777095 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.777801 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.779015 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-04-17 10:27:47.712858 => 2024-04-17 10:27:47.778956
[0m10:27:47.780613 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-04-17 10:27:47.706465 => 2024-04-17 10:27:47.780558
[0m10:27:47.781318 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcfa8460>]}
[0m10:27:47.782394 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc281030>]}
[0m10:27:47.783280 [info ] [Thread-1 (]: 71 of 80 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.08s]
[0m10:27:47.783769 [info ] [Thread-2 (]: 70 of 80 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m10:27:47.784819 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:27:47.785412 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:27:47.786721 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:27:47.787557 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:27:47.787957 [info ] [Thread-1 (]: 72 of 80 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m10:27:47.788489 [info ] [Thread-2 (]: 73 of 80 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m10:27:47.789648 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m10:27:47.790500 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m10:27:47.790960 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m10:27:47.791380 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m10:27:47.791714 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:27:47.792120 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:27:47.795981 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m10:27:47.799253 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m10:27:47.800693 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-04-17 10:27:47.796493 => 2024-04-17 10:27:47.800570
[0m10:27:47.801182 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-04-17 10:27:47.792431 => 2024-04-17 10:27:47.801033
[0m10:27:47.801695 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:27:47.802428 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:27:47.808430 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m10:27:47.813712 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m10:27:47.836693 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.839695 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.840356 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:47.844421 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.847598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.849187 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m10:27:47.850196 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.851973 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m10:27:47.852577 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m10:27:47.853089 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m10:27:47.868619 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.870262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m10:27:47.871719 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.872827 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m10:27:47.874175 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.879273 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m10:27:47.880081 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.886187 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m10:27:47.887012 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.889153 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-04-17 10:27:47.808843 => 2024-04-17 10:27:47.889083
[0m10:27:47.889935 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1f2380>]}
[0m10:27:47.890661 [info ] [Thread-1 (]: 72 of 80 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.10s]
[0m10:27:47.891148 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:27:47.892037 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.893684 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-04-17 10:27:47.802905 => 2024-04-17 10:27:47.893605
[0m10:27:47.894220 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:27:47.894954 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc280520>]}
[0m10:27:47.895471 [info ] [Thread-1 (]: 74 of 80 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m10:27:47.896148 [info ] [Thread-2 (]: 73 of 80 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.10s]
[0m10:27:47.897779 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m10:27:47.898529 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:27:47.898961 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m10:27:47.900210 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:27:47.900612 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:27:47.901107 [info ] [Thread-2 (]: 75 of 80 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m10:27:47.907471 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m10:27:47.908168 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m10:27:47.908549 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m10:27:47.908979 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:27:47.916530 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m10:27:47.917031 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-17 10:27:47.901509 => 2024-04-17 10:27:47.916903
[0m10:27:47.917512 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:27:47.922378 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m10:27:47.923530 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-17 10:27:47.909286 => 2024-04-17 10:27:47.923417
[0m10:27:47.923925 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:27:47.929464 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m10:27:47.949256 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:47.952169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.953878 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:47.956704 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:47.958695 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.962342 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m10:27:47.963862 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.966048 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m10:27:47.966675 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m10:27:47.967653 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m10:27:47.981358 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.981939 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:47.983125 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m10:27:47.985002 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m10:27:47.989379 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.990184 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:47.994228 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m10:27:47.998401 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m10:27:48.002770 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.004145 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-17 10:27:47.917824 => 2024-04-17 10:27:48.004083
[0m10:27:48.004829 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.005495 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1f3a60>]}
[0m10:27:48.007053 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-17 10:27:47.924059 => 2024-04-17 10:27:48.006985
[0m10:27:48.008048 [info ] [Thread-1 (]: 74 of 80 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.11s]
[0m10:27:48.009206 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc268640>]}
[0m10:27:48.009835 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:27:48.010913 [info ] [Thread-2 (]: 75 of 80 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.10s]
[0m10:27:48.011917 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:27:48.012510 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:27:48.013584 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:27:48.014032 [info ] [Thread-1 (]: 76 of 80 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m10:27:48.014622 [info ] [Thread-2 (]: 77 of 80 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m10:27:48.015808 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m10:27:48.016798 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m10:27:48.017128 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m10:27:48.017526 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m10:27:48.017999 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:27:48.018271 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:27:48.026008 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m10:27:48.031909 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m10:27:48.032906 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-04-17 10:27:48.026364 => 2024-04-17 10:27:48.032782
[0m10:27:48.033258 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-04-17 10:27:48.018574 => 2024-04-17 10:27:48.033177
[0m10:27:48.033771 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:27:48.034105 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:27:48.039039 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m10:27:48.044083 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m10:27:48.067729 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:48.071379 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:48.072628 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:48.076066 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:48.077113 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:48.080879 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m10:27:48.081414 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m10:27:48.082870 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:48.084434 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m10:27:48.085117 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m10:27:48.096997 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:48.098247 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m10:27:48.102278 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.106508 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m10:27:48.107294 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:27:48.109148 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m10:27:48.111316 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.112588 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-04-17 10:27:48.034405 => 2024-04-17 10:27:48.112530
[0m10:27:48.113242 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc47cac0>]}
[0m10:27:48.114065 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.114886 [info ] [Thread-2 (]: 77 of 80 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.10s]
[0m10:27:48.119488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m10:27:48.120200 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:27:48.122950 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:27:48.123450 [info ] [Thread-2 (]: 78 of 80 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m10:27:48.124231 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m10:27:48.124770 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m10:27:48.125532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.126066 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:27:48.128229 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-04-17 10:27:48.039641 => 2024-04-17 10:27:48.128131
[0m10:27:48.134297 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m10:27:48.135073 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1163b0>]}
[0m10:27:48.136347 [info ] [Thread-1 (]: 76 of 80 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.12s]
[0m10:27:48.136820 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:27:48.137108 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-04-17 10:27:48.128688 => 2024-04-17 10:27:48.137003
[0m10:27:48.138774 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:27:48.139606 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:27:48.143765 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m10:27:48.144895 [info ] [Thread-1 (]: 79 of 80 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m10:27:48.147946 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m10:27:48.148632 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m10:27:48.148966 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:27:48.152015 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m10:27:48.152452 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-04-17 10:27:48.149064 => 2024-04-17 10:27:48.152387
[0m10:27:48.152617 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:27:48.156455 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m10:27:48.172186 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:48.175231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:48.181633 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:48.184067 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m10:27:48.184595 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m10:27:48.193060 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:27:48.197114 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:48.201750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.204326 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m10:27:48.204935 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m10:27:48.212872 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:48.214196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m10:27:48.218490 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.223395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m10:27:48.227763 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.229209 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-04-17 10:27:48.139852 => 2024-04-17 10:27:48.229147
[0m10:27:48.230265 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc0df2e0>]}
[0m10:27:48.230662 [info ] [Thread-2 (]: 78 of 80 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.11s]
[0m10:27:48.231017 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:27:48.234118 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:27:48.235359 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m10:27:48.238862 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.243175 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m10:27:48.247097 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.248910 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-04-17 10:27:48.152702 => 2024-04-17 10:27:48.248787
[0m10:27:48.249464 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc1f01f0>]}
[0m10:27:48.249780 [info ] [Thread-1 (]: 79 of 80 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.10s]
[0m10:27:48.250103 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:27:48.251448 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m10:27:48.253170 [info ] [Thread-2 (]: 80 of 80 START sql table model test.dataset_event_table ........................ [RUN]
[0m10:27:48.254410 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m10:27:48.254765 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m10:27:48.254934 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m10:27:48.261042 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:48.266933 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:48.270939 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:48.276459 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:27:48.284038 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m10:27:48.284559 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-04-17 10:27:48.255024 => 2024-04-17 10:27:48.284470
[0m10:27:48.284789 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m10:27:48.289128 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


  
  
  
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
    )
        ...
[0m10:27:48.352059 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m10:27:48.356039 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:27:48.360763 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.363104 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m10:27:48.363627 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  


  
  
  
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                --toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                --toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
  ...
[0m10:27:48.473106 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m10:27:48.474292 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m10:27:48.479659 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.483156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m10:27:48.486606 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:27:48.487771 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-04-17 10:27:48.284918 => 2024-04-17 10:27:48.487715
[0m10:27:48.488292 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '94fc6874-9466-4c3a-8267-c8b96244b24a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfc182b90>]}
[0m10:27:48.488641 [info ] [Thread-2 (]: 80 of 80 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.23s]
[0m10:27:48.488970 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m10:27:48.491260 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:27:48.491804 [debug] [MainThread]: Connection 'master' was properly closed.
[0m10:27:48.491953 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table' was left open.
[0m10:27:48.492081 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: Close
[0m10:27:48.492177 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m10:27:48.492342 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m10:27:48.492815 [info ] [MainThread]: 
[0m10:27:48.493209 [info ] [MainThread]: Finished running 38 view models, 12 incremental models, 30 table models in 0 hours 0 minutes and 11.12 seconds (11.12s).
[0m10:27:48.495872 [debug] [MainThread]: Command end result
[0m10:27:48.515082 [info ] [MainThread]: 
[0m10:27:48.515642 [info ] [MainThread]: [32mCompleted successfully[0m
[0m10:27:48.516041 [info ] [MainThread]: 
[0m10:27:48.516292 [info ] [MainThread]: Done. PASS=80 WARN=0 ERROR=0 SKIP=0 TOTAL=80
[0m10:27:48.517027 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcd62290>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfcd605b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6bfd267dc0>]}
[0m10:27:48.517490 [debug] [MainThread]: Flushing usage events
